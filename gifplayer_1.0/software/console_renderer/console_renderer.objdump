
console_renderer.elf:     file format elf32-littlenios2
console_renderer.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x10000230

Program Header:
    LOAD off    0x00001000 vaddr 0x10000000 paddr 0x10000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x10000020 paddr 0x10000020 align 2**12
         filesz 0x0000fc88 memsz 0x0000fc88 flags r-x
    LOAD off    0x00010ca8 vaddr 0x1000fca8 paddr 0x10011798 align 2**12
         filesz 0x00001af0 memsz 0x00001af0 flags rw-
    LOAD off    0x00013288 vaddr 0x10013288 paddr 0x10013288 align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  10000000  10000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000210  10000020  10000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000f76c  10000230  10000230  00001230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       0000030c  1000f99c  1000f99c  0001099c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001af0  1000fca8  10011798  00010ca8  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  10013288  10013288  00013288  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  00000000  00000000  00012798  2**0
                  CONTENTS
  7 .sdram        00000000  100133e8  100133e8  00012798  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  00012798  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00000ec0  00000000  00000000  000127c0  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   00023ade  00000000  00000000  00013680  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 00009062  00000000  00000000  0003715e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000b4f8  00000000  00000000  000401c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  00002094  00000000  00000000  0004b6b8  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00003897  00000000  00000000  0004d74c  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    000179fa  00000000  00000000  00050fe3  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000010  00000000  00000000  000689e0  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00001900  00000000  00000000  000689f0  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  0006d406  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000c  00000000  00000000  0006d409  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  0006d415  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  0006d416  2**0
                  CONTENTS, READONLY
 22 .sysid_hash   00000004  00000000  00000000  0006d417  2**0
                  CONTENTS, READONLY
 23 .sysid_base   00000004  00000000  00000000  0006d41b  2**0
                  CONTENTS, READONLY
 24 .sysid_time   00000004  00000000  00000000  0006d41f  2**0
                  CONTENTS, READONLY
 25 .stderr_dev   0000000b  00000000  00000000  0006d423  2**0
                  CONTENTS, READONLY
 26 .stdin_dev    0000000b  00000000  00000000  0006d42e  2**0
                  CONTENTS, READONLY
 27 .stdout_dev   0000000b  00000000  00000000  0006d439  2**0
                  CONTENTS, READONLY
 28 .sopc_system_name 0000000d  00000000  00000000  0006d444  2**0
                  CONTENTS, READONLY
 29 .quartus_project_dir 00000034  00000000  00000000  0006d451  2**0
                  CONTENTS, READONLY
 30 .jdi          00005803  00000000  00000000  0006d485  2**0
                  CONTENTS, READONLY
 31 .sopcinfo     00054ea2  00000000  00000000  00072c88  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
10000000 l    d  .entry	00000000 .entry
10000020 l    d  .exceptions	00000000 .exceptions
10000230 l    d  .text	00000000 .text
1000f99c l    d  .rodata	00000000 .rodata
1000fca8 l    d  .rwdata	00000000 .rwdata
10013288 l    d  .bss	00000000 .bss
00000000 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
100133e8 l    d  .sdram	00000000 .sdram
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../console_renderer_bsp//obj/HAL/src/crt0.o
10000268 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 vfprintf.c
1000f9ee l     O .rodata	00000010 zeroes.4404
10002694 l     F .text	000000bc __sbprintf
1000f9fe l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
100028a4 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
100043fc l     F .text	00000008 __fp_unlock
10004410 l     F .text	0000019c __sinit.part.1
100045ac l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
1000fca8 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
100100ec l     O .rwdata	00000020 lc_ctype_charset
100100cc l     O .rwdata	00000020 lc_message_charset
1001010c l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
1000fa30 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
100070f8 l     F .text	000000fc __sprint_r.part.0
1000fb54 l     O .rodata	00000010 zeroes.4349
10008734 l     F .text	000000bc __sbprintf
1000fb64 l     O .rodata	00000010 blanks.4348
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
1000d304 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
1000d418 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
1000d444 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
1000d538 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
1000d620 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
1000d70c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
1000d8e8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
10011788 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
1000db5c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
1000dc98 l     F .text	00000034 alt_dev_reg
100106f4 l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
1000df74 l     F .text	0000020c altera_avalon_jtag_uart_irq
1000e180 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
1000e904 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
1000ed64 l     F .text	000000e4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
1000eec4 l     F .text	0000003c alt_get_errno
1000ef00 l     F .text	000000ec alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
100132bc g     O .bss	00000004 alt_instruction_exception_handler
10000384 g     F .text	00000018 putchar
10006aa0 g     F .text	00000074 _mprec_log10
10006b8c g     F .text	0000008c __any_on
10009308 g     F .text	00000054 _isatty_r
1000fa3c g     O .rodata	00000028 __mprec_tinytens
1000d824 g     F .text	0000007c alt_main
100132e8 g     O .bss	00000100 alt_irq
1000935c g     F .text	00000060 _lseek_r
10011798 g       *ABS*	00000000 __flash_rwdata_start
1000bcdc g     F .text	00000088 .hidden __eqdf2
100133e8 g       *ABS*	00000000 __alt_heap_start
10000340 g     F .text	0000003c printf
10009adc g     F .text	0000009c _wcrtomb_r
10006f20 g     F .text	0000005c __sseek
1000475c g     F .text	00000010 __sinit
100087f0 g     F .text	00000140 __swbuf_r
10004d68 g     F .text	0000007c _setlocale_r
100045b4 g     F .text	00000078 __sfmoreglue
1000d8c4 g     F .text	00000024 __malloc_unlock
100093bc g     F .text	0000015c memmove
10004744 g     F .text	00000018 _cleanup
10005b60 g     F .text	000000a8 _Balloc
1000bd64 g     F .text	000000dc .hidden __gtdf2
1000f2ec g     F .text	00000024 altera_nios2_gen2_irq_init
10000000 g     F .entry	0000000c __reset
10000020 g       *ABS*	00000000 __flash_exceptions_start
10008de4 g     F .text	0000005c _fstat_r
100132a0 g     O .bss	00000004 errno
10006e9c g     F .text	00000008 __seofread
100132a8 g     O .bss	00000004 alt_argv
10019754 g       *ABS*	00000000 _gp
10010574 g     O .rwdata	00000180 alt_fd_list
1000037c g     F .text	00000008 _putchar_r
1000f310 g     F .text	00000090 alt_find_dev
100058f0 g     F .text	00000148 memcpy
10004404 g     F .text	0000000c _cleanup_r
1000d11c g     F .text	000000dc .hidden __floatsidf
1000ee48 g     F .text	0000007c alt_io_redirect
1000be40 g     F .text	000000f4 .hidden __ltdf2
1000f99c g       *ABS*	00000000 __DTOR_END__
1000f56c g     F .text	0000009c alt_exception_cause_generated_bad_addr
10006d80 g     F .text	00000074 __fpclassifyd
100069fc g     F .text	000000a4 __ratio
10008718 g     F .text	0000001c __vfiprintf_internal
1000e378 g     F .text	0000021c altera_avalon_jtag_uart_read
10000310 g     F .text	00000030 _printf_r
00000000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
1000a97c g     F .text	00000064 .hidden __udivsi3
1000d574 g     F .text	000000ac isatty
1000fa8c g     O .rodata	000000c8 __mprec_tens
10004de4 g     F .text	0000000c __locale_charset
1001329c g     O .bss	00000004 __malloc_top_pad
10011760 g     O .rwdata	00000004 __mb_cur_max
10004e14 g     F .text	0000000c _localeconv_r
10008e40 g     F .text	000004c8 __sfvwrite_r
10005f94 g     F .text	0000003c __i2b
10006df4 g     F .text	00000054 _sbrk_r
10009518 g     F .text	00000060 _read_r
10011780 g     O .rwdata	00000004 alt_max_fd
10008ad8 g     F .text	000000f0 _fclose_r
100043cc g     F .text	00000030 fflush
10013298 g     O .bss	00000004 __malloc_max_sbrked_mem
1000aa60 g     F .text	000008ac .hidden __adddf3
100067a4 g     F .text	0000010c __b2d
1000a2c0 g     F .text	000005c4 .hidden __umoddi3
1000d748 g     F .text	000000dc lseek
10011758 g     O .rwdata	00000004 _global_impure_ptr
10009578 g     F .text	00000564 _realloc_r
100133e8 g       *ABS*	00000000 __bss_end
1000ec74 g     F .text	000000f0 alt_iic_isr_register
1000f1e4 g     F .text	00000108 alt_tick
10009cc4 g     F .text	000005fc .hidden __udivdi3
10008d40 g     F .text	00000024 _fputwc_r
1000fa64 g     O .rodata	00000028 __mprec_bigtens
10005d78 g     F .text	00000104 __s2b
1000d1f8 g     F .text	000000a8 .hidden __floatunsidf
100064e4 g     F .text	00000060 __mcmp
1000477c g     F .text	00000018 __fp_lock_all
1000ec28 g     F .text	0000004c alt_ic_irq_enabled
1000f148 g     F .text	0000009c alt_alarm_stop
100132b0 g     O .bss	00000004 alt_irq_active
100000fc g     F .exceptions	000000d4 alt_irq_handler
1001054c g     O .rwdata	00000028 alt_dev_null
1000e8e4 g     F .text	00000020 alt_dcache_flush_all
10005e7c g     F .text	00000068 __hi0bits
1000d09c g     F .text	00000080 .hidden __fixdfsi
10011798 g       *ABS*	00000000 __ram_rwdata_end
10011778 g     O .rwdata	00000008 alt_dev_list
1000db98 g     F .text	00000100 write
10006c18 g     F .text	000000a0 _putc_r
1000fca8 g       *ABS*	00000000 __ram_rodata_end
1000d480 g     F .text	000000b8 fstat
1000be40 g     F .text	000000f4 .hidden __ledf2
1000625c g     F .text	00000140 __pow5mult
1000720c g     F .text	0000150c ___vfiprintf_internal_r
10013290 g     O .bss	00000004 __nlocale_changed
1000a9e0 g     F .text	00000058 .hidden __umodsi3
100133e8 g       *ABS*	00000000 end
1000deb4 g     F .text	000000c0 altera_avalon_jtag_uart_init
100001d0 g     F .exceptions	00000060 alt_instruction_exception_entry
1000f99c g       *ABS*	00000000 __CTOR_LIST__
18000000 g       *ABS*	00000000 __alt_stack_pointer
1000d2a0 g     F .text	00000064 .hidden __clzsi2
1000e594 g     F .text	00000224 altera_avalon_jtag_uart_write
1000476c g     F .text	00000004 __sfp_lock_acquire
1000580c g     F .text	000000e4 memchr
1000039c g     F .text	000022dc ___vfprintf_internal_r
100048d0 g     F .text	00000310 _free_r
10004df0 g     F .text	00000010 __locale_mb_cur_max
1000f7e8 g     F .text	00000180 __call_exitprocs
1001328c g     O .bss	00000004 __mlocale_changed
10011764 g     O .rwdata	00000004 __malloc_sbrk_base
10000230 g     F .text	0000003c _start
100132b4 g     O .bss	00000004 _alt_tick_rate
1000639c g     F .text	00000148 __lshift
100132b8 g     O .bss	00000004 _alt_nticks
1000d924 g     F .text	00000104 read
1000dd04 g     F .text	0000004c alt_sys_init
1000f6d0 g     F .text	00000118 __register_exitproc
10005fd0 g     F .text	0000028c __multiply
1000e220 g     F .text	00000068 altera_avalon_jtag_uart_close
1000aa38 g     F .text	00000028 .hidden __mulsi3
1000fca8 g       *ABS*	00000000 __ram_rwdata_start
1000f99c g       *ABS*	00000000 __ram_rodata_start
100132c0 g     O .bss	00000028 __malloc_current_mallinfo
100068b0 g     F .text	0000014c __d2b
1000dd50 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
1000f4a8 g     F .text	000000c4 alt_get_fd
100089a8 g     F .text	00000054 _close_r
1000f654 g     F .text	0000007c memcmp
1000de10 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
100133e8 g       *ABS*	00000000 __alt_stack_base
1000de60 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
10002750 g     F .text	00000154 __swsetup_r
1000b30c g     F .text	000009d0 .hidden __divdf3
1000462c g     F .text	00000118 __sfp
10006b14 g     F .text	00000078 __copybits
10010144 g     O .rwdata	00000408 __malloc_av_
10004778 g     F .text	00000004 __sinit_lock_release
1000bf34 g     F .text	0000086c .hidden __muldf3
10006e48 g     F .text	00000054 __sread
1000f3a0 g     F .text	00000108 alt_find_file
1000e940 g     F .text	000000a4 alt_dev_llist_insert
1000d8a0 g     F .text	00000024 __malloc_lock
1000daac g     F .text	000000b0 sbrk
10004370 g     F .text	0000005c _fflush_r
100089fc g     F .text	000000dc _calloc_r
10013288 g       *ABS*	00000000 __bss_start
10005a38 g     F .text	00000128 memset
1000026c g     F .text	000000a4 main
100132ac g     O .bss	00000004 alt_envp
10013294 g     O .bss	00000004 __malloc_max_total_mem
1000ddb0 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
10008930 g     F .text	00000018 __swbuf
10006f7c g     F .text	00000008 __sclose
18000000 g       *ABS*	00000000 __alt_heap_limit
10008bc8 g     F .text	00000014 fclose
10002acc g     F .text	00001688 _dtoa_r
10005000 g     F .text	0000080c _malloc_r
10009c38 g     F .text	00000030 __ascii_wctomb
10011784 g     O .rwdata	00000004 alt_errno
10004be0 g     F .text	000000c4 _fwalk
10006cb8 g     F .text	000000c8 putc
1000a884 g     F .text	00000084 .hidden __divsi3
100047ac g     F .text	00000124 _malloc_trim_r
1000f99c g       *ABS*	00000000 __CTOR_END__
10006f84 g     F .text	000000dc strcmp
1000f99c g       *ABS*	00000000 __flash_rodata_start
1000f99c g       *ABS*	00000000 __DTOR_LIST__
1000bcdc g     F .text	00000088 .hidden __nedf2
1000dccc g     F .text	00000038 alt_irq_init
1000da28 g     F .text	00000084 alt_release_fd
1000fb74 g     O .rodata	00000100 .hidden __clz_tab
10013288 g     O .bss	00000004 _PathLocale
1000f608 g     F .text	00000014 atexit
10008948 g     F .text	00000060 _write_r
10004e20 g     F .text	00000018 setlocale
1001175c g     O .rwdata	00000004 _impure_ptr
100132a4 g     O .bss	00000004 alt_argc
10004154 g     F .text	0000021c __sflush_r
1000ea44 g     F .text	00000060 _do_dtors
10004e0c g     F .text	00000008 __locale_cjk_lang
10000020 g       .exceptions	00000000 alt_irq_entry
10006740 g     F .text	00000064 __ulp
10004794 g     F .text	00000018 __fp_unlock_all
10011770 g     O .rwdata	00000008 alt_fs_list
10000020 g       *ABS*	00000000 __ram_exceptions_start
10004e38 g     F .text	0000000c localeconv
1000eac4 g     F .text	00000050 alt_ic_isr_register
10011798 g       *ABS*	00000000 _edata
100133e8 g       *ABS*	00000000 _end
10008bdc g     F .text	00000164 __fputwc
10000230 g       *ABS*	00000000 __ram_exceptions_end
1000e288 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
1000eb9c g     F .text	0000008c alt_ic_irq_disable
10006ea4 g     F .text	0000007c __swrite
10011754 g     O .rwdata	00000004 sram_ptr
10011768 g     O .rwdata	00000004 __malloc_trim_threshold
10004e00 g     F .text	0000000c __locale_msgcharset
1000f61c g     F .text	00000038 exit
10004ca4 g     F .text	000000c4 _fwalk_reent
10006544 g     F .text	000001fc __mdiff
1000a908 g     F .text	00000074 .hidden __modsi3
18000000 g       *ABS*	00000000 __alt_data_end
10000020 g     F .exceptions	00000000 alt_exception
10004770 g     F .text	00000004 __sfp_lock_release
10000000 g       *ABS*	00000000 __alt_mem_sdram
1000f968 g     F .text	00000034 _exit
1000e7b8 g     F .text	0000012c alt_alarm_start
10004e44 g     F .text	000001bc __smakebuf_r
10007060 g     F .text	00000098 strlen
1000efec g     F .text	0000015c open
1000bd64 g     F .text	000000dc .hidden __gedf2
1001176c g     O .rwdata	00000004 __wctomb
100071f4 g     F .text	00000018 __sprint_r
1000eaa4 g     F .text	00000020 alt_icache_flush_all
1001178c g     O .rwdata	00000004 alt_priority_mask
1000eb14 g     F .text	00000088 alt_ic_irq_enable
10002678 g     F .text	0000001c __vfprintf_internal
10009c68 g     F .text	0000005c _wctomb_r
1000c7a0 g     F .text	000008fc .hidden __subdf3
10005ee4 g     F .text	000000b0 __lo0bits
10011790 g     O .rwdata	00000008 alt_alarm_list
1000e9e4 g     F .text	00000060 _do_ctors
10009b78 g     F .text	000000c0 wcrtomb
1000d340 g     F .text	000000d8 close
1000d688 g     F .text	00000084 alt_load
10008d64 g     F .text	00000080 fputwc
10004774 g     F .text	00000004 __sinit_lock_acquire
10005c30 g     F .text	00000148 __multadd
10005c08 g     F .text	00000028 _Bfree



Disassembly of section .entry:

10000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
10000000:	00440034 	movhi	at,4096
    ori r1, r1, %lo(_start)
10000004:	08408c14 	ori	at,at,560
    jmp r1
10000008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

10000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
10000020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
10000024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
10000028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
1000002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
10000030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
10000034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
10000038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
1000003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
10000040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
10000044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
10000048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
1000004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
10000050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
10000054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
10000058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
1000005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
10000060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
10000064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
10000068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
1000006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
10000070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
10000074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
10000078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
1000007c:	10000326 	beq	r2,zero,1000008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
10000080:	20000226 	beq	r4,zero,1000008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
10000084:	00000fc0 	call	100000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
10000088:	00000706 	br	100000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
1000008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
10000090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
10000094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
10000098:	00001d00 	call	100001d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
1000009c:	1000021e 	bne	r2,zero,100000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
100000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
100000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
100000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
100000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
100000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
100000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
100000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
100000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
100000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
100000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
100000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
100000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
100000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
100000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
100000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
100000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
100000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
100000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
100000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
100000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
100000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
100000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
100000f8:	ef80083a 	eret

100000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
100000fc:	defff904 	addi	sp,sp,-28
10000100:	dfc00615 	stw	ra,24(sp)
10000104:	df000515 	stw	fp,20(sp)
10000108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
1000010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
10000110:	0005313a 	rdctl	r2,ipending
10000114:	e0bffe15 	stw	r2,-8(fp)

  return active;
10000118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
1000011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
10000120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
10000124:	00800044 	movi	r2,1
10000128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
1000012c:	e0fffb17 	ldw	r3,-20(fp)
10000130:	e0bffc17 	ldw	r2,-16(fp)
10000134:	1884703a 	and	r2,r3,r2
10000138:	10001426 	beq	r2,zero,1000018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
1000013c:	00840074 	movhi	r2,4097
10000140:	108cba04 	addi	r2,r2,13032
10000144:	e0fffd17 	ldw	r3,-12(fp)
10000148:	180690fa 	slli	r3,r3,3
1000014c:	10c5883a 	add	r2,r2,r3
10000150:	10c00017 	ldw	r3,0(r2)
10000154:	00840074 	movhi	r2,4097
10000158:	108cba04 	addi	r2,r2,13032
1000015c:	e13ffd17 	ldw	r4,-12(fp)
10000160:	200890fa 	slli	r4,r4,3
10000164:	1105883a 	add	r2,r2,r4
10000168:	10800104 	addi	r2,r2,4
1000016c:	10800017 	ldw	r2,0(r2)
10000170:	1009883a 	mov	r4,r2
10000174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
10000178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
1000017c:	0005313a 	rdctl	r2,ipending
10000180:	e0bfff15 	stw	r2,-4(fp)

  return active;
10000184:	e0bfff17 	ldw	r2,-4(fp)
10000188:	00000706 	br	100001a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
1000018c:	e0bffc17 	ldw	r2,-16(fp)
10000190:	1085883a 	add	r2,r2,r2
10000194:	e0bffc15 	stw	r2,-16(fp)
      i++;
10000198:	e0bffd17 	ldw	r2,-12(fp)
1000019c:	10800044 	addi	r2,r2,1
100001a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
100001a4:	003fe106 	br	1000012c <__alt_data_end+0xf800012c>

    active = alt_irq_pending ();
100001a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
100001ac:	e0bffb17 	ldw	r2,-20(fp)
100001b0:	103fdb1e 	bne	r2,zero,10000120 <__alt_data_end+0xf8000120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
100001b4:	0001883a 	nop
}
100001b8:	0001883a 	nop
100001bc:	e037883a 	mov	sp,fp
100001c0:	dfc00117 	ldw	ra,4(sp)
100001c4:	df000017 	ldw	fp,0(sp)
100001c8:	dec00204 	addi	sp,sp,8
100001cc:	f800283a 	ret

100001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
100001d0:	defffb04 	addi	sp,sp,-20
100001d4:	dfc00415 	stw	ra,16(sp)
100001d8:	df000315 	stw	fp,12(sp)
100001dc:	df000304 	addi	fp,sp,12
100001e0:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
100001e4:	00bfffc4 	movi	r2,-1
100001e8:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
100001ec:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
100001f0:	d0a6da17 	ldw	r2,-25752(gp)
100001f4:	10000726 	beq	r2,zero,10000214 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
100001f8:	d0a6da17 	ldw	r2,-25752(gp)
100001fc:	e0fffd17 	ldw	r3,-12(fp)
10000200:	e1bffe17 	ldw	r6,-8(fp)
10000204:	e17fff17 	ldw	r5,-4(fp)
10000208:	1809883a 	mov	r4,r3
1000020c:	103ee83a 	callr	r2
10000210:	00000206 	br	1000021c <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
10000214:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
10000218:	0005883a 	mov	r2,zero
}
1000021c:	e037883a 	mov	sp,fp
10000220:	dfc00117 	ldw	ra,4(sp)
10000224:	df000017 	ldw	fp,0(sp)
10000228:	dec00204 	addi	sp,sp,8
1000022c:	f800283a 	ret

Disassembly of section .text:

10000230 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
10000230:	06c60034 	movhi	sp,6144
    ori sp, sp, %lo(__alt_stack_pointer)
10000234:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
10000238:	06840074 	movhi	gp,4097
    ori gp, gp, %lo(_gp)
1000023c:	d6a5d514 	ori	gp,gp,38740
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
10000240:	00840074 	movhi	r2,4097
    ori r2, r2, %lo(__bss_start)
10000244:	108ca214 	ori	r2,r2,12936

    movhi r3, %hi(__bss_end)
10000248:	00c40074 	movhi	r3,4097
    ori r3, r3, %lo(__bss_end)
1000024c:	18ccfa14 	ori	r3,r3,13288

    beq r2, r3, 1f
10000250:	10c00326 	beq	r2,r3,10000260 <_start+0x30>

0:
    stw zero, (r2)
10000254:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
10000258:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
1000025c:	10fffd36 	bltu	r2,r3,10000254 <__alt_data_end+0xf8000254>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
10000260:	000d6880 	call	1000d688 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
10000264:	000d8240 	call	1000d824 <alt_main>

10000268 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
10000268:	003fff06 	br	10000268 <__alt_data_end+0xf8000268>

1000026c <main>:
#include <stdlib.h>

#include "structs.h"
volatile unsigned char* sram_ptr = 0x00400000;

int main() {
1000026c:	defffc04 	addi	sp,sp,-16
10000270:	dfc00315 	stw	ra,12(sp)
10000274:	df000215 	stw	fp,8(sp)
10000278:	df000204 	addi	fp,sp,8

	for (int i = 0; i < 100; i++) {
1000027c:	e03ffe15 	stw	zero,-8(fp)
10000280:	00001706 	br	100002e0 <main+0x74>
		for (int j = 0; j < 16; j++) {
10000284:	e03fff15 	stw	zero,-4(fp)
10000288:	00000d06 	br	100002c0 <main+0x54>
			printf("%02x ", *sram_ptr);
1000028c:	d0a00017 	ldw	r2,-32768(gp)
10000290:	10800003 	ldbu	r2,0(r2)
10000294:	10803fcc 	andi	r2,r2,255
10000298:	100b883a 	mov	r5,r2
1000029c:	01040074 	movhi	r4,4097
100002a0:	213e6704 	addi	r4,r4,-1636
100002a4:	00003400 	call	10000340 <printf>
			sram_ptr = sram_ptr + 8;
100002a8:	d0a00017 	ldw	r2,-32768(gp)
100002ac:	10800204 	addi	r2,r2,8
100002b0:	d0a00015 	stw	r2,-32768(gp)
volatile unsigned char* sram_ptr = 0x00400000;

int main() {

	for (int i = 0; i < 100; i++) {
		for (int j = 0; j < 16; j++) {
100002b4:	e0bfff17 	ldw	r2,-4(fp)
100002b8:	10800044 	addi	r2,r2,1
100002bc:	e0bfff15 	stw	r2,-4(fp)
100002c0:	e0bfff17 	ldw	r2,-4(fp)
100002c4:	10800410 	cmplti	r2,r2,16
100002c8:	103ff01e 	bne	r2,zero,1000028c <__alt_data_end+0xf800028c>
			printf("%02x ", *sram_ptr);
			sram_ptr = sram_ptr + 8;
		}
		printf("\n");
100002cc:	01000284 	movi	r4,10
100002d0:	00003840 	call	10000384 <putchar>
#include "structs.h"
volatile unsigned char* sram_ptr = 0x00400000;

int main() {

	for (int i = 0; i < 100; i++) {
100002d4:	e0bffe17 	ldw	r2,-8(fp)
100002d8:	10800044 	addi	r2,r2,1
100002dc:	e0bffe15 	stw	r2,-8(fp)
100002e0:	e0bffe17 	ldw	r2,-8(fp)
100002e4:	10801910 	cmplti	r2,r2,100
100002e8:	103fe61e 	bne	r2,zero,10000284 <__alt_data_end+0xf8000284>
			printf("%02x ", *sram_ptr);
			sram_ptr = sram_ptr + 8;
		}
		printf("\n");
	}
	printf("done");
100002ec:	01040074 	movhi	r4,4097
100002f0:	213e6904 	addi	r4,r4,-1628
100002f4:	00003400 	call	10000340 <printf>
100002f8:	0005883a 	mov	r2,zero
}
100002fc:	e037883a 	mov	sp,fp
10000300:	dfc00117 	ldw	ra,4(sp)
10000304:	df000017 	ldw	fp,0(sp)
10000308:	dec00204 	addi	sp,sp,8
1000030c:	f800283a 	ret

10000310 <_printf_r>:
10000310:	defffd04 	addi	sp,sp,-12
10000314:	2805883a 	mov	r2,r5
10000318:	dfc00015 	stw	ra,0(sp)
1000031c:	d9800115 	stw	r6,4(sp)
10000320:	d9c00215 	stw	r7,8(sp)
10000324:	21400217 	ldw	r5,8(r4)
10000328:	d9c00104 	addi	r7,sp,4
1000032c:	100d883a 	mov	r6,r2
10000330:	000039c0 	call	1000039c <___vfprintf_internal_r>
10000334:	dfc00017 	ldw	ra,0(sp)
10000338:	dec00304 	addi	sp,sp,12
1000033c:	f800283a 	ret

10000340 <printf>:
10000340:	defffc04 	addi	sp,sp,-16
10000344:	dfc00015 	stw	ra,0(sp)
10000348:	d9400115 	stw	r5,4(sp)
1000034c:	d9800215 	stw	r6,8(sp)
10000350:	d9c00315 	stw	r7,12(sp)
10000354:	00840074 	movhi	r2,4097
10000358:	1085d704 	addi	r2,r2,5980
1000035c:	10800017 	ldw	r2,0(r2)
10000360:	200b883a 	mov	r5,r4
10000364:	d9800104 	addi	r6,sp,4
10000368:	11000217 	ldw	r4,8(r2)
1000036c:	00026780 	call	10002678 <__vfprintf_internal>
10000370:	dfc00017 	ldw	ra,0(sp)
10000374:	dec00404 	addi	sp,sp,16
10000378:	f800283a 	ret

1000037c <_putchar_r>:
1000037c:	21800217 	ldw	r6,8(r4)
10000380:	0006c181 	jmpi	10006c18 <_putc_r>

10000384 <putchar>:
10000384:	00840074 	movhi	r2,4097
10000388:	1085d704 	addi	r2,r2,5980
1000038c:	200b883a 	mov	r5,r4
10000390:	11000017 	ldw	r4,0(r2)
10000394:	21800217 	ldw	r6,8(r4)
10000398:	0006c181 	jmpi	10006c18 <_putc_r>

1000039c <___vfprintf_internal_r>:
1000039c:	deffb804 	addi	sp,sp,-288
100003a0:	dfc04715 	stw	ra,284(sp)
100003a4:	ddc04515 	stw	r23,276(sp)
100003a8:	dd404315 	stw	r21,268(sp)
100003ac:	d9002d15 	stw	r4,180(sp)
100003b0:	282f883a 	mov	r23,r5
100003b4:	302b883a 	mov	r21,r6
100003b8:	d9c02e15 	stw	r7,184(sp)
100003bc:	df004615 	stw	fp,280(sp)
100003c0:	dd804415 	stw	r22,272(sp)
100003c4:	dd004215 	stw	r20,264(sp)
100003c8:	dcc04115 	stw	r19,260(sp)
100003cc:	dc804015 	stw	r18,256(sp)
100003d0:	dc403f15 	stw	r17,252(sp)
100003d4:	dc003e15 	stw	r16,248(sp)
100003d8:	0004e140 	call	10004e14 <_localeconv_r>
100003dc:	10800017 	ldw	r2,0(r2)
100003e0:	1009883a 	mov	r4,r2
100003e4:	d8803415 	stw	r2,208(sp)
100003e8:	00070600 	call	10007060 <strlen>
100003ec:	d8803715 	stw	r2,220(sp)
100003f0:	d8802d17 	ldw	r2,180(sp)
100003f4:	10000226 	beq	r2,zero,10000400 <___vfprintf_internal_r+0x64>
100003f8:	10800e17 	ldw	r2,56(r2)
100003fc:	1000fb26 	beq	r2,zero,100007ec <___vfprintf_internal_r+0x450>
10000400:	b880030b 	ldhu	r2,12(r23)
10000404:	10c8000c 	andi	r3,r2,8192
10000408:	1800061e 	bne	r3,zero,10000424 <___vfprintf_internal_r+0x88>
1000040c:	b9001917 	ldw	r4,100(r23)
10000410:	00f7ffc4 	movi	r3,-8193
10000414:	10880014 	ori	r2,r2,8192
10000418:	20c6703a 	and	r3,r4,r3
1000041c:	b880030d 	sth	r2,12(r23)
10000420:	b8c01915 	stw	r3,100(r23)
10000424:	10c0020c 	andi	r3,r2,8
10000428:	1800c326 	beq	r3,zero,10000738 <___vfprintf_internal_r+0x39c>
1000042c:	b8c00417 	ldw	r3,16(r23)
10000430:	1800c126 	beq	r3,zero,10000738 <___vfprintf_internal_r+0x39c>
10000434:	1080068c 	andi	r2,r2,26
10000438:	00c00284 	movi	r3,10
1000043c:	10c0c626 	beq	r2,r3,10000758 <___vfprintf_internal_r+0x3bc>
10000440:	d8c00404 	addi	r3,sp,16
10000444:	05040074 	movhi	r20,4097
10000448:	d9001e04 	addi	r4,sp,120
1000044c:	a53e7b84 	addi	r20,r20,-1554
10000450:	d8c01e15 	stw	r3,120(sp)
10000454:	d8002015 	stw	zero,128(sp)
10000458:	d8001f15 	stw	zero,124(sp)
1000045c:	d8003315 	stw	zero,204(sp)
10000460:	d8003615 	stw	zero,216(sp)
10000464:	d8003815 	stw	zero,224(sp)
10000468:	1811883a 	mov	r8,r3
1000046c:	d8003915 	stw	zero,228(sp)
10000470:	d8003a15 	stw	zero,232(sp)
10000474:	d8002f15 	stw	zero,188(sp)
10000478:	d9002815 	stw	r4,160(sp)
1000047c:	a8800007 	ldb	r2,0(r21)
10000480:	10028b26 	beq	r2,zero,10000eb0 <___vfprintf_internal_r+0xb14>
10000484:	00c00944 	movi	r3,37
10000488:	a823883a 	mov	r17,r21
1000048c:	10c0021e 	bne	r2,r3,10000498 <___vfprintf_internal_r+0xfc>
10000490:	00001406 	br	100004e4 <___vfprintf_internal_r+0x148>
10000494:	10c00326 	beq	r2,r3,100004a4 <___vfprintf_internal_r+0x108>
10000498:	8c400044 	addi	r17,r17,1
1000049c:	88800007 	ldb	r2,0(r17)
100004a0:	103ffc1e 	bne	r2,zero,10000494 <__alt_data_end+0xf8000494>
100004a4:	8d61c83a 	sub	r16,r17,r21
100004a8:	80000e26 	beq	r16,zero,100004e4 <___vfprintf_internal_r+0x148>
100004ac:	d8c02017 	ldw	r3,128(sp)
100004b0:	d8801f17 	ldw	r2,124(sp)
100004b4:	45400015 	stw	r21,0(r8)
100004b8:	1c07883a 	add	r3,r3,r16
100004bc:	10800044 	addi	r2,r2,1
100004c0:	d8c02015 	stw	r3,128(sp)
100004c4:	44000115 	stw	r16,4(r8)
100004c8:	d8801f15 	stw	r2,124(sp)
100004cc:	00c001c4 	movi	r3,7
100004d0:	1880a916 	blt	r3,r2,10000778 <___vfprintf_internal_r+0x3dc>
100004d4:	42000204 	addi	r8,r8,8
100004d8:	d9402f17 	ldw	r5,188(sp)
100004dc:	2c0b883a 	add	r5,r5,r16
100004e0:	d9402f15 	stw	r5,188(sp)
100004e4:	88800007 	ldb	r2,0(r17)
100004e8:	1000aa26 	beq	r2,zero,10000794 <___vfprintf_internal_r+0x3f8>
100004ec:	8d400044 	addi	r21,r17,1
100004f0:	8c400047 	ldb	r17,1(r17)
100004f4:	0021883a 	mov	r16,zero
100004f8:	00bfffc4 	movi	r2,-1
100004fc:	0025883a 	mov	r18,zero
10000500:	dc002905 	stb	r16,164(sp)
10000504:	d8002785 	stb	zero,158(sp)
10000508:	d8002b05 	stb	zero,172(sp)
1000050c:	d8802a15 	stw	r2,168(sp)
10000510:	d8003115 	stw	zero,196(sp)
10000514:	04c01604 	movi	r19,88
10000518:	05800244 	movi	r22,9
1000051c:	9021883a 	mov	r16,r18
10000520:	4039883a 	mov	fp,r8
10000524:	ad400044 	addi	r21,r21,1
10000528:	88bff804 	addi	r2,r17,-32
1000052c:	98833236 	bltu	r19,r2,100011f8 <___vfprintf_internal_r+0xe5c>
10000530:	100490ba 	slli	r2,r2,2
10000534:	00c40034 	movhi	r3,4096
10000538:	18c15204 	addi	r3,r3,1352
1000053c:	10c5883a 	add	r2,r2,r3
10000540:	10800017 	ldw	r2,0(r2)
10000544:	1000683a 	jmp	r2
10000548:	100010f0 	cmpltui	zero,r2,67
1000054c:	100011f8 	rdprs	zero,r2,71
10000550:	100011f8 	rdprs	zero,r2,71
10000554:	10001110 	cmplti	zero,r2,68
10000558:	100011f8 	rdprs	zero,r2,71
1000055c:	100011f8 	rdprs	zero,r2,71
10000560:	100011f8 	rdprs	zero,r2,71
10000564:	100011f8 	rdprs	zero,r2,71
10000568:	100011f8 	rdprs	zero,r2,71
1000056c:	100011f8 	rdprs	zero,r2,71
10000570:	100007f8 	rdprs	zero,r2,31
10000574:	10001000 	call	11000100 <_gp+0xfe69ac>
10000578:	100011f8 	rdprs	zero,r2,71
1000057c:	100006bc 	xorhi	zero,r2,26
10000580:	1000081c 	xori	zero,r2,32
10000584:	100011f8 	rdprs	zero,r2,71
10000588:	1000086c 	andhi	zero,r2,33
1000058c:	10000878 	rdprs	zero,r2,33
10000590:	10000878 	rdprs	zero,r2,33
10000594:	10000878 	rdprs	zero,r2,33
10000598:	10000878 	rdprs	zero,r2,33
1000059c:	10000878 	rdprs	zero,r2,33
100005a0:	10000878 	rdprs	zero,r2,33
100005a4:	10000878 	rdprs	zero,r2,33
100005a8:	10000878 	rdprs	zero,r2,33
100005ac:	10000878 	rdprs	zero,r2,33
100005b0:	100011f8 	rdprs	zero,r2,71
100005b4:	100011f8 	rdprs	zero,r2,71
100005b8:	100011f8 	rdprs	zero,r2,71
100005bc:	100011f8 	rdprs	zero,r2,71
100005c0:	100011f8 	rdprs	zero,r2,71
100005c4:	100011f8 	rdprs	zero,r2,71
100005c8:	100011f8 	rdprs	zero,r2,71
100005cc:	100011f8 	rdprs	zero,r2,71
100005d0:	100011f8 	rdprs	zero,r2,71
100005d4:	100011f8 	rdprs	zero,r2,71
100005d8:	100008b4 	orhi	zero,r2,34
100005dc:	1000097c 	xorhi	zero,r2,37
100005e0:	100011f8 	rdprs	zero,r2,71
100005e4:	1000097c 	xorhi	zero,r2,37
100005e8:	100011f8 	rdprs	zero,r2,71
100005ec:	100011f8 	rdprs	zero,r2,71
100005f0:	100011f8 	rdprs	zero,r2,71
100005f4:	100011f8 	rdprs	zero,r2,71
100005f8:	10000a28 	cmpgeui	zero,r2,40
100005fc:	100011f8 	rdprs	zero,r2,71
10000600:	100011f8 	rdprs	zero,r2,71
10000604:	10000a34 	orhi	zero,r2,40
10000608:	100011f8 	rdprs	zero,r2,71
1000060c:	100011f8 	rdprs	zero,r2,71
10000610:	100011f8 	rdprs	zero,r2,71
10000614:	100011f8 	rdprs	zero,r2,71
10000618:	100011f8 	rdprs	zero,r2,71
1000061c:	10000eb8 	rdprs	zero,r2,58
10000620:	100011f8 	rdprs	zero,r2,71
10000624:	100011f8 	rdprs	zero,r2,71
10000628:	10000f24 	muli	zero,r2,60
1000062c:	100011f8 	rdprs	zero,r2,71
10000630:	100011f8 	rdprs	zero,r2,71
10000634:	100011f8 	rdprs	zero,r2,71
10000638:	100011f8 	rdprs	zero,r2,71
1000063c:	100011f8 	rdprs	zero,r2,71
10000640:	100011f8 	rdprs	zero,r2,71
10000644:	100011f8 	rdprs	zero,r2,71
10000648:	100011f8 	rdprs	zero,r2,71
1000064c:	100011f8 	rdprs	zero,r2,71
10000650:	100011f8 	rdprs	zero,r2,71
10000654:	1000119c 	xori	zero,r2,70
10000658:	1000111c 	xori	zero,r2,68
1000065c:	1000097c 	xorhi	zero,r2,37
10000660:	1000097c 	xorhi	zero,r2,37
10000664:	1000097c 	xorhi	zero,r2,37
10000668:	1000113c 	xorhi	zero,r2,68
1000066c:	1000111c 	xori	zero,r2,68
10000670:	100011f8 	rdprs	zero,r2,71
10000674:	100011f8 	rdprs	zero,r2,71
10000678:	10001148 	cmpgei	zero,r2,69
1000067c:	100011f8 	rdprs	zero,r2,71
10000680:	1000115c 	xori	zero,r2,69
10000684:	10000fe0 	cmpeqi	zero,r2,63
10000688:	100006c8 	cmpgei	zero,r2,27
1000068c:	10001018 	cmpnei	zero,r2,64
10000690:	100011f8 	rdprs	zero,r2,71
10000694:	10001024 	muli	zero,r2,64
10000698:	100011f8 	rdprs	zero,r2,71
1000069c:	10001088 	cmpgei	zero,r2,66
100006a0:	100011f8 	rdprs	zero,r2,71
100006a4:	100011f8 	rdprs	zero,r2,71
100006a8:	100010a8 	cmpgeui	zero,r2,66
100006ac:	d8c03117 	ldw	r3,196(sp)
100006b0:	d8802e15 	stw	r2,184(sp)
100006b4:	00c7c83a 	sub	r3,zero,r3
100006b8:	d8c03115 	stw	r3,196(sp)
100006bc:	84000114 	ori	r16,r16,4
100006c0:	ac400007 	ldb	r17,0(r21)
100006c4:	003f9706 	br	10000524 <__alt_data_end+0xf8000524>
100006c8:	00800c04 	movi	r2,48
100006cc:	d8802705 	stb	r2,156(sp)
100006d0:	00801e04 	movi	r2,120
100006d4:	d8802745 	stb	r2,157(sp)
100006d8:	d9002a17 	ldw	r4,168(sp)
100006dc:	d8802e17 	ldw	r2,184(sp)
100006e0:	d8002785 	stb	zero,158(sp)
100006e4:	e011883a 	mov	r8,fp
100006e8:	10c00104 	addi	r3,r2,4
100006ec:	14c00017 	ldw	r19,0(r2)
100006f0:	002d883a 	mov	r22,zero
100006f4:	80800094 	ori	r2,r16,2
100006f8:	2002ca16 	blt	r4,zero,10001224 <___vfprintf_internal_r+0xe88>
100006fc:	00bfdfc4 	movi	r2,-129
10000700:	80a4703a 	and	r18,r16,r2
10000704:	d8c02e15 	stw	r3,184(sp)
10000708:	94800094 	ori	r18,r18,2
1000070c:	9802b41e 	bne	r19,zero,100011e0 <___vfprintf_internal_r+0xe44>
10000710:	01440074 	movhi	r5,4097
10000714:	297e7404 	addi	r5,r5,-1584
10000718:	d9403915 	stw	r5,228(sp)
1000071c:	04401e04 	movi	r17,120
10000720:	d8802a17 	ldw	r2,168(sp)
10000724:	0039883a 	mov	fp,zero
10000728:	1001fa26 	beq	r2,zero,10000f14 <___vfprintf_internal_r+0xb78>
1000072c:	0027883a 	mov	r19,zero
10000730:	002d883a 	mov	r22,zero
10000734:	00021906 	br	10000f9c <___vfprintf_internal_r+0xc00>
10000738:	d9002d17 	ldw	r4,180(sp)
1000073c:	b80b883a 	mov	r5,r23
10000740:	00027500 	call	10002750 <__swsetup_r>
10000744:	1005dc1e 	bne	r2,zero,10001eb8 <___vfprintf_internal_r+0x1b1c>
10000748:	b880030b 	ldhu	r2,12(r23)
1000074c:	00c00284 	movi	r3,10
10000750:	1080068c 	andi	r2,r2,26
10000754:	10ff3a1e 	bne	r2,r3,10000440 <__alt_data_end+0xf8000440>
10000758:	b880038f 	ldh	r2,14(r23)
1000075c:	103f3816 	blt	r2,zero,10000440 <__alt_data_end+0xf8000440>
10000760:	d9c02e17 	ldw	r7,184(sp)
10000764:	d9002d17 	ldw	r4,180(sp)
10000768:	a80d883a 	mov	r6,r21
1000076c:	b80b883a 	mov	r5,r23
10000770:	00026940 	call	10002694 <__sbprintf>
10000774:	00001106 	br	100007bc <___vfprintf_internal_r+0x420>
10000778:	d9002d17 	ldw	r4,180(sp)
1000077c:	d9801e04 	addi	r6,sp,120
10000780:	b80b883a 	mov	r5,r23
10000784:	00071f40 	call	100071f4 <__sprint_r>
10000788:	1000081e 	bne	r2,zero,100007ac <___vfprintf_internal_r+0x410>
1000078c:	da000404 	addi	r8,sp,16
10000790:	003f5106 	br	100004d8 <__alt_data_end+0xf80004d8>
10000794:	d8802017 	ldw	r2,128(sp)
10000798:	10000426 	beq	r2,zero,100007ac <___vfprintf_internal_r+0x410>
1000079c:	d9002d17 	ldw	r4,180(sp)
100007a0:	d9801e04 	addi	r6,sp,120
100007a4:	b80b883a 	mov	r5,r23
100007a8:	00071f40 	call	100071f4 <__sprint_r>
100007ac:	b880030b 	ldhu	r2,12(r23)
100007b0:	1080100c 	andi	r2,r2,64
100007b4:	1005c01e 	bne	r2,zero,10001eb8 <___vfprintf_internal_r+0x1b1c>
100007b8:	d8802f17 	ldw	r2,188(sp)
100007bc:	dfc04717 	ldw	ra,284(sp)
100007c0:	df004617 	ldw	fp,280(sp)
100007c4:	ddc04517 	ldw	r23,276(sp)
100007c8:	dd804417 	ldw	r22,272(sp)
100007cc:	dd404317 	ldw	r21,268(sp)
100007d0:	dd004217 	ldw	r20,264(sp)
100007d4:	dcc04117 	ldw	r19,260(sp)
100007d8:	dc804017 	ldw	r18,256(sp)
100007dc:	dc403f17 	ldw	r17,252(sp)
100007e0:	dc003e17 	ldw	r16,248(sp)
100007e4:	dec04804 	addi	sp,sp,288
100007e8:	f800283a 	ret
100007ec:	d9002d17 	ldw	r4,180(sp)
100007f0:	000475c0 	call	1000475c <__sinit>
100007f4:	003f0206 	br	10000400 <__alt_data_end+0xf8000400>
100007f8:	d9002e17 	ldw	r4,184(sp)
100007fc:	d9402e17 	ldw	r5,184(sp)
10000800:	21000017 	ldw	r4,0(r4)
10000804:	28800104 	addi	r2,r5,4
10000808:	d9003115 	stw	r4,196(sp)
1000080c:	203fa716 	blt	r4,zero,100006ac <__alt_data_end+0xf80006ac>
10000810:	d8802e15 	stw	r2,184(sp)
10000814:	ac400007 	ldb	r17,0(r21)
10000818:	003f4206 	br	10000524 <__alt_data_end+0xf8000524>
1000081c:	ac400007 	ldb	r17,0(r21)
10000820:	01000a84 	movi	r4,42
10000824:	a8c00044 	addi	r3,r21,1
10000828:	89075826 	beq	r17,r4,1000258c <___vfprintf_internal_r+0x21f0>
1000082c:	8cbff404 	addi	r18,r17,-48
10000830:	b486ae36 	bltu	r22,r18,100022ec <___vfprintf_internal_r+0x1f50>
10000834:	0009883a 	mov	r4,zero
10000838:	1823883a 	mov	r17,r3
1000083c:	01400284 	movi	r5,10
10000840:	000aa380 	call	1000aa38 <__mulsi3>
10000844:	88c00007 	ldb	r3,0(r17)
10000848:	1489883a 	add	r4,r2,r18
1000084c:	8d400044 	addi	r21,r17,1
10000850:	1cbff404 	addi	r18,r3,-48
10000854:	a823883a 	mov	r17,r21
10000858:	b4bff82e 	bgeu	r22,r18,1000083c <__alt_data_end+0xf800083c>
1000085c:	1823883a 	mov	r17,r3
10000860:	2005f616 	blt	r4,zero,1000203c <___vfprintf_internal_r+0x1ca0>
10000864:	d9002a15 	stw	r4,168(sp)
10000868:	003f2f06 	br	10000528 <__alt_data_end+0xf8000528>
1000086c:	84002014 	ori	r16,r16,128
10000870:	ac400007 	ldb	r17,0(r21)
10000874:	003f2b06 	br	10000524 <__alt_data_end+0xf8000524>
10000878:	8cbff404 	addi	r18,r17,-48
1000087c:	d8003115 	stw	zero,196(sp)
10000880:	0009883a 	mov	r4,zero
10000884:	a823883a 	mov	r17,r21
10000888:	01400284 	movi	r5,10
1000088c:	000aa380 	call	1000aa38 <__mulsi3>
10000890:	88c00007 	ldb	r3,0(r17)
10000894:	9089883a 	add	r4,r18,r2
10000898:	ad400044 	addi	r21,r21,1
1000089c:	1cbff404 	addi	r18,r3,-48
100008a0:	a823883a 	mov	r17,r21
100008a4:	b4bff82e 	bgeu	r22,r18,10000888 <__alt_data_end+0xf8000888>
100008a8:	1823883a 	mov	r17,r3
100008ac:	d9003115 	stw	r4,196(sp)
100008b0:	003f1d06 	br	10000528 <__alt_data_end+0xf8000528>
100008b4:	8025883a 	mov	r18,r16
100008b8:	dc002903 	ldbu	r16,164(sp)
100008bc:	e011883a 	mov	r8,fp
100008c0:	84003fcc 	andi	r16,r16,255
100008c4:	8007531e 	bne	r16,zero,10002614 <___vfprintf_internal_r+0x2278>
100008c8:	94800414 	ori	r18,r18,16
100008cc:	9080080c 	andi	r2,r18,32
100008d0:	1003a326 	beq	r2,zero,10001760 <___vfprintf_internal_r+0x13c4>
100008d4:	d9002e17 	ldw	r4,184(sp)
100008d8:	20800117 	ldw	r2,4(r4)
100008dc:	24c00017 	ldw	r19,0(r4)
100008e0:	21000204 	addi	r4,r4,8
100008e4:	d9002e15 	stw	r4,184(sp)
100008e8:	102d883a 	mov	r22,r2
100008ec:	10047316 	blt	r2,zero,10001abc <___vfprintf_internal_r+0x1720>
100008f0:	d9002a17 	ldw	r4,168(sp)
100008f4:	df002783 	ldbu	fp,158(sp)
100008f8:	2003e416 	blt	r4,zero,1000188c <___vfprintf_internal_r+0x14f0>
100008fc:	00ffdfc4 	movi	r3,-129
10000900:	9d84b03a 	or	r2,r19,r22
10000904:	90e4703a 	and	r18,r18,r3
10000908:	10018026 	beq	r2,zero,10000f0c <___vfprintf_internal_r+0xb70>
1000090c:	b003ab26 	beq	r22,zero,100017bc <___vfprintf_internal_r+0x1420>
10000910:	dc402915 	stw	r17,164(sp)
10000914:	dc001e04 	addi	r16,sp,120
10000918:	b023883a 	mov	r17,r22
1000091c:	402d883a 	mov	r22,r8
10000920:	9809883a 	mov	r4,r19
10000924:	880b883a 	mov	r5,r17
10000928:	01800284 	movi	r6,10
1000092c:	000f883a 	mov	r7,zero
10000930:	000a2c00 	call	1000a2c0 <__umoddi3>
10000934:	10800c04 	addi	r2,r2,48
10000938:	843fffc4 	addi	r16,r16,-1
1000093c:	9809883a 	mov	r4,r19
10000940:	880b883a 	mov	r5,r17
10000944:	80800005 	stb	r2,0(r16)
10000948:	01800284 	movi	r6,10
1000094c:	000f883a 	mov	r7,zero
10000950:	0009cc40 	call	10009cc4 <__udivdi3>
10000954:	1027883a 	mov	r19,r2
10000958:	10c4b03a 	or	r2,r2,r3
1000095c:	1823883a 	mov	r17,r3
10000960:	103fef1e 	bne	r2,zero,10000920 <__alt_data_end+0xf8000920>
10000964:	d8c02817 	ldw	r3,160(sp)
10000968:	dc402917 	ldw	r17,164(sp)
1000096c:	b011883a 	mov	r8,r22
10000970:	1c07c83a 	sub	r3,r3,r16
10000974:	d8c02b15 	stw	r3,172(sp)
10000978:	00005f06 	br	10000af8 <___vfprintf_internal_r+0x75c>
1000097c:	8025883a 	mov	r18,r16
10000980:	dc002903 	ldbu	r16,164(sp)
10000984:	e011883a 	mov	r8,fp
10000988:	84003fcc 	andi	r16,r16,255
1000098c:	80071e1e 	bne	r16,zero,10002608 <___vfprintf_internal_r+0x226c>
10000990:	9080020c 	andi	r2,r18,8
10000994:	1004af26 	beq	r2,zero,10001c54 <___vfprintf_internal_r+0x18b8>
10000998:	d9002e17 	ldw	r4,184(sp)
1000099c:	d9402e17 	ldw	r5,184(sp)
100009a0:	d8802e17 	ldw	r2,184(sp)
100009a4:	21000017 	ldw	r4,0(r4)
100009a8:	29400117 	ldw	r5,4(r5)
100009ac:	10800204 	addi	r2,r2,8
100009b0:	d9003615 	stw	r4,216(sp)
100009b4:	d9403815 	stw	r5,224(sp)
100009b8:	d8802e15 	stw	r2,184(sp)
100009bc:	d9003617 	ldw	r4,216(sp)
100009c0:	d9403817 	ldw	r5,224(sp)
100009c4:	da003d15 	stw	r8,244(sp)
100009c8:	04000044 	movi	r16,1
100009cc:	0006d800 	call	10006d80 <__fpclassifyd>
100009d0:	da003d17 	ldw	r8,244(sp)
100009d4:	1404441e 	bne	r2,r16,10001ae8 <___vfprintf_internal_r+0x174c>
100009d8:	d9003617 	ldw	r4,216(sp)
100009dc:	d9403817 	ldw	r5,224(sp)
100009e0:	000d883a 	mov	r6,zero
100009e4:	000f883a 	mov	r7,zero
100009e8:	000be400 	call	1000be40 <__ledf2>
100009ec:	da003d17 	ldw	r8,244(sp)
100009f0:	1005e316 	blt	r2,zero,10002180 <___vfprintf_internal_r+0x1de4>
100009f4:	df002783 	ldbu	fp,158(sp)
100009f8:	008011c4 	movi	r2,71
100009fc:	1445580e 	bge	r2,r17,10001f60 <___vfprintf_internal_r+0x1bc4>
10000a00:	04040074 	movhi	r16,4097
10000a04:	843e6c04 	addi	r16,r16,-1616
10000a08:	00c000c4 	movi	r3,3
10000a0c:	00bfdfc4 	movi	r2,-129
10000a10:	d8c02915 	stw	r3,164(sp)
10000a14:	90a4703a 	and	r18,r18,r2
10000a18:	d8c02b15 	stw	r3,172(sp)
10000a1c:	d8002a15 	stw	zero,168(sp)
10000a20:	d8003215 	stw	zero,200(sp)
10000a24:	00003a06 	br	10000b10 <___vfprintf_internal_r+0x774>
10000a28:	84000214 	ori	r16,r16,8
10000a2c:	ac400007 	ldb	r17,0(r21)
10000a30:	003ebc06 	br	10000524 <__alt_data_end+0xf8000524>
10000a34:	8025883a 	mov	r18,r16
10000a38:	dc002903 	ldbu	r16,164(sp)
10000a3c:	e011883a 	mov	r8,fp
10000a40:	84003fcc 	andi	r16,r16,255
10000a44:	8007001e 	bne	r16,zero,10002648 <___vfprintf_internal_r+0x22ac>
10000a48:	94800414 	ori	r18,r18,16
10000a4c:	9080080c 	andi	r2,r18,32
10000a50:	1002fa26 	beq	r2,zero,1000163c <___vfprintf_internal_r+0x12a0>
10000a54:	d9002e17 	ldw	r4,184(sp)
10000a58:	d9402a17 	ldw	r5,168(sp)
10000a5c:	d8002785 	stb	zero,158(sp)
10000a60:	20800204 	addi	r2,r4,8
10000a64:	24c00017 	ldw	r19,0(r4)
10000a68:	25800117 	ldw	r22,4(r4)
10000a6c:	2804b116 	blt	r5,zero,10001d34 <___vfprintf_internal_r+0x1998>
10000a70:	013fdfc4 	movi	r4,-129
10000a74:	9d86b03a 	or	r3,r19,r22
10000a78:	d8802e15 	stw	r2,184(sp)
10000a7c:	9124703a 	and	r18,r18,r4
10000a80:	1802fb1e 	bne	r3,zero,10001670 <___vfprintf_internal_r+0x12d4>
10000a84:	d8c02a17 	ldw	r3,168(sp)
10000a88:	0039883a 	mov	fp,zero
10000a8c:	1805e526 	beq	r3,zero,10002224 <___vfprintf_internal_r+0x1e88>
10000a90:	0027883a 	mov	r19,zero
10000a94:	002d883a 	mov	r22,zero
10000a98:	dc001e04 	addi	r16,sp,120
10000a9c:	9806d0fa 	srli	r3,r19,3
10000aa0:	b008977a 	slli	r4,r22,29
10000aa4:	b02cd0fa 	srli	r22,r22,3
10000aa8:	9cc001cc 	andi	r19,r19,7
10000aac:	98800c04 	addi	r2,r19,48
10000ab0:	843fffc4 	addi	r16,r16,-1
10000ab4:	20e6b03a 	or	r19,r4,r3
10000ab8:	80800005 	stb	r2,0(r16)
10000abc:	9d86b03a 	or	r3,r19,r22
10000ac0:	183ff61e 	bne	r3,zero,10000a9c <__alt_data_end+0xf8000a9c>
10000ac4:	90c0004c 	andi	r3,r18,1
10000ac8:	18014126 	beq	r3,zero,10000fd0 <___vfprintf_internal_r+0xc34>
10000acc:	10803fcc 	andi	r2,r2,255
10000ad0:	1080201c 	xori	r2,r2,128
10000ad4:	10bfe004 	addi	r2,r2,-128
10000ad8:	00c00c04 	movi	r3,48
10000adc:	10c13c26 	beq	r2,r3,10000fd0 <___vfprintf_internal_r+0xc34>
10000ae0:	80ffffc5 	stb	r3,-1(r16)
10000ae4:	d8c02817 	ldw	r3,160(sp)
10000ae8:	80bfffc4 	addi	r2,r16,-1
10000aec:	1021883a 	mov	r16,r2
10000af0:	1887c83a 	sub	r3,r3,r2
10000af4:	d8c02b15 	stw	r3,172(sp)
10000af8:	d8802b17 	ldw	r2,172(sp)
10000afc:	d9002a17 	ldw	r4,168(sp)
10000b00:	1100010e 	bge	r2,r4,10000b08 <___vfprintf_internal_r+0x76c>
10000b04:	2005883a 	mov	r2,r4
10000b08:	d8802915 	stw	r2,164(sp)
10000b0c:	d8003215 	stw	zero,200(sp)
10000b10:	e7003fcc 	andi	fp,fp,255
10000b14:	e700201c 	xori	fp,fp,128
10000b18:	e73fe004 	addi	fp,fp,-128
10000b1c:	e0000326 	beq	fp,zero,10000b2c <___vfprintf_internal_r+0x790>
10000b20:	d8c02917 	ldw	r3,164(sp)
10000b24:	18c00044 	addi	r3,r3,1
10000b28:	d8c02915 	stw	r3,164(sp)
10000b2c:	90c0008c 	andi	r3,r18,2
10000b30:	d8c02c15 	stw	r3,176(sp)
10000b34:	18000326 	beq	r3,zero,10000b44 <___vfprintf_internal_r+0x7a8>
10000b38:	d8c02917 	ldw	r3,164(sp)
10000b3c:	18c00084 	addi	r3,r3,2
10000b40:	d8c02915 	stw	r3,164(sp)
10000b44:	90c0210c 	andi	r3,r18,132
10000b48:	d8c03015 	stw	r3,192(sp)
10000b4c:	1801c51e 	bne	r3,zero,10001264 <___vfprintf_internal_r+0xec8>
10000b50:	d9003117 	ldw	r4,196(sp)
10000b54:	d8c02917 	ldw	r3,164(sp)
10000b58:	20e7c83a 	sub	r19,r4,r3
10000b5c:	04c1c10e 	bge	zero,r19,10001264 <___vfprintf_internal_r+0xec8>
10000b60:	02400404 	movi	r9,16
10000b64:	d8c02017 	ldw	r3,128(sp)
10000b68:	d8801f17 	ldw	r2,124(sp)
10000b6c:	4cc52f0e 	bge	r9,r19,1000202c <___vfprintf_internal_r+0x1c90>
10000b70:	01440074 	movhi	r5,4097
10000b74:	297e7f84 	addi	r5,r5,-1538
10000b78:	dc403b15 	stw	r17,236(sp)
10000b7c:	d9403515 	stw	r5,212(sp)
10000b80:	9823883a 	mov	r17,r19
10000b84:	482d883a 	mov	r22,r9
10000b88:	9027883a 	mov	r19,r18
10000b8c:	070001c4 	movi	fp,7
10000b90:	8025883a 	mov	r18,r16
10000b94:	dc002d17 	ldw	r16,180(sp)
10000b98:	00000306 	br	10000ba8 <___vfprintf_internal_r+0x80c>
10000b9c:	8c7ffc04 	addi	r17,r17,-16
10000ba0:	42000204 	addi	r8,r8,8
10000ba4:	b440130e 	bge	r22,r17,10000bf4 <___vfprintf_internal_r+0x858>
10000ba8:	01040074 	movhi	r4,4097
10000bac:	18c00404 	addi	r3,r3,16
10000bb0:	10800044 	addi	r2,r2,1
10000bb4:	213e7f84 	addi	r4,r4,-1538
10000bb8:	41000015 	stw	r4,0(r8)
10000bbc:	45800115 	stw	r22,4(r8)
10000bc0:	d8c02015 	stw	r3,128(sp)
10000bc4:	d8801f15 	stw	r2,124(sp)
10000bc8:	e0bff40e 	bge	fp,r2,10000b9c <__alt_data_end+0xf8000b9c>
10000bcc:	d9801e04 	addi	r6,sp,120
10000bd0:	b80b883a 	mov	r5,r23
10000bd4:	8009883a 	mov	r4,r16
10000bd8:	00071f40 	call	100071f4 <__sprint_r>
10000bdc:	103ef31e 	bne	r2,zero,100007ac <__alt_data_end+0xf80007ac>
10000be0:	8c7ffc04 	addi	r17,r17,-16
10000be4:	d8c02017 	ldw	r3,128(sp)
10000be8:	d8801f17 	ldw	r2,124(sp)
10000bec:	da000404 	addi	r8,sp,16
10000bf0:	b47fed16 	blt	r22,r17,10000ba8 <__alt_data_end+0xf8000ba8>
10000bf4:	9021883a 	mov	r16,r18
10000bf8:	9825883a 	mov	r18,r19
10000bfc:	8827883a 	mov	r19,r17
10000c00:	dc403b17 	ldw	r17,236(sp)
10000c04:	d9403517 	ldw	r5,212(sp)
10000c08:	98c7883a 	add	r3,r19,r3
10000c0c:	10800044 	addi	r2,r2,1
10000c10:	41400015 	stw	r5,0(r8)
10000c14:	44c00115 	stw	r19,4(r8)
10000c18:	d8c02015 	stw	r3,128(sp)
10000c1c:	d8801f15 	stw	r2,124(sp)
10000c20:	010001c4 	movi	r4,7
10000c24:	2082c516 	blt	r4,r2,1000173c <___vfprintf_internal_r+0x13a0>
10000c28:	df002787 	ldb	fp,158(sp)
10000c2c:	42000204 	addi	r8,r8,8
10000c30:	e0000c26 	beq	fp,zero,10000c64 <___vfprintf_internal_r+0x8c8>
10000c34:	d8801f17 	ldw	r2,124(sp)
10000c38:	d9002784 	addi	r4,sp,158
10000c3c:	18c00044 	addi	r3,r3,1
10000c40:	10800044 	addi	r2,r2,1
10000c44:	41000015 	stw	r4,0(r8)
10000c48:	01000044 	movi	r4,1
10000c4c:	41000115 	stw	r4,4(r8)
10000c50:	d8c02015 	stw	r3,128(sp)
10000c54:	d8801f15 	stw	r2,124(sp)
10000c58:	010001c4 	movi	r4,7
10000c5c:	20825e16 	blt	r4,r2,100015d8 <___vfprintf_internal_r+0x123c>
10000c60:	42000204 	addi	r8,r8,8
10000c64:	d8802c17 	ldw	r2,176(sp)
10000c68:	10000c26 	beq	r2,zero,10000c9c <___vfprintf_internal_r+0x900>
10000c6c:	d8801f17 	ldw	r2,124(sp)
10000c70:	d9002704 	addi	r4,sp,156
10000c74:	18c00084 	addi	r3,r3,2
10000c78:	10800044 	addi	r2,r2,1
10000c7c:	41000015 	stw	r4,0(r8)
10000c80:	01000084 	movi	r4,2
10000c84:	41000115 	stw	r4,4(r8)
10000c88:	d8c02015 	stw	r3,128(sp)
10000c8c:	d8801f15 	stw	r2,124(sp)
10000c90:	010001c4 	movi	r4,7
10000c94:	20825816 	blt	r4,r2,100015f8 <___vfprintf_internal_r+0x125c>
10000c98:	42000204 	addi	r8,r8,8
10000c9c:	d9003017 	ldw	r4,192(sp)
10000ca0:	00802004 	movi	r2,128
10000ca4:	2081bb26 	beq	r4,r2,10001394 <___vfprintf_internal_r+0xff8>
10000ca8:	d9402a17 	ldw	r5,168(sp)
10000cac:	d8802b17 	ldw	r2,172(sp)
10000cb0:	28adc83a 	sub	r22,r5,r2
10000cb4:	0580310e 	bge	zero,r22,10000d7c <___vfprintf_internal_r+0x9e0>
10000cb8:	07000404 	movi	fp,16
10000cbc:	d8801f17 	ldw	r2,124(sp)
10000cc0:	e584360e 	bge	fp,r22,10001d9c <___vfprintf_internal_r+0x1a00>
10000cc4:	01440074 	movhi	r5,4097
10000cc8:	297e7b84 	addi	r5,r5,-1554
10000ccc:	dc402a15 	stw	r17,168(sp)
10000cd0:	d9402c15 	stw	r5,176(sp)
10000cd4:	b023883a 	mov	r17,r22
10000cd8:	04c001c4 	movi	r19,7
10000cdc:	a82d883a 	mov	r22,r21
10000ce0:	902b883a 	mov	r21,r18
10000ce4:	8025883a 	mov	r18,r16
10000ce8:	dc002d17 	ldw	r16,180(sp)
10000cec:	00000306 	br	10000cfc <___vfprintf_internal_r+0x960>
10000cf0:	8c7ffc04 	addi	r17,r17,-16
10000cf4:	42000204 	addi	r8,r8,8
10000cf8:	e440110e 	bge	fp,r17,10000d40 <___vfprintf_internal_r+0x9a4>
10000cfc:	18c00404 	addi	r3,r3,16
10000d00:	10800044 	addi	r2,r2,1
10000d04:	45000015 	stw	r20,0(r8)
10000d08:	47000115 	stw	fp,4(r8)
10000d0c:	d8c02015 	stw	r3,128(sp)
10000d10:	d8801f15 	stw	r2,124(sp)
10000d14:	98bff60e 	bge	r19,r2,10000cf0 <__alt_data_end+0xf8000cf0>
10000d18:	d9801e04 	addi	r6,sp,120
10000d1c:	b80b883a 	mov	r5,r23
10000d20:	8009883a 	mov	r4,r16
10000d24:	00071f40 	call	100071f4 <__sprint_r>
10000d28:	103ea01e 	bne	r2,zero,100007ac <__alt_data_end+0xf80007ac>
10000d2c:	8c7ffc04 	addi	r17,r17,-16
10000d30:	d8c02017 	ldw	r3,128(sp)
10000d34:	d8801f17 	ldw	r2,124(sp)
10000d38:	da000404 	addi	r8,sp,16
10000d3c:	e47fef16 	blt	fp,r17,10000cfc <__alt_data_end+0xf8000cfc>
10000d40:	9021883a 	mov	r16,r18
10000d44:	a825883a 	mov	r18,r21
10000d48:	b02b883a 	mov	r21,r22
10000d4c:	882d883a 	mov	r22,r17
10000d50:	dc402a17 	ldw	r17,168(sp)
10000d54:	d9002c17 	ldw	r4,176(sp)
10000d58:	1d87883a 	add	r3,r3,r22
10000d5c:	10800044 	addi	r2,r2,1
10000d60:	41000015 	stw	r4,0(r8)
10000d64:	45800115 	stw	r22,4(r8)
10000d68:	d8c02015 	stw	r3,128(sp)
10000d6c:	d8801f15 	stw	r2,124(sp)
10000d70:	010001c4 	movi	r4,7
10000d74:	20821016 	blt	r4,r2,100015b8 <___vfprintf_internal_r+0x121c>
10000d78:	42000204 	addi	r8,r8,8
10000d7c:	9080400c 	andi	r2,r18,256
10000d80:	10013a1e 	bne	r2,zero,1000126c <___vfprintf_internal_r+0xed0>
10000d84:	d9402b17 	ldw	r5,172(sp)
10000d88:	d8801f17 	ldw	r2,124(sp)
10000d8c:	44000015 	stw	r16,0(r8)
10000d90:	1947883a 	add	r3,r3,r5
10000d94:	10800044 	addi	r2,r2,1
10000d98:	41400115 	stw	r5,4(r8)
10000d9c:	d8c02015 	stw	r3,128(sp)
10000da0:	d8801f15 	stw	r2,124(sp)
10000da4:	010001c4 	movi	r4,7
10000da8:	2081f516 	blt	r4,r2,10001580 <___vfprintf_internal_r+0x11e4>
10000dac:	42000204 	addi	r8,r8,8
10000db0:	9480010c 	andi	r18,r18,4
10000db4:	90003226 	beq	r18,zero,10000e80 <___vfprintf_internal_r+0xae4>
10000db8:	d9403117 	ldw	r5,196(sp)
10000dbc:	d8802917 	ldw	r2,164(sp)
10000dc0:	28a1c83a 	sub	r16,r5,r2
10000dc4:	04002e0e 	bge	zero,r16,10000e80 <___vfprintf_internal_r+0xae4>
10000dc8:	04400404 	movi	r17,16
10000dcc:	d8801f17 	ldw	r2,124(sp)
10000dd0:	8c04c40e 	bge	r17,r16,100020e4 <___vfprintf_internal_r+0x1d48>
10000dd4:	01440074 	movhi	r5,4097
10000dd8:	297e7f84 	addi	r5,r5,-1538
10000ddc:	d9403515 	stw	r5,212(sp)
10000de0:	048001c4 	movi	r18,7
10000de4:	dcc02d17 	ldw	r19,180(sp)
10000de8:	00000306 	br	10000df8 <___vfprintf_internal_r+0xa5c>
10000dec:	843ffc04 	addi	r16,r16,-16
10000df0:	42000204 	addi	r8,r8,8
10000df4:	8c00130e 	bge	r17,r16,10000e44 <___vfprintf_internal_r+0xaa8>
10000df8:	01040074 	movhi	r4,4097
10000dfc:	18c00404 	addi	r3,r3,16
10000e00:	10800044 	addi	r2,r2,1
10000e04:	213e7f84 	addi	r4,r4,-1538
10000e08:	41000015 	stw	r4,0(r8)
10000e0c:	44400115 	stw	r17,4(r8)
10000e10:	d8c02015 	stw	r3,128(sp)
10000e14:	d8801f15 	stw	r2,124(sp)
10000e18:	90bff40e 	bge	r18,r2,10000dec <__alt_data_end+0xf8000dec>
10000e1c:	d9801e04 	addi	r6,sp,120
10000e20:	b80b883a 	mov	r5,r23
10000e24:	9809883a 	mov	r4,r19
10000e28:	00071f40 	call	100071f4 <__sprint_r>
10000e2c:	103e5f1e 	bne	r2,zero,100007ac <__alt_data_end+0xf80007ac>
10000e30:	843ffc04 	addi	r16,r16,-16
10000e34:	d8c02017 	ldw	r3,128(sp)
10000e38:	d8801f17 	ldw	r2,124(sp)
10000e3c:	da000404 	addi	r8,sp,16
10000e40:	8c3fed16 	blt	r17,r16,10000df8 <__alt_data_end+0xf8000df8>
10000e44:	d9403517 	ldw	r5,212(sp)
10000e48:	1c07883a 	add	r3,r3,r16
10000e4c:	10800044 	addi	r2,r2,1
10000e50:	41400015 	stw	r5,0(r8)
10000e54:	44000115 	stw	r16,4(r8)
10000e58:	d8c02015 	stw	r3,128(sp)
10000e5c:	d8801f15 	stw	r2,124(sp)
10000e60:	010001c4 	movi	r4,7
10000e64:	2080060e 	bge	r4,r2,10000e80 <___vfprintf_internal_r+0xae4>
10000e68:	d9002d17 	ldw	r4,180(sp)
10000e6c:	d9801e04 	addi	r6,sp,120
10000e70:	b80b883a 	mov	r5,r23
10000e74:	00071f40 	call	100071f4 <__sprint_r>
10000e78:	103e4c1e 	bne	r2,zero,100007ac <__alt_data_end+0xf80007ac>
10000e7c:	d8c02017 	ldw	r3,128(sp)
10000e80:	d8803117 	ldw	r2,196(sp)
10000e84:	d9002917 	ldw	r4,164(sp)
10000e88:	1100010e 	bge	r2,r4,10000e90 <___vfprintf_internal_r+0xaf4>
10000e8c:	2005883a 	mov	r2,r4
10000e90:	d9402f17 	ldw	r5,188(sp)
10000e94:	288b883a 	add	r5,r5,r2
10000e98:	d9402f15 	stw	r5,188(sp)
10000e9c:	1801c01e 	bne	r3,zero,100015a0 <___vfprintf_internal_r+0x1204>
10000ea0:	a8800007 	ldb	r2,0(r21)
10000ea4:	d8001f15 	stw	zero,124(sp)
10000ea8:	da000404 	addi	r8,sp,16
10000eac:	103d751e 	bne	r2,zero,10000484 <__alt_data_end+0xf8000484>
10000eb0:	a823883a 	mov	r17,r21
10000eb4:	003d8b06 	br	100004e4 <__alt_data_end+0xf80004e4>
10000eb8:	8025883a 	mov	r18,r16
10000ebc:	dc002903 	ldbu	r16,164(sp)
10000ec0:	e011883a 	mov	r8,fp
10000ec4:	84003fcc 	andi	r16,r16,255
10000ec8:	8005e51e 	bne	r16,zero,10002660 <___vfprintf_internal_r+0x22c4>
10000ecc:	94800414 	ori	r18,r18,16
10000ed0:	9080080c 	andi	r2,r18,32
10000ed4:	10022b26 	beq	r2,zero,10001784 <___vfprintf_internal_r+0x13e8>
10000ed8:	d9002e17 	ldw	r4,184(sp)
10000edc:	d9402a17 	ldw	r5,168(sp)
10000ee0:	d8002785 	stb	zero,158(sp)
10000ee4:	20c00204 	addi	r3,r4,8
10000ee8:	24c00017 	ldw	r19,0(r4)
10000eec:	25800117 	ldw	r22,4(r4)
10000ef0:	28042e16 	blt	r5,zero,10001fac <___vfprintf_internal_r+0x1c10>
10000ef4:	013fdfc4 	movi	r4,-129
10000ef8:	9d84b03a 	or	r2,r19,r22
10000efc:	d8c02e15 	stw	r3,184(sp)
10000f00:	9124703a 	and	r18,r18,r4
10000f04:	0039883a 	mov	fp,zero
10000f08:	103e801e 	bne	r2,zero,1000090c <__alt_data_end+0xf800090c>
10000f0c:	d9002a17 	ldw	r4,168(sp)
10000f10:	2002e01e 	bne	r4,zero,10001a94 <___vfprintf_internal_r+0x16f8>
10000f14:	d8002a15 	stw	zero,168(sp)
10000f18:	d8002b15 	stw	zero,172(sp)
10000f1c:	dc001e04 	addi	r16,sp,120
10000f20:	003ef506 	br	10000af8 <__alt_data_end+0xf8000af8>
10000f24:	8025883a 	mov	r18,r16
10000f28:	dc002903 	ldbu	r16,164(sp)
10000f2c:	e011883a 	mov	r8,fp
10000f30:	84003fcc 	andi	r16,r16,255
10000f34:	8005ba1e 	bne	r16,zero,10002620 <___vfprintf_internal_r+0x2284>
10000f38:	01040074 	movhi	r4,4097
10000f3c:	213e6f04 	addi	r4,r4,-1604
10000f40:	d9003915 	stw	r4,228(sp)
10000f44:	9080080c 	andi	r2,r18,32
10000f48:	10006126 	beq	r2,zero,100010d0 <___vfprintf_internal_r+0xd34>
10000f4c:	d9402e17 	ldw	r5,184(sp)
10000f50:	2cc00017 	ldw	r19,0(r5)
10000f54:	2d800117 	ldw	r22,4(r5)
10000f58:	29400204 	addi	r5,r5,8
10000f5c:	d9402e15 	stw	r5,184(sp)
10000f60:	9080004c 	andi	r2,r18,1
10000f64:	1001ac26 	beq	r2,zero,10001618 <___vfprintf_internal_r+0x127c>
10000f68:	9d84b03a 	or	r2,r19,r22
10000f6c:	10038526 	beq	r2,zero,10001d84 <___vfprintf_internal_r+0x19e8>
10000f70:	d8c02a17 	ldw	r3,168(sp)
10000f74:	00800c04 	movi	r2,48
10000f78:	d8802705 	stb	r2,156(sp)
10000f7c:	dc402745 	stb	r17,157(sp)
10000f80:	d8002785 	stb	zero,158(sp)
10000f84:	90800094 	ori	r2,r18,2
10000f88:	18047916 	blt	r3,zero,10002170 <___vfprintf_internal_r+0x1dd4>
10000f8c:	00bfdfc4 	movi	r2,-129
10000f90:	90a4703a 	and	r18,r18,r2
10000f94:	94800094 	ori	r18,r18,2
10000f98:	0039883a 	mov	fp,zero
10000f9c:	d9003917 	ldw	r4,228(sp)
10000fa0:	dc001e04 	addi	r16,sp,120
10000fa4:	988003cc 	andi	r2,r19,15
10000fa8:	b006973a 	slli	r3,r22,28
10000fac:	2085883a 	add	r2,r4,r2
10000fb0:	9826d13a 	srli	r19,r19,4
10000fb4:	10800003 	ldbu	r2,0(r2)
10000fb8:	b02cd13a 	srli	r22,r22,4
10000fbc:	843fffc4 	addi	r16,r16,-1
10000fc0:	1ce6b03a 	or	r19,r3,r19
10000fc4:	80800005 	stb	r2,0(r16)
10000fc8:	9d84b03a 	or	r2,r19,r22
10000fcc:	103ff51e 	bne	r2,zero,10000fa4 <__alt_data_end+0xf8000fa4>
10000fd0:	d8c02817 	ldw	r3,160(sp)
10000fd4:	1c07c83a 	sub	r3,r3,r16
10000fd8:	d8c02b15 	stw	r3,172(sp)
10000fdc:	003ec606 	br	10000af8 <__alt_data_end+0xf8000af8>
10000fe0:	8025883a 	mov	r18,r16
10000fe4:	dc002903 	ldbu	r16,164(sp)
10000fe8:	e011883a 	mov	r8,fp
10000fec:	84003fcc 	andi	r16,r16,255
10000ff0:	803e9626 	beq	r16,zero,10000a4c <__alt_data_end+0xf8000a4c>
10000ff4:	d8c02b03 	ldbu	r3,172(sp)
10000ff8:	d8c02785 	stb	r3,158(sp)
10000ffc:	003e9306 	br	10000a4c <__alt_data_end+0xf8000a4c>
10001000:	00c00044 	movi	r3,1
10001004:	d8c02905 	stb	r3,164(sp)
10001008:	00c00ac4 	movi	r3,43
1000100c:	d8c02b05 	stb	r3,172(sp)
10001010:	ac400007 	ldb	r17,0(r21)
10001014:	003d4306 	br	10000524 <__alt_data_end+0xf8000524>
10001018:	84000814 	ori	r16,r16,32
1000101c:	ac400007 	ldb	r17,0(r21)
10001020:	003d4006 	br	10000524 <__alt_data_end+0xf8000524>
10001024:	d8802e17 	ldw	r2,184(sp)
10001028:	8025883a 	mov	r18,r16
1000102c:	d8002785 	stb	zero,158(sp)
10001030:	14000017 	ldw	r16,0(r2)
10001034:	e011883a 	mov	r8,fp
10001038:	14c00104 	addi	r19,r2,4
1000103c:	80042d26 	beq	r16,zero,100020f4 <___vfprintf_internal_r+0x1d58>
10001040:	d8c02a17 	ldw	r3,168(sp)
10001044:	1803e416 	blt	r3,zero,10001fd8 <___vfprintf_internal_r+0x1c3c>
10001048:	180d883a 	mov	r6,r3
1000104c:	000b883a 	mov	r5,zero
10001050:	8009883a 	mov	r4,r16
10001054:	df003d15 	stw	fp,244(sp)
10001058:	000580c0 	call	1000580c <memchr>
1000105c:	da003d17 	ldw	r8,244(sp)
10001060:	10046826 	beq	r2,zero,10002204 <___vfprintf_internal_r+0x1e68>
10001064:	1405c83a 	sub	r2,r2,r16
10001068:	d8802b15 	stw	r2,172(sp)
1000106c:	1003e016 	blt	r2,zero,10001ff0 <___vfprintf_internal_r+0x1c54>
10001070:	df002783 	ldbu	fp,158(sp)
10001074:	d8802915 	stw	r2,164(sp)
10001078:	dcc02e15 	stw	r19,184(sp)
1000107c:	d8002a15 	stw	zero,168(sp)
10001080:	d8003215 	stw	zero,200(sp)
10001084:	003ea206 	br	10000b10 <__alt_data_end+0xf8000b10>
10001088:	8025883a 	mov	r18,r16
1000108c:	dc002903 	ldbu	r16,164(sp)
10001090:	e011883a 	mov	r8,fp
10001094:	84003fcc 	andi	r16,r16,255
10001098:	803f8d26 	beq	r16,zero,10000ed0 <__alt_data_end+0xf8000ed0>
1000109c:	d8c02b03 	ldbu	r3,172(sp)
100010a0:	d8c02785 	stb	r3,158(sp)
100010a4:	003f8a06 	br	10000ed0 <__alt_data_end+0xf8000ed0>
100010a8:	8025883a 	mov	r18,r16
100010ac:	dc002903 	ldbu	r16,164(sp)
100010b0:	e011883a 	mov	r8,fp
100010b4:	84003fcc 	andi	r16,r16,255
100010b8:	8005661e 	bne	r16,zero,10002654 <___vfprintf_internal_r+0x22b8>
100010bc:	01040074 	movhi	r4,4097
100010c0:	213e7404 	addi	r4,r4,-1584
100010c4:	d9003915 	stw	r4,228(sp)
100010c8:	9080080c 	andi	r2,r18,32
100010cc:	103f9f1e 	bne	r2,zero,10000f4c <__alt_data_end+0xf8000f4c>
100010d0:	9080040c 	andi	r2,r18,16
100010d4:	1002eb26 	beq	r2,zero,10001c84 <___vfprintf_internal_r+0x18e8>
100010d8:	d8802e17 	ldw	r2,184(sp)
100010dc:	002d883a 	mov	r22,zero
100010e0:	14c00017 	ldw	r19,0(r2)
100010e4:	10800104 	addi	r2,r2,4
100010e8:	d8802e15 	stw	r2,184(sp)
100010ec:	003f9c06 	br	10000f60 <__alt_data_end+0xf8000f60>
100010f0:	d8802b07 	ldb	r2,172(sp)
100010f4:	1002e11e 	bne	r2,zero,10001c7c <___vfprintf_internal_r+0x18e0>
100010f8:	00c00044 	movi	r3,1
100010fc:	d8c02905 	stb	r3,164(sp)
10001100:	00c00804 	movi	r3,32
10001104:	d8c02b05 	stb	r3,172(sp)
10001108:	ac400007 	ldb	r17,0(r21)
1000110c:	003d0506 	br	10000524 <__alt_data_end+0xf8000524>
10001110:	84000054 	ori	r16,r16,1
10001114:	ac400007 	ldb	r17,0(r21)
10001118:	003d0206 	br	10000524 <__alt_data_end+0xf8000524>
1000111c:	8025883a 	mov	r18,r16
10001120:	dc002903 	ldbu	r16,164(sp)
10001124:	e011883a 	mov	r8,fp
10001128:	84003fcc 	andi	r16,r16,255
1000112c:	803de726 	beq	r16,zero,100008cc <__alt_data_end+0xf80008cc>
10001130:	d8c02b03 	ldbu	r3,172(sp)
10001134:	d8c02785 	stb	r3,158(sp)
10001138:	003de406 	br	100008cc <__alt_data_end+0xf80008cc>
1000113c:	84001014 	ori	r16,r16,64
10001140:	ac400007 	ldb	r17,0(r21)
10001144:	003cf706 	br	10000524 <__alt_data_end+0xf8000524>
10001148:	ac400007 	ldb	r17,0(r21)
1000114c:	00801b04 	movi	r2,108
10001150:	88838f26 	beq	r17,r2,10001f90 <___vfprintf_internal_r+0x1bf4>
10001154:	84000414 	ori	r16,r16,16
10001158:	003cf206 	br	10000524 <__alt_data_end+0xf8000524>
1000115c:	8025883a 	mov	r18,r16
10001160:	dc002903 	ldbu	r16,164(sp)
10001164:	e011883a 	mov	r8,fp
10001168:	84003fcc 	andi	r16,r16,255
1000116c:	80053f1e 	bne	r16,zero,1000266c <___vfprintf_internal_r+0x22d0>
10001170:	9080080c 	andi	r2,r18,32
10001174:	1002d226 	beq	r2,zero,10001cc0 <___vfprintf_internal_r+0x1924>
10001178:	d9002e17 	ldw	r4,184(sp)
1000117c:	d9402f17 	ldw	r5,188(sp)
10001180:	20800017 	ldw	r2,0(r4)
10001184:	2807d7fa 	srai	r3,r5,31
10001188:	21000104 	addi	r4,r4,4
1000118c:	d9002e15 	stw	r4,184(sp)
10001190:	11400015 	stw	r5,0(r2)
10001194:	10c00115 	stw	r3,4(r2)
10001198:	003cb806 	br	1000047c <__alt_data_end+0xf800047c>
1000119c:	d8c02e17 	ldw	r3,184(sp)
100011a0:	d9002e17 	ldw	r4,184(sp)
100011a4:	8025883a 	mov	r18,r16
100011a8:	18800017 	ldw	r2,0(r3)
100011ac:	21000104 	addi	r4,r4,4
100011b0:	00c00044 	movi	r3,1
100011b4:	e011883a 	mov	r8,fp
100011b8:	d8c02915 	stw	r3,164(sp)
100011bc:	d8002785 	stb	zero,158(sp)
100011c0:	d8801405 	stb	r2,80(sp)
100011c4:	d9002e15 	stw	r4,184(sp)
100011c8:	d8c02b15 	stw	r3,172(sp)
100011cc:	d8002a15 	stw	zero,168(sp)
100011d0:	d8003215 	stw	zero,200(sp)
100011d4:	dc001404 	addi	r16,sp,80
100011d8:	0039883a 	mov	fp,zero
100011dc:	003e5306 	br	10000b2c <__alt_data_end+0xf8000b2c>
100011e0:	01040074 	movhi	r4,4097
100011e4:	213e7404 	addi	r4,r4,-1584
100011e8:	0039883a 	mov	fp,zero
100011ec:	d9003915 	stw	r4,228(sp)
100011f0:	04401e04 	movi	r17,120
100011f4:	003f6906 	br	10000f9c <__alt_data_end+0xf8000f9c>
100011f8:	8025883a 	mov	r18,r16
100011fc:	dc002903 	ldbu	r16,164(sp)
10001200:	e011883a 	mov	r8,fp
10001204:	84003fcc 	andi	r16,r16,255
10001208:	8005081e 	bne	r16,zero,1000262c <___vfprintf_internal_r+0x2290>
1000120c:	883d6126 	beq	r17,zero,10000794 <__alt_data_end+0xf8000794>
10001210:	00c00044 	movi	r3,1
10001214:	d8c02915 	stw	r3,164(sp)
10001218:	dc401405 	stb	r17,80(sp)
1000121c:	d8002785 	stb	zero,158(sp)
10001220:	003fe906 	br	100011c8 <__alt_data_end+0xf80011c8>
10001224:	01440074 	movhi	r5,4097
10001228:	297e7404 	addi	r5,r5,-1584
1000122c:	d9403915 	stw	r5,228(sp)
10001230:	d8c02e15 	stw	r3,184(sp)
10001234:	1025883a 	mov	r18,r2
10001238:	04401e04 	movi	r17,120
1000123c:	9d84b03a 	or	r2,r19,r22
10001240:	1000fc1e 	bne	r2,zero,10001634 <___vfprintf_internal_r+0x1298>
10001244:	0039883a 	mov	fp,zero
10001248:	00800084 	movi	r2,2
1000124c:	10803fcc 	andi	r2,r2,255
10001250:	00c00044 	movi	r3,1
10001254:	10c20f26 	beq	r2,r3,10001a94 <___vfprintf_internal_r+0x16f8>
10001258:	00c00084 	movi	r3,2
1000125c:	10fd3326 	beq	r2,r3,1000072c <__alt_data_end+0xf800072c>
10001260:	003e0b06 	br	10000a90 <__alt_data_end+0xf8000a90>
10001264:	d8c02017 	ldw	r3,128(sp)
10001268:	003e7106 	br	10000c30 <__alt_data_end+0xf8000c30>
1000126c:	00801944 	movi	r2,101
10001270:	14407e0e 	bge	r2,r17,1000146c <___vfprintf_internal_r+0x10d0>
10001274:	d9003617 	ldw	r4,216(sp)
10001278:	d9403817 	ldw	r5,224(sp)
1000127c:	000d883a 	mov	r6,zero
10001280:	000f883a 	mov	r7,zero
10001284:	d8c03c15 	stw	r3,240(sp)
10001288:	da003d15 	stw	r8,244(sp)
1000128c:	000bcdc0 	call	1000bcdc <__eqdf2>
10001290:	d8c03c17 	ldw	r3,240(sp)
10001294:	da003d17 	ldw	r8,244(sp)
10001298:	1000f71e 	bne	r2,zero,10001678 <___vfprintf_internal_r+0x12dc>
1000129c:	d8801f17 	ldw	r2,124(sp)
100012a0:	01040074 	movhi	r4,4097
100012a4:	213e7b04 	addi	r4,r4,-1556
100012a8:	18c00044 	addi	r3,r3,1
100012ac:	10800044 	addi	r2,r2,1
100012b0:	41000015 	stw	r4,0(r8)
100012b4:	01000044 	movi	r4,1
100012b8:	41000115 	stw	r4,4(r8)
100012bc:	d8c02015 	stw	r3,128(sp)
100012c0:	d8801f15 	stw	r2,124(sp)
100012c4:	010001c4 	movi	r4,7
100012c8:	2082b816 	blt	r4,r2,10001dac <___vfprintf_internal_r+0x1a10>
100012cc:	42000204 	addi	r8,r8,8
100012d0:	d8802617 	ldw	r2,152(sp)
100012d4:	d9403317 	ldw	r5,204(sp)
100012d8:	11400216 	blt	r2,r5,100012e4 <___vfprintf_internal_r+0xf48>
100012dc:	9080004c 	andi	r2,r18,1
100012e0:	103eb326 	beq	r2,zero,10000db0 <__alt_data_end+0xf8000db0>
100012e4:	d8803717 	ldw	r2,220(sp)
100012e8:	d9003417 	ldw	r4,208(sp)
100012ec:	d9403717 	ldw	r5,220(sp)
100012f0:	1887883a 	add	r3,r3,r2
100012f4:	d8801f17 	ldw	r2,124(sp)
100012f8:	41000015 	stw	r4,0(r8)
100012fc:	41400115 	stw	r5,4(r8)
10001300:	10800044 	addi	r2,r2,1
10001304:	d8c02015 	stw	r3,128(sp)
10001308:	d8801f15 	stw	r2,124(sp)
1000130c:	010001c4 	movi	r4,7
10001310:	20832916 	blt	r4,r2,10001fb8 <___vfprintf_internal_r+0x1c1c>
10001314:	42000204 	addi	r8,r8,8
10001318:	d8803317 	ldw	r2,204(sp)
1000131c:	143fffc4 	addi	r16,r2,-1
10001320:	043ea30e 	bge	zero,r16,10000db0 <__alt_data_end+0xf8000db0>
10001324:	04400404 	movi	r17,16
10001328:	d8801f17 	ldw	r2,124(sp)
1000132c:	8c00880e 	bge	r17,r16,10001550 <___vfprintf_internal_r+0x11b4>
10001330:	01440074 	movhi	r5,4097
10001334:	297e7b84 	addi	r5,r5,-1554
10001338:	d9402c15 	stw	r5,176(sp)
1000133c:	058001c4 	movi	r22,7
10001340:	dcc02d17 	ldw	r19,180(sp)
10001344:	00000306 	br	10001354 <___vfprintf_internal_r+0xfb8>
10001348:	42000204 	addi	r8,r8,8
1000134c:	843ffc04 	addi	r16,r16,-16
10001350:	8c00820e 	bge	r17,r16,1000155c <___vfprintf_internal_r+0x11c0>
10001354:	18c00404 	addi	r3,r3,16
10001358:	10800044 	addi	r2,r2,1
1000135c:	45000015 	stw	r20,0(r8)
10001360:	44400115 	stw	r17,4(r8)
10001364:	d8c02015 	stw	r3,128(sp)
10001368:	d8801f15 	stw	r2,124(sp)
1000136c:	b0bff60e 	bge	r22,r2,10001348 <__alt_data_end+0xf8001348>
10001370:	d9801e04 	addi	r6,sp,120
10001374:	b80b883a 	mov	r5,r23
10001378:	9809883a 	mov	r4,r19
1000137c:	00071f40 	call	100071f4 <__sprint_r>
10001380:	103d0a1e 	bne	r2,zero,100007ac <__alt_data_end+0xf80007ac>
10001384:	d8c02017 	ldw	r3,128(sp)
10001388:	d8801f17 	ldw	r2,124(sp)
1000138c:	da000404 	addi	r8,sp,16
10001390:	003fee06 	br	1000134c <__alt_data_end+0xf800134c>
10001394:	d9403117 	ldw	r5,196(sp)
10001398:	d8802917 	ldw	r2,164(sp)
1000139c:	28adc83a 	sub	r22,r5,r2
100013a0:	05be410e 	bge	zero,r22,10000ca8 <__alt_data_end+0xf8000ca8>
100013a4:	07000404 	movi	fp,16
100013a8:	d8801f17 	ldw	r2,124(sp)
100013ac:	e5838f0e 	bge	fp,r22,100021ec <___vfprintf_internal_r+0x1e50>
100013b0:	01440074 	movhi	r5,4097
100013b4:	297e7b84 	addi	r5,r5,-1554
100013b8:	dc403015 	stw	r17,192(sp)
100013bc:	d9402c15 	stw	r5,176(sp)
100013c0:	b023883a 	mov	r17,r22
100013c4:	04c001c4 	movi	r19,7
100013c8:	a82d883a 	mov	r22,r21
100013cc:	902b883a 	mov	r21,r18
100013d0:	8025883a 	mov	r18,r16
100013d4:	dc002d17 	ldw	r16,180(sp)
100013d8:	00000306 	br	100013e8 <___vfprintf_internal_r+0x104c>
100013dc:	8c7ffc04 	addi	r17,r17,-16
100013e0:	42000204 	addi	r8,r8,8
100013e4:	e440110e 	bge	fp,r17,1000142c <___vfprintf_internal_r+0x1090>
100013e8:	18c00404 	addi	r3,r3,16
100013ec:	10800044 	addi	r2,r2,1
100013f0:	45000015 	stw	r20,0(r8)
100013f4:	47000115 	stw	fp,4(r8)
100013f8:	d8c02015 	stw	r3,128(sp)
100013fc:	d8801f15 	stw	r2,124(sp)
10001400:	98bff60e 	bge	r19,r2,100013dc <__alt_data_end+0xf80013dc>
10001404:	d9801e04 	addi	r6,sp,120
10001408:	b80b883a 	mov	r5,r23
1000140c:	8009883a 	mov	r4,r16
10001410:	00071f40 	call	100071f4 <__sprint_r>
10001414:	103ce51e 	bne	r2,zero,100007ac <__alt_data_end+0xf80007ac>
10001418:	8c7ffc04 	addi	r17,r17,-16
1000141c:	d8c02017 	ldw	r3,128(sp)
10001420:	d8801f17 	ldw	r2,124(sp)
10001424:	da000404 	addi	r8,sp,16
10001428:	e47fef16 	blt	fp,r17,100013e8 <__alt_data_end+0xf80013e8>
1000142c:	9021883a 	mov	r16,r18
10001430:	a825883a 	mov	r18,r21
10001434:	b02b883a 	mov	r21,r22
10001438:	882d883a 	mov	r22,r17
1000143c:	dc403017 	ldw	r17,192(sp)
10001440:	d9002c17 	ldw	r4,176(sp)
10001444:	1d87883a 	add	r3,r3,r22
10001448:	10800044 	addi	r2,r2,1
1000144c:	41000015 	stw	r4,0(r8)
10001450:	45800115 	stw	r22,4(r8)
10001454:	d8c02015 	stw	r3,128(sp)
10001458:	d8801f15 	stw	r2,124(sp)
1000145c:	010001c4 	movi	r4,7
10001460:	20818e16 	blt	r4,r2,10001a9c <___vfprintf_internal_r+0x1700>
10001464:	42000204 	addi	r8,r8,8
10001468:	003e0f06 	br	10000ca8 <__alt_data_end+0xf8000ca8>
1000146c:	d9403317 	ldw	r5,204(sp)
10001470:	00800044 	movi	r2,1
10001474:	18c00044 	addi	r3,r3,1
10001478:	1141530e 	bge	r2,r5,100019c8 <___vfprintf_internal_r+0x162c>
1000147c:	dc401f17 	ldw	r17,124(sp)
10001480:	00800044 	movi	r2,1
10001484:	40800115 	stw	r2,4(r8)
10001488:	8c400044 	addi	r17,r17,1
1000148c:	44000015 	stw	r16,0(r8)
10001490:	d8c02015 	stw	r3,128(sp)
10001494:	dc401f15 	stw	r17,124(sp)
10001498:	008001c4 	movi	r2,7
1000149c:	14416b16 	blt	r2,r17,10001a4c <___vfprintf_internal_r+0x16b0>
100014a0:	42000204 	addi	r8,r8,8
100014a4:	d8803717 	ldw	r2,220(sp)
100014a8:	d9003417 	ldw	r4,208(sp)
100014ac:	8c400044 	addi	r17,r17,1
100014b0:	10c7883a 	add	r3,r2,r3
100014b4:	40800115 	stw	r2,4(r8)
100014b8:	41000015 	stw	r4,0(r8)
100014bc:	d8c02015 	stw	r3,128(sp)
100014c0:	dc401f15 	stw	r17,124(sp)
100014c4:	008001c4 	movi	r2,7
100014c8:	14416916 	blt	r2,r17,10001a70 <___vfprintf_internal_r+0x16d4>
100014cc:	45800204 	addi	r22,r8,8
100014d0:	d9003617 	ldw	r4,216(sp)
100014d4:	d9403817 	ldw	r5,224(sp)
100014d8:	000d883a 	mov	r6,zero
100014dc:	000f883a 	mov	r7,zero
100014e0:	d8c03c15 	stw	r3,240(sp)
100014e4:	000bcdc0 	call	1000bcdc <__eqdf2>
100014e8:	d8c03c17 	ldw	r3,240(sp)
100014ec:	1000bc26 	beq	r2,zero,100017e0 <___vfprintf_internal_r+0x1444>
100014f0:	d9403317 	ldw	r5,204(sp)
100014f4:	84000044 	addi	r16,r16,1
100014f8:	8c400044 	addi	r17,r17,1
100014fc:	28bfffc4 	addi	r2,r5,-1
10001500:	1887883a 	add	r3,r3,r2
10001504:	b0800115 	stw	r2,4(r22)
10001508:	b4000015 	stw	r16,0(r22)
1000150c:	d8c02015 	stw	r3,128(sp)
10001510:	dc401f15 	stw	r17,124(sp)
10001514:	008001c4 	movi	r2,7
10001518:	14414316 	blt	r2,r17,10001a28 <___vfprintf_internal_r+0x168c>
1000151c:	b5800204 	addi	r22,r22,8
10001520:	d9003a17 	ldw	r4,232(sp)
10001524:	df0022c4 	addi	fp,sp,139
10001528:	8c400044 	addi	r17,r17,1
1000152c:	20c7883a 	add	r3,r4,r3
10001530:	b7000015 	stw	fp,0(r22)
10001534:	b1000115 	stw	r4,4(r22)
10001538:	d8c02015 	stw	r3,128(sp)
1000153c:	dc401f15 	stw	r17,124(sp)
10001540:	008001c4 	movi	r2,7
10001544:	14400e16 	blt	r2,r17,10001580 <___vfprintf_internal_r+0x11e4>
10001548:	b2000204 	addi	r8,r22,8
1000154c:	003e1806 	br	10000db0 <__alt_data_end+0xf8000db0>
10001550:	01040074 	movhi	r4,4097
10001554:	213e7b84 	addi	r4,r4,-1554
10001558:	d9002c15 	stw	r4,176(sp)
1000155c:	d9002c17 	ldw	r4,176(sp)
10001560:	1c07883a 	add	r3,r3,r16
10001564:	44000115 	stw	r16,4(r8)
10001568:	41000015 	stw	r4,0(r8)
1000156c:	10800044 	addi	r2,r2,1
10001570:	d8c02015 	stw	r3,128(sp)
10001574:	d8801f15 	stw	r2,124(sp)
10001578:	010001c4 	movi	r4,7
1000157c:	20be0b0e 	bge	r4,r2,10000dac <__alt_data_end+0xf8000dac>
10001580:	d9002d17 	ldw	r4,180(sp)
10001584:	d9801e04 	addi	r6,sp,120
10001588:	b80b883a 	mov	r5,r23
1000158c:	00071f40 	call	100071f4 <__sprint_r>
10001590:	103c861e 	bne	r2,zero,100007ac <__alt_data_end+0xf80007ac>
10001594:	d8c02017 	ldw	r3,128(sp)
10001598:	da000404 	addi	r8,sp,16
1000159c:	003e0406 	br	10000db0 <__alt_data_end+0xf8000db0>
100015a0:	d9002d17 	ldw	r4,180(sp)
100015a4:	d9801e04 	addi	r6,sp,120
100015a8:	b80b883a 	mov	r5,r23
100015ac:	00071f40 	call	100071f4 <__sprint_r>
100015b0:	103e3b26 	beq	r2,zero,10000ea0 <__alt_data_end+0xf8000ea0>
100015b4:	003c7d06 	br	100007ac <__alt_data_end+0xf80007ac>
100015b8:	d9002d17 	ldw	r4,180(sp)
100015bc:	d9801e04 	addi	r6,sp,120
100015c0:	b80b883a 	mov	r5,r23
100015c4:	00071f40 	call	100071f4 <__sprint_r>
100015c8:	103c781e 	bne	r2,zero,100007ac <__alt_data_end+0xf80007ac>
100015cc:	d8c02017 	ldw	r3,128(sp)
100015d0:	da000404 	addi	r8,sp,16
100015d4:	003de906 	br	10000d7c <__alt_data_end+0xf8000d7c>
100015d8:	d9002d17 	ldw	r4,180(sp)
100015dc:	d9801e04 	addi	r6,sp,120
100015e0:	b80b883a 	mov	r5,r23
100015e4:	00071f40 	call	100071f4 <__sprint_r>
100015e8:	103c701e 	bne	r2,zero,100007ac <__alt_data_end+0xf80007ac>
100015ec:	d8c02017 	ldw	r3,128(sp)
100015f0:	da000404 	addi	r8,sp,16
100015f4:	003d9b06 	br	10000c64 <__alt_data_end+0xf8000c64>
100015f8:	d9002d17 	ldw	r4,180(sp)
100015fc:	d9801e04 	addi	r6,sp,120
10001600:	b80b883a 	mov	r5,r23
10001604:	00071f40 	call	100071f4 <__sprint_r>
10001608:	103c681e 	bne	r2,zero,100007ac <__alt_data_end+0xf80007ac>
1000160c:	d8c02017 	ldw	r3,128(sp)
10001610:	da000404 	addi	r8,sp,16
10001614:	003da106 	br	10000c9c <__alt_data_end+0xf8000c9c>
10001618:	d9402a17 	ldw	r5,168(sp)
1000161c:	d8002785 	stb	zero,158(sp)
10001620:	283f0616 	blt	r5,zero,1000123c <__alt_data_end+0xf800123c>
10001624:	00ffdfc4 	movi	r3,-129
10001628:	9d84b03a 	or	r2,r19,r22
1000162c:	90e4703a 	and	r18,r18,r3
10001630:	103c3b26 	beq	r2,zero,10000720 <__alt_data_end+0xf8000720>
10001634:	0039883a 	mov	fp,zero
10001638:	003e5806 	br	10000f9c <__alt_data_end+0xf8000f9c>
1000163c:	9080040c 	andi	r2,r18,16
10001640:	1001b326 	beq	r2,zero,10001d10 <___vfprintf_internal_r+0x1974>
10001644:	d8c02e17 	ldw	r3,184(sp)
10001648:	d9002a17 	ldw	r4,168(sp)
1000164c:	d8002785 	stb	zero,158(sp)
10001650:	18800104 	addi	r2,r3,4
10001654:	1cc00017 	ldw	r19,0(r3)
10001658:	002d883a 	mov	r22,zero
1000165c:	2001b516 	blt	r4,zero,10001d34 <___vfprintf_internal_r+0x1998>
10001660:	00ffdfc4 	movi	r3,-129
10001664:	d8802e15 	stw	r2,184(sp)
10001668:	90e4703a 	and	r18,r18,r3
1000166c:	983d0526 	beq	r19,zero,10000a84 <__alt_data_end+0xf8000a84>
10001670:	0039883a 	mov	fp,zero
10001674:	003d0806 	br	10000a98 <__alt_data_end+0xf8000a98>
10001678:	dc402617 	ldw	r17,152(sp)
1000167c:	0441d30e 	bge	zero,r17,10001dcc <___vfprintf_internal_r+0x1a30>
10001680:	dc403217 	ldw	r17,200(sp)
10001684:	d8803317 	ldw	r2,204(sp)
10001688:	1440010e 	bge	r2,r17,10001690 <___vfprintf_internal_r+0x12f4>
1000168c:	1023883a 	mov	r17,r2
10001690:	04400a0e 	bge	zero,r17,100016bc <___vfprintf_internal_r+0x1320>
10001694:	d8801f17 	ldw	r2,124(sp)
10001698:	1c47883a 	add	r3,r3,r17
1000169c:	44000015 	stw	r16,0(r8)
100016a0:	10800044 	addi	r2,r2,1
100016a4:	44400115 	stw	r17,4(r8)
100016a8:	d8c02015 	stw	r3,128(sp)
100016ac:	d8801f15 	stw	r2,124(sp)
100016b0:	010001c4 	movi	r4,7
100016b4:	20826516 	blt	r4,r2,1000204c <___vfprintf_internal_r+0x1cb0>
100016b8:	42000204 	addi	r8,r8,8
100016bc:	88026116 	blt	r17,zero,10002044 <___vfprintf_internal_r+0x1ca8>
100016c0:	d9003217 	ldw	r4,200(sp)
100016c4:	2463c83a 	sub	r17,r4,r17
100016c8:	04407b0e 	bge	zero,r17,100018b8 <___vfprintf_internal_r+0x151c>
100016cc:	05800404 	movi	r22,16
100016d0:	d8801f17 	ldw	r2,124(sp)
100016d4:	b4419d0e 	bge	r22,r17,10001d4c <___vfprintf_internal_r+0x19b0>
100016d8:	01040074 	movhi	r4,4097
100016dc:	213e7b84 	addi	r4,r4,-1554
100016e0:	d9002c15 	stw	r4,176(sp)
100016e4:	070001c4 	movi	fp,7
100016e8:	dcc02d17 	ldw	r19,180(sp)
100016ec:	00000306 	br	100016fc <___vfprintf_internal_r+0x1360>
100016f0:	42000204 	addi	r8,r8,8
100016f4:	8c7ffc04 	addi	r17,r17,-16
100016f8:	b441970e 	bge	r22,r17,10001d58 <___vfprintf_internal_r+0x19bc>
100016fc:	18c00404 	addi	r3,r3,16
10001700:	10800044 	addi	r2,r2,1
10001704:	45000015 	stw	r20,0(r8)
10001708:	45800115 	stw	r22,4(r8)
1000170c:	d8c02015 	stw	r3,128(sp)
10001710:	d8801f15 	stw	r2,124(sp)
10001714:	e0bff60e 	bge	fp,r2,100016f0 <__alt_data_end+0xf80016f0>
10001718:	d9801e04 	addi	r6,sp,120
1000171c:	b80b883a 	mov	r5,r23
10001720:	9809883a 	mov	r4,r19
10001724:	00071f40 	call	100071f4 <__sprint_r>
10001728:	103c201e 	bne	r2,zero,100007ac <__alt_data_end+0xf80007ac>
1000172c:	d8c02017 	ldw	r3,128(sp)
10001730:	d8801f17 	ldw	r2,124(sp)
10001734:	da000404 	addi	r8,sp,16
10001738:	003fee06 	br	100016f4 <__alt_data_end+0xf80016f4>
1000173c:	d9002d17 	ldw	r4,180(sp)
10001740:	d9801e04 	addi	r6,sp,120
10001744:	b80b883a 	mov	r5,r23
10001748:	00071f40 	call	100071f4 <__sprint_r>
1000174c:	103c171e 	bne	r2,zero,100007ac <__alt_data_end+0xf80007ac>
10001750:	d8c02017 	ldw	r3,128(sp)
10001754:	df002787 	ldb	fp,158(sp)
10001758:	da000404 	addi	r8,sp,16
1000175c:	003d3406 	br	10000c30 <__alt_data_end+0xf8000c30>
10001760:	9080040c 	andi	r2,r18,16
10001764:	10016126 	beq	r2,zero,10001cec <___vfprintf_internal_r+0x1950>
10001768:	d9402e17 	ldw	r5,184(sp)
1000176c:	2cc00017 	ldw	r19,0(r5)
10001770:	29400104 	addi	r5,r5,4
10001774:	d9402e15 	stw	r5,184(sp)
10001778:	982dd7fa 	srai	r22,r19,31
1000177c:	b005883a 	mov	r2,r22
10001780:	003c5a06 	br	100008ec <__alt_data_end+0xf80008ec>
10001784:	9080040c 	andi	r2,r18,16
10001788:	10003526 	beq	r2,zero,10001860 <___vfprintf_internal_r+0x14c4>
1000178c:	d8c02e17 	ldw	r3,184(sp)
10001790:	d9002a17 	ldw	r4,168(sp)
10001794:	d8002785 	stb	zero,158(sp)
10001798:	18800104 	addi	r2,r3,4
1000179c:	1cc00017 	ldw	r19,0(r3)
100017a0:	002d883a 	mov	r22,zero
100017a4:	20003716 	blt	r4,zero,10001884 <___vfprintf_internal_r+0x14e8>
100017a8:	00ffdfc4 	movi	r3,-129
100017ac:	d8802e15 	stw	r2,184(sp)
100017b0:	90e4703a 	and	r18,r18,r3
100017b4:	0039883a 	mov	fp,zero
100017b8:	983dd426 	beq	r19,zero,10000f0c <__alt_data_end+0xf8000f0c>
100017bc:	00800244 	movi	r2,9
100017c0:	14fc5336 	bltu	r2,r19,10000910 <__alt_data_end+0xf8000910>
100017c4:	d8c02817 	ldw	r3,160(sp)
100017c8:	dc001dc4 	addi	r16,sp,119
100017cc:	9cc00c04 	addi	r19,r19,48
100017d0:	1c07c83a 	sub	r3,r3,r16
100017d4:	dcc01dc5 	stb	r19,119(sp)
100017d8:	d8c02b15 	stw	r3,172(sp)
100017dc:	003cc606 	br	10000af8 <__alt_data_end+0xf8000af8>
100017e0:	d8803317 	ldw	r2,204(sp)
100017e4:	143fffc4 	addi	r16,r2,-1
100017e8:	043f4d0e 	bge	zero,r16,10001520 <__alt_data_end+0xf8001520>
100017ec:	07000404 	movi	fp,16
100017f0:	e400810e 	bge	fp,r16,100019f8 <___vfprintf_internal_r+0x165c>
100017f4:	01440074 	movhi	r5,4097
100017f8:	297e7b84 	addi	r5,r5,-1554
100017fc:	d9402c15 	stw	r5,176(sp)
10001800:	01c001c4 	movi	r7,7
10001804:	dcc02d17 	ldw	r19,180(sp)
10001808:	00000306 	br	10001818 <___vfprintf_internal_r+0x147c>
1000180c:	b5800204 	addi	r22,r22,8
10001810:	843ffc04 	addi	r16,r16,-16
10001814:	e4007b0e 	bge	fp,r16,10001a04 <___vfprintf_internal_r+0x1668>
10001818:	18c00404 	addi	r3,r3,16
1000181c:	8c400044 	addi	r17,r17,1
10001820:	b5000015 	stw	r20,0(r22)
10001824:	b7000115 	stw	fp,4(r22)
10001828:	d8c02015 	stw	r3,128(sp)
1000182c:	dc401f15 	stw	r17,124(sp)
10001830:	3c7ff60e 	bge	r7,r17,1000180c <__alt_data_end+0xf800180c>
10001834:	d9801e04 	addi	r6,sp,120
10001838:	b80b883a 	mov	r5,r23
1000183c:	9809883a 	mov	r4,r19
10001840:	d9c03c15 	stw	r7,240(sp)
10001844:	00071f40 	call	100071f4 <__sprint_r>
10001848:	d9c03c17 	ldw	r7,240(sp)
1000184c:	103bd71e 	bne	r2,zero,100007ac <__alt_data_end+0xf80007ac>
10001850:	d8c02017 	ldw	r3,128(sp)
10001854:	dc401f17 	ldw	r17,124(sp)
10001858:	dd800404 	addi	r22,sp,16
1000185c:	003fec06 	br	10001810 <__alt_data_end+0xf8001810>
10001860:	9080100c 	andi	r2,r18,64
10001864:	d8002785 	stb	zero,158(sp)
10001868:	10010e26 	beq	r2,zero,10001ca4 <___vfprintf_internal_r+0x1908>
1000186c:	d9402e17 	ldw	r5,184(sp)
10001870:	d8c02a17 	ldw	r3,168(sp)
10001874:	002d883a 	mov	r22,zero
10001878:	28800104 	addi	r2,r5,4
1000187c:	2cc0000b 	ldhu	r19,0(r5)
10001880:	183fc90e 	bge	r3,zero,100017a8 <__alt_data_end+0xf80017a8>
10001884:	d8802e15 	stw	r2,184(sp)
10001888:	0039883a 	mov	fp,zero
1000188c:	9d84b03a 	or	r2,r19,r22
10001890:	103c1e1e 	bne	r2,zero,1000090c <__alt_data_end+0xf800090c>
10001894:	00800044 	movi	r2,1
10001898:	003e6c06 	br	1000124c <__alt_data_end+0xf800124c>
1000189c:	d9002d17 	ldw	r4,180(sp)
100018a0:	d9801e04 	addi	r6,sp,120
100018a4:	b80b883a 	mov	r5,r23
100018a8:	00071f40 	call	100071f4 <__sprint_r>
100018ac:	103bbf1e 	bne	r2,zero,100007ac <__alt_data_end+0xf80007ac>
100018b0:	d8c02017 	ldw	r3,128(sp)
100018b4:	da000404 	addi	r8,sp,16
100018b8:	d9003217 	ldw	r4,200(sp)
100018bc:	d8802617 	ldw	r2,152(sp)
100018c0:	d9403317 	ldw	r5,204(sp)
100018c4:	8123883a 	add	r17,r16,r4
100018c8:	11400216 	blt	r2,r5,100018d4 <___vfprintf_internal_r+0x1538>
100018cc:	9100004c 	andi	r4,r18,1
100018d0:	20000d26 	beq	r4,zero,10001908 <___vfprintf_internal_r+0x156c>
100018d4:	d9003717 	ldw	r4,220(sp)
100018d8:	d9403417 	ldw	r5,208(sp)
100018dc:	1907883a 	add	r3,r3,r4
100018e0:	d9001f17 	ldw	r4,124(sp)
100018e4:	41400015 	stw	r5,0(r8)
100018e8:	d9403717 	ldw	r5,220(sp)
100018ec:	21000044 	addi	r4,r4,1
100018f0:	d8c02015 	stw	r3,128(sp)
100018f4:	41400115 	stw	r5,4(r8)
100018f8:	d9001f15 	stw	r4,124(sp)
100018fc:	014001c4 	movi	r5,7
10001900:	2901e816 	blt	r5,r4,100020a4 <___vfprintf_internal_r+0x1d08>
10001904:	42000204 	addi	r8,r8,8
10001908:	d9003317 	ldw	r4,204(sp)
1000190c:	8121883a 	add	r16,r16,r4
10001910:	2085c83a 	sub	r2,r4,r2
10001914:	8461c83a 	sub	r16,r16,r17
10001918:	1400010e 	bge	r2,r16,10001920 <___vfprintf_internal_r+0x1584>
1000191c:	1021883a 	mov	r16,r2
10001920:	04000a0e 	bge	zero,r16,1000194c <___vfprintf_internal_r+0x15b0>
10001924:	d9001f17 	ldw	r4,124(sp)
10001928:	1c07883a 	add	r3,r3,r16
1000192c:	44400015 	stw	r17,0(r8)
10001930:	21000044 	addi	r4,r4,1
10001934:	44000115 	stw	r16,4(r8)
10001938:	d8c02015 	stw	r3,128(sp)
1000193c:	d9001f15 	stw	r4,124(sp)
10001940:	014001c4 	movi	r5,7
10001944:	2901fb16 	blt	r5,r4,10002134 <___vfprintf_internal_r+0x1d98>
10001948:	42000204 	addi	r8,r8,8
1000194c:	8001f716 	blt	r16,zero,1000212c <___vfprintf_internal_r+0x1d90>
10001950:	1421c83a 	sub	r16,r2,r16
10001954:	043d160e 	bge	zero,r16,10000db0 <__alt_data_end+0xf8000db0>
10001958:	04400404 	movi	r17,16
1000195c:	d8801f17 	ldw	r2,124(sp)
10001960:	8c3efb0e 	bge	r17,r16,10001550 <__alt_data_end+0xf8001550>
10001964:	01440074 	movhi	r5,4097
10001968:	297e7b84 	addi	r5,r5,-1554
1000196c:	d9402c15 	stw	r5,176(sp)
10001970:	058001c4 	movi	r22,7
10001974:	dcc02d17 	ldw	r19,180(sp)
10001978:	00000306 	br	10001988 <___vfprintf_internal_r+0x15ec>
1000197c:	42000204 	addi	r8,r8,8
10001980:	843ffc04 	addi	r16,r16,-16
10001984:	8c3ef50e 	bge	r17,r16,1000155c <__alt_data_end+0xf800155c>
10001988:	18c00404 	addi	r3,r3,16
1000198c:	10800044 	addi	r2,r2,1
10001990:	45000015 	stw	r20,0(r8)
10001994:	44400115 	stw	r17,4(r8)
10001998:	d8c02015 	stw	r3,128(sp)
1000199c:	d8801f15 	stw	r2,124(sp)
100019a0:	b0bff60e 	bge	r22,r2,1000197c <__alt_data_end+0xf800197c>
100019a4:	d9801e04 	addi	r6,sp,120
100019a8:	b80b883a 	mov	r5,r23
100019ac:	9809883a 	mov	r4,r19
100019b0:	00071f40 	call	100071f4 <__sprint_r>
100019b4:	103b7d1e 	bne	r2,zero,100007ac <__alt_data_end+0xf80007ac>
100019b8:	d8c02017 	ldw	r3,128(sp)
100019bc:	d8801f17 	ldw	r2,124(sp)
100019c0:	da000404 	addi	r8,sp,16
100019c4:	003fee06 	br	10001980 <__alt_data_end+0xf8001980>
100019c8:	9088703a 	and	r4,r18,r2
100019cc:	203eab1e 	bne	r4,zero,1000147c <__alt_data_end+0xf800147c>
100019d0:	dc401f17 	ldw	r17,124(sp)
100019d4:	40800115 	stw	r2,4(r8)
100019d8:	44000015 	stw	r16,0(r8)
100019dc:	8c400044 	addi	r17,r17,1
100019e0:	d8c02015 	stw	r3,128(sp)
100019e4:	dc401f15 	stw	r17,124(sp)
100019e8:	008001c4 	movi	r2,7
100019ec:	14400e16 	blt	r2,r17,10001a28 <___vfprintf_internal_r+0x168c>
100019f0:	45800204 	addi	r22,r8,8
100019f4:	003eca06 	br	10001520 <__alt_data_end+0xf8001520>
100019f8:	01040074 	movhi	r4,4097
100019fc:	213e7b84 	addi	r4,r4,-1554
10001a00:	d9002c15 	stw	r4,176(sp)
10001a04:	d8802c17 	ldw	r2,176(sp)
10001a08:	1c07883a 	add	r3,r3,r16
10001a0c:	8c400044 	addi	r17,r17,1
10001a10:	b0800015 	stw	r2,0(r22)
10001a14:	b4000115 	stw	r16,4(r22)
10001a18:	d8c02015 	stw	r3,128(sp)
10001a1c:	dc401f15 	stw	r17,124(sp)
10001a20:	008001c4 	movi	r2,7
10001a24:	147ebd0e 	bge	r2,r17,1000151c <__alt_data_end+0xf800151c>
10001a28:	d9002d17 	ldw	r4,180(sp)
10001a2c:	d9801e04 	addi	r6,sp,120
10001a30:	b80b883a 	mov	r5,r23
10001a34:	00071f40 	call	100071f4 <__sprint_r>
10001a38:	103b5c1e 	bne	r2,zero,100007ac <__alt_data_end+0xf80007ac>
10001a3c:	d8c02017 	ldw	r3,128(sp)
10001a40:	dc401f17 	ldw	r17,124(sp)
10001a44:	dd800404 	addi	r22,sp,16
10001a48:	003eb506 	br	10001520 <__alt_data_end+0xf8001520>
10001a4c:	d9002d17 	ldw	r4,180(sp)
10001a50:	d9801e04 	addi	r6,sp,120
10001a54:	b80b883a 	mov	r5,r23
10001a58:	00071f40 	call	100071f4 <__sprint_r>
10001a5c:	103b531e 	bne	r2,zero,100007ac <__alt_data_end+0xf80007ac>
10001a60:	d8c02017 	ldw	r3,128(sp)
10001a64:	dc401f17 	ldw	r17,124(sp)
10001a68:	da000404 	addi	r8,sp,16
10001a6c:	003e8d06 	br	100014a4 <__alt_data_end+0xf80014a4>
10001a70:	d9002d17 	ldw	r4,180(sp)
10001a74:	d9801e04 	addi	r6,sp,120
10001a78:	b80b883a 	mov	r5,r23
10001a7c:	00071f40 	call	100071f4 <__sprint_r>
10001a80:	103b4a1e 	bne	r2,zero,100007ac <__alt_data_end+0xf80007ac>
10001a84:	d8c02017 	ldw	r3,128(sp)
10001a88:	dc401f17 	ldw	r17,124(sp)
10001a8c:	dd800404 	addi	r22,sp,16
10001a90:	003e8f06 	br	100014d0 <__alt_data_end+0xf80014d0>
10001a94:	0027883a 	mov	r19,zero
10001a98:	003f4a06 	br	100017c4 <__alt_data_end+0xf80017c4>
10001a9c:	d9002d17 	ldw	r4,180(sp)
10001aa0:	d9801e04 	addi	r6,sp,120
10001aa4:	b80b883a 	mov	r5,r23
10001aa8:	00071f40 	call	100071f4 <__sprint_r>
10001aac:	103b3f1e 	bne	r2,zero,100007ac <__alt_data_end+0xf80007ac>
10001ab0:	d8c02017 	ldw	r3,128(sp)
10001ab4:	da000404 	addi	r8,sp,16
10001ab8:	003c7b06 	br	10000ca8 <__alt_data_end+0xf8000ca8>
10001abc:	d9402a17 	ldw	r5,168(sp)
10001ac0:	04e7c83a 	sub	r19,zero,r19
10001ac4:	07000b44 	movi	fp,45
10001ac8:	9804c03a 	cmpne	r2,r19,zero
10001acc:	05adc83a 	sub	r22,zero,r22
10001ad0:	df002785 	stb	fp,158(sp)
10001ad4:	b0adc83a 	sub	r22,r22,r2
10001ad8:	28017b16 	blt	r5,zero,100020c8 <___vfprintf_internal_r+0x1d2c>
10001adc:	00bfdfc4 	movi	r2,-129
10001ae0:	90a4703a 	and	r18,r18,r2
10001ae4:	003b8906 	br	1000090c <__alt_data_end+0xf800090c>
10001ae8:	d9003617 	ldw	r4,216(sp)
10001aec:	d9403817 	ldw	r5,224(sp)
10001af0:	da003d15 	stw	r8,244(sp)
10001af4:	0006d800 	call	10006d80 <__fpclassifyd>
10001af8:	da003d17 	ldw	r8,244(sp)
10001afc:	1000f026 	beq	r2,zero,10001ec0 <___vfprintf_internal_r+0x1b24>
10001b00:	d9002a17 	ldw	r4,168(sp)
10001b04:	05bff7c4 	movi	r22,-33
10001b08:	00bfffc4 	movi	r2,-1
10001b0c:	8dac703a 	and	r22,r17,r22
10001b10:	20820026 	beq	r4,r2,10002314 <___vfprintf_internal_r+0x1f78>
10001b14:	008011c4 	movi	r2,71
10001b18:	b081f726 	beq	r22,r2,100022f8 <___vfprintf_internal_r+0x1f5c>
10001b1c:	d9003817 	ldw	r4,224(sp)
10001b20:	90c04014 	ori	r3,r18,256
10001b24:	d8c02c15 	stw	r3,176(sp)
10001b28:	20021516 	blt	r4,zero,10002380 <___vfprintf_internal_r+0x1fe4>
10001b2c:	dcc03817 	ldw	r19,224(sp)
10001b30:	d8002905 	stb	zero,164(sp)
10001b34:	00801984 	movi	r2,102
10001b38:	8881f926 	beq	r17,r2,10002320 <___vfprintf_internal_r+0x1f84>
10001b3c:	00801184 	movi	r2,70
10001b40:	88821c26 	beq	r17,r2,100023b4 <___vfprintf_internal_r+0x2018>
10001b44:	00801144 	movi	r2,69
10001b48:	b081ef26 	beq	r22,r2,10002308 <___vfprintf_internal_r+0x1f6c>
10001b4c:	d8c02a17 	ldw	r3,168(sp)
10001b50:	d8802104 	addi	r2,sp,132
10001b54:	d8800315 	stw	r2,12(sp)
10001b58:	d9403617 	ldw	r5,216(sp)
10001b5c:	d8802504 	addi	r2,sp,148
10001b60:	d9002d17 	ldw	r4,180(sp)
10001b64:	d8800215 	stw	r2,8(sp)
10001b68:	d8802604 	addi	r2,sp,152
10001b6c:	d8c00015 	stw	r3,0(sp)
10001b70:	d8800115 	stw	r2,4(sp)
10001b74:	01c00084 	movi	r7,2
10001b78:	980d883a 	mov	r6,r19
10001b7c:	d8c03c15 	stw	r3,240(sp)
10001b80:	da003d15 	stw	r8,244(sp)
10001b84:	0002acc0 	call	10002acc <_dtoa_r>
10001b88:	1021883a 	mov	r16,r2
10001b8c:	008019c4 	movi	r2,103
10001b90:	d8c03c17 	ldw	r3,240(sp)
10001b94:	da003d17 	ldw	r8,244(sp)
10001b98:	88817126 	beq	r17,r2,10002160 <___vfprintf_internal_r+0x1dc4>
10001b9c:	008011c4 	movi	r2,71
10001ba0:	88829126 	beq	r17,r2,100025e8 <___vfprintf_internal_r+0x224c>
10001ba4:	80f9883a 	add	fp,r16,r3
10001ba8:	d9003617 	ldw	r4,216(sp)
10001bac:	000d883a 	mov	r6,zero
10001bb0:	000f883a 	mov	r7,zero
10001bb4:	980b883a 	mov	r5,r19
10001bb8:	da003d15 	stw	r8,244(sp)
10001bbc:	000bcdc0 	call	1000bcdc <__eqdf2>
10001bc0:	da003d17 	ldw	r8,244(sp)
10001bc4:	10018d26 	beq	r2,zero,100021fc <___vfprintf_internal_r+0x1e60>
10001bc8:	d8802117 	ldw	r2,132(sp)
10001bcc:	1700062e 	bgeu	r2,fp,10001be8 <___vfprintf_internal_r+0x184c>
10001bd0:	01000c04 	movi	r4,48
10001bd4:	10c00044 	addi	r3,r2,1
10001bd8:	d8c02115 	stw	r3,132(sp)
10001bdc:	11000005 	stb	r4,0(r2)
10001be0:	d8802117 	ldw	r2,132(sp)
10001be4:	173ffb36 	bltu	r2,fp,10001bd4 <__alt_data_end+0xf8001bd4>
10001be8:	1405c83a 	sub	r2,r2,r16
10001bec:	d8803315 	stw	r2,204(sp)
10001bf0:	008011c4 	movi	r2,71
10001bf4:	b0817626 	beq	r22,r2,100021d0 <___vfprintf_internal_r+0x1e34>
10001bf8:	00801944 	movi	r2,101
10001bfc:	1442800e 	bge	r2,r17,10002600 <___vfprintf_internal_r+0x2264>
10001c00:	d8c02617 	ldw	r3,152(sp)
10001c04:	00801984 	movi	r2,102
10001c08:	d8c03215 	stw	r3,200(sp)
10001c0c:	8881fe26 	beq	r17,r2,10002408 <___vfprintf_internal_r+0x206c>
10001c10:	d8c03217 	ldw	r3,200(sp)
10001c14:	d9003317 	ldw	r4,204(sp)
10001c18:	1901dd16 	blt	r3,r4,10002390 <___vfprintf_internal_r+0x1ff4>
10001c1c:	9480004c 	andi	r18,r18,1
10001c20:	90022b1e 	bne	r18,zero,100024d0 <___vfprintf_internal_r+0x2134>
10001c24:	1805883a 	mov	r2,r3
10001c28:	18028316 	blt	r3,zero,10002638 <___vfprintf_internal_r+0x229c>
10001c2c:	d8c03217 	ldw	r3,200(sp)
10001c30:	044019c4 	movi	r17,103
10001c34:	d8c02b15 	stw	r3,172(sp)
10001c38:	df002907 	ldb	fp,164(sp)
10001c3c:	e001531e 	bne	fp,zero,1000218c <___vfprintf_internal_r+0x1df0>
10001c40:	df002783 	ldbu	fp,158(sp)
10001c44:	d8802915 	stw	r2,164(sp)
10001c48:	dc802c17 	ldw	r18,176(sp)
10001c4c:	d8002a15 	stw	zero,168(sp)
10001c50:	003baf06 	br	10000b10 <__alt_data_end+0xf8000b10>
10001c54:	d8c02e17 	ldw	r3,184(sp)
10001c58:	d9002e17 	ldw	r4,184(sp)
10001c5c:	d9402e17 	ldw	r5,184(sp)
10001c60:	18c00017 	ldw	r3,0(r3)
10001c64:	21000117 	ldw	r4,4(r4)
10001c68:	29400204 	addi	r5,r5,8
10001c6c:	d8c03615 	stw	r3,216(sp)
10001c70:	d9003815 	stw	r4,224(sp)
10001c74:	d9402e15 	stw	r5,184(sp)
10001c78:	003b5006 	br	100009bc <__alt_data_end+0xf80009bc>
10001c7c:	ac400007 	ldb	r17,0(r21)
10001c80:	003a2806 	br	10000524 <__alt_data_end+0xf8000524>
10001c84:	9080100c 	andi	r2,r18,64
10001c88:	1000a826 	beq	r2,zero,10001f2c <___vfprintf_internal_r+0x1b90>
10001c8c:	d8c02e17 	ldw	r3,184(sp)
10001c90:	002d883a 	mov	r22,zero
10001c94:	1cc0000b 	ldhu	r19,0(r3)
10001c98:	18c00104 	addi	r3,r3,4
10001c9c:	d8c02e15 	stw	r3,184(sp)
10001ca0:	003caf06 	br	10000f60 <__alt_data_end+0xf8000f60>
10001ca4:	d9002e17 	ldw	r4,184(sp)
10001ca8:	d9402a17 	ldw	r5,168(sp)
10001cac:	002d883a 	mov	r22,zero
10001cb0:	20800104 	addi	r2,r4,4
10001cb4:	24c00017 	ldw	r19,0(r4)
10001cb8:	283ebb0e 	bge	r5,zero,100017a8 <__alt_data_end+0xf80017a8>
10001cbc:	003ef106 	br	10001884 <__alt_data_end+0xf8001884>
10001cc0:	9080040c 	andi	r2,r18,16
10001cc4:	1000921e 	bne	r2,zero,10001f10 <___vfprintf_internal_r+0x1b74>
10001cc8:	9480100c 	andi	r18,r18,64
10001ccc:	90013926 	beq	r18,zero,100021b4 <___vfprintf_internal_r+0x1e18>
10001cd0:	d9402e17 	ldw	r5,184(sp)
10001cd4:	d8c02f17 	ldw	r3,188(sp)
10001cd8:	28800017 	ldw	r2,0(r5)
10001cdc:	29400104 	addi	r5,r5,4
10001ce0:	d9402e15 	stw	r5,184(sp)
10001ce4:	10c0000d 	sth	r3,0(r2)
10001ce8:	0039e406 	br	1000047c <__alt_data_end+0xf800047c>
10001cec:	9080100c 	andi	r2,r18,64
10001cf0:	10008026 	beq	r2,zero,10001ef4 <___vfprintf_internal_r+0x1b58>
10001cf4:	d8802e17 	ldw	r2,184(sp)
10001cf8:	14c0000f 	ldh	r19,0(r2)
10001cfc:	10800104 	addi	r2,r2,4
10001d00:	d8802e15 	stw	r2,184(sp)
10001d04:	982dd7fa 	srai	r22,r19,31
10001d08:	b005883a 	mov	r2,r22
10001d0c:	003af706 	br	100008ec <__alt_data_end+0xf80008ec>
10001d10:	9080100c 	andi	r2,r18,64
10001d14:	d8002785 	stb	zero,158(sp)
10001d18:	10008a1e 	bne	r2,zero,10001f44 <___vfprintf_internal_r+0x1ba8>
10001d1c:	d9002e17 	ldw	r4,184(sp)
10001d20:	d9402a17 	ldw	r5,168(sp)
10001d24:	002d883a 	mov	r22,zero
10001d28:	20800104 	addi	r2,r4,4
10001d2c:	24c00017 	ldw	r19,0(r4)
10001d30:	283e4b0e 	bge	r5,zero,10001660 <__alt_data_end+0xf8001660>
10001d34:	9d86b03a 	or	r3,r19,r22
10001d38:	d8802e15 	stw	r2,184(sp)
10001d3c:	183e4c1e 	bne	r3,zero,10001670 <__alt_data_end+0xf8001670>
10001d40:	0039883a 	mov	fp,zero
10001d44:	0005883a 	mov	r2,zero
10001d48:	003d4006 	br	1000124c <__alt_data_end+0xf800124c>
10001d4c:	01440074 	movhi	r5,4097
10001d50:	297e7b84 	addi	r5,r5,-1554
10001d54:	d9402c15 	stw	r5,176(sp)
10001d58:	d9402c17 	ldw	r5,176(sp)
10001d5c:	1c47883a 	add	r3,r3,r17
10001d60:	10800044 	addi	r2,r2,1
10001d64:	41400015 	stw	r5,0(r8)
10001d68:	44400115 	stw	r17,4(r8)
10001d6c:	d8c02015 	stw	r3,128(sp)
10001d70:	d8801f15 	stw	r2,124(sp)
10001d74:	010001c4 	movi	r4,7
10001d78:	20bec816 	blt	r4,r2,1000189c <__alt_data_end+0xf800189c>
10001d7c:	42000204 	addi	r8,r8,8
10001d80:	003ecd06 	br	100018b8 <__alt_data_end+0xf80018b8>
10001d84:	d9002a17 	ldw	r4,168(sp)
10001d88:	d8002785 	stb	zero,158(sp)
10001d8c:	203d2d16 	blt	r4,zero,10001244 <__alt_data_end+0xf8001244>
10001d90:	00bfdfc4 	movi	r2,-129
10001d94:	90a4703a 	and	r18,r18,r2
10001d98:	003a6106 	br	10000720 <__alt_data_end+0xf8000720>
10001d9c:	01040074 	movhi	r4,4097
10001da0:	213e7b84 	addi	r4,r4,-1554
10001da4:	d9002c15 	stw	r4,176(sp)
10001da8:	003bea06 	br	10000d54 <__alt_data_end+0xf8000d54>
10001dac:	d9002d17 	ldw	r4,180(sp)
10001db0:	d9801e04 	addi	r6,sp,120
10001db4:	b80b883a 	mov	r5,r23
10001db8:	00071f40 	call	100071f4 <__sprint_r>
10001dbc:	103a7b1e 	bne	r2,zero,100007ac <__alt_data_end+0xf80007ac>
10001dc0:	d8c02017 	ldw	r3,128(sp)
10001dc4:	da000404 	addi	r8,sp,16
10001dc8:	003d4106 	br	100012d0 <__alt_data_end+0xf80012d0>
10001dcc:	d8801f17 	ldw	r2,124(sp)
10001dd0:	01440074 	movhi	r5,4097
10001dd4:	01000044 	movi	r4,1
10001dd8:	18c00044 	addi	r3,r3,1
10001ddc:	10800044 	addi	r2,r2,1
10001de0:	297e7b04 	addi	r5,r5,-1556
10001de4:	41000115 	stw	r4,4(r8)
10001de8:	41400015 	stw	r5,0(r8)
10001dec:	d8c02015 	stw	r3,128(sp)
10001df0:	d8801f15 	stw	r2,124(sp)
10001df4:	010001c4 	movi	r4,7
10001df8:	20805c16 	blt	r4,r2,10001f6c <___vfprintf_internal_r+0x1bd0>
10001dfc:	42000204 	addi	r8,r8,8
10001e00:	8800041e 	bne	r17,zero,10001e14 <___vfprintf_internal_r+0x1a78>
10001e04:	d8803317 	ldw	r2,204(sp)
10001e08:	1000021e 	bne	r2,zero,10001e14 <___vfprintf_internal_r+0x1a78>
10001e0c:	9080004c 	andi	r2,r18,1
10001e10:	103be726 	beq	r2,zero,10000db0 <__alt_data_end+0xf8000db0>
10001e14:	d9003717 	ldw	r4,220(sp)
10001e18:	d8801f17 	ldw	r2,124(sp)
10001e1c:	d9403417 	ldw	r5,208(sp)
10001e20:	20c7883a 	add	r3,r4,r3
10001e24:	10800044 	addi	r2,r2,1
10001e28:	41000115 	stw	r4,4(r8)
10001e2c:	41400015 	stw	r5,0(r8)
10001e30:	d8c02015 	stw	r3,128(sp)
10001e34:	d8801f15 	stw	r2,124(sp)
10001e38:	010001c4 	movi	r4,7
10001e3c:	20812116 	blt	r4,r2,100022c4 <___vfprintf_internal_r+0x1f28>
10001e40:	42000204 	addi	r8,r8,8
10001e44:	0463c83a 	sub	r17,zero,r17
10001e48:	0440730e 	bge	zero,r17,10002018 <___vfprintf_internal_r+0x1c7c>
10001e4c:	05800404 	movi	r22,16
10001e50:	b440860e 	bge	r22,r17,1000206c <___vfprintf_internal_r+0x1cd0>
10001e54:	01440074 	movhi	r5,4097
10001e58:	297e7b84 	addi	r5,r5,-1554
10001e5c:	d9402c15 	stw	r5,176(sp)
10001e60:	070001c4 	movi	fp,7
10001e64:	dcc02d17 	ldw	r19,180(sp)
10001e68:	00000306 	br	10001e78 <___vfprintf_internal_r+0x1adc>
10001e6c:	42000204 	addi	r8,r8,8
10001e70:	8c7ffc04 	addi	r17,r17,-16
10001e74:	b440800e 	bge	r22,r17,10002078 <___vfprintf_internal_r+0x1cdc>
10001e78:	18c00404 	addi	r3,r3,16
10001e7c:	10800044 	addi	r2,r2,1
10001e80:	45000015 	stw	r20,0(r8)
10001e84:	45800115 	stw	r22,4(r8)
10001e88:	d8c02015 	stw	r3,128(sp)
10001e8c:	d8801f15 	stw	r2,124(sp)
10001e90:	e0bff60e 	bge	fp,r2,10001e6c <__alt_data_end+0xf8001e6c>
10001e94:	d9801e04 	addi	r6,sp,120
10001e98:	b80b883a 	mov	r5,r23
10001e9c:	9809883a 	mov	r4,r19
10001ea0:	00071f40 	call	100071f4 <__sprint_r>
10001ea4:	103a411e 	bne	r2,zero,100007ac <__alt_data_end+0xf80007ac>
10001ea8:	d8c02017 	ldw	r3,128(sp)
10001eac:	d8801f17 	ldw	r2,124(sp)
10001eb0:	da000404 	addi	r8,sp,16
10001eb4:	003fee06 	br	10001e70 <__alt_data_end+0xf8001e70>
10001eb8:	00bfffc4 	movi	r2,-1
10001ebc:	003a3f06 	br	100007bc <__alt_data_end+0xf80007bc>
10001ec0:	008011c4 	movi	r2,71
10001ec4:	1440b816 	blt	r2,r17,100021a8 <___vfprintf_internal_r+0x1e0c>
10001ec8:	04040074 	movhi	r16,4097
10001ecc:	843e6d04 	addi	r16,r16,-1612
10001ed0:	00c000c4 	movi	r3,3
10001ed4:	00bfdfc4 	movi	r2,-129
10001ed8:	d8c02915 	stw	r3,164(sp)
10001edc:	90a4703a 	and	r18,r18,r2
10001ee0:	df002783 	ldbu	fp,158(sp)
10001ee4:	d8c02b15 	stw	r3,172(sp)
10001ee8:	d8002a15 	stw	zero,168(sp)
10001eec:	d8003215 	stw	zero,200(sp)
10001ef0:	003b0706 	br	10000b10 <__alt_data_end+0xf8000b10>
10001ef4:	d8c02e17 	ldw	r3,184(sp)
10001ef8:	1cc00017 	ldw	r19,0(r3)
10001efc:	18c00104 	addi	r3,r3,4
10001f00:	d8c02e15 	stw	r3,184(sp)
10001f04:	982dd7fa 	srai	r22,r19,31
10001f08:	b005883a 	mov	r2,r22
10001f0c:	003a7706 	br	100008ec <__alt_data_end+0xf80008ec>
10001f10:	d8c02e17 	ldw	r3,184(sp)
10001f14:	d9002f17 	ldw	r4,188(sp)
10001f18:	18800017 	ldw	r2,0(r3)
10001f1c:	18c00104 	addi	r3,r3,4
10001f20:	d8c02e15 	stw	r3,184(sp)
10001f24:	11000015 	stw	r4,0(r2)
10001f28:	00395406 	br	1000047c <__alt_data_end+0xf800047c>
10001f2c:	d9002e17 	ldw	r4,184(sp)
10001f30:	002d883a 	mov	r22,zero
10001f34:	24c00017 	ldw	r19,0(r4)
10001f38:	21000104 	addi	r4,r4,4
10001f3c:	d9002e15 	stw	r4,184(sp)
10001f40:	003c0706 	br	10000f60 <__alt_data_end+0xf8000f60>
10001f44:	d9402e17 	ldw	r5,184(sp)
10001f48:	d8c02a17 	ldw	r3,168(sp)
10001f4c:	002d883a 	mov	r22,zero
10001f50:	28800104 	addi	r2,r5,4
10001f54:	2cc0000b 	ldhu	r19,0(r5)
10001f58:	183dc10e 	bge	r3,zero,10001660 <__alt_data_end+0xf8001660>
10001f5c:	003f7506 	br	10001d34 <__alt_data_end+0xf8001d34>
10001f60:	04040074 	movhi	r16,4097
10001f64:	843e6b04 	addi	r16,r16,-1620
10001f68:	003aa706 	br	10000a08 <__alt_data_end+0xf8000a08>
10001f6c:	d9002d17 	ldw	r4,180(sp)
10001f70:	d9801e04 	addi	r6,sp,120
10001f74:	b80b883a 	mov	r5,r23
10001f78:	00071f40 	call	100071f4 <__sprint_r>
10001f7c:	103a0b1e 	bne	r2,zero,100007ac <__alt_data_end+0xf80007ac>
10001f80:	dc402617 	ldw	r17,152(sp)
10001f84:	d8c02017 	ldw	r3,128(sp)
10001f88:	da000404 	addi	r8,sp,16
10001f8c:	003f9c06 	br	10001e00 <__alt_data_end+0xf8001e00>
10001f90:	ac400043 	ldbu	r17,1(r21)
10001f94:	84000814 	ori	r16,r16,32
10001f98:	ad400044 	addi	r21,r21,1
10001f9c:	8c403fcc 	andi	r17,r17,255
10001fa0:	8c40201c 	xori	r17,r17,128
10001fa4:	8c7fe004 	addi	r17,r17,-128
10001fa8:	00395e06 	br	10000524 <__alt_data_end+0xf8000524>
10001fac:	d8c02e15 	stw	r3,184(sp)
10001fb0:	0039883a 	mov	fp,zero
10001fb4:	003e3506 	br	1000188c <__alt_data_end+0xf800188c>
10001fb8:	d9002d17 	ldw	r4,180(sp)
10001fbc:	d9801e04 	addi	r6,sp,120
10001fc0:	b80b883a 	mov	r5,r23
10001fc4:	00071f40 	call	100071f4 <__sprint_r>
10001fc8:	1039f81e 	bne	r2,zero,100007ac <__alt_data_end+0xf80007ac>
10001fcc:	d8c02017 	ldw	r3,128(sp)
10001fd0:	da000404 	addi	r8,sp,16
10001fd4:	003cd006 	br	10001318 <__alt_data_end+0xf8001318>
10001fd8:	8009883a 	mov	r4,r16
10001fdc:	df003d15 	stw	fp,244(sp)
10001fe0:	00070600 	call	10007060 <strlen>
10001fe4:	d8802b15 	stw	r2,172(sp)
10001fe8:	da003d17 	ldw	r8,244(sp)
10001fec:	103c200e 	bge	r2,zero,10001070 <__alt_data_end+0xf8001070>
10001ff0:	0005883a 	mov	r2,zero
10001ff4:	003c1e06 	br	10001070 <__alt_data_end+0xf8001070>
10001ff8:	d9002d17 	ldw	r4,180(sp)
10001ffc:	d9801e04 	addi	r6,sp,120
10002000:	b80b883a 	mov	r5,r23
10002004:	00071f40 	call	100071f4 <__sprint_r>
10002008:	1039e81e 	bne	r2,zero,100007ac <__alt_data_end+0xf80007ac>
1000200c:	d8c02017 	ldw	r3,128(sp)
10002010:	d8801f17 	ldw	r2,124(sp)
10002014:	da000404 	addi	r8,sp,16
10002018:	d9403317 	ldw	r5,204(sp)
1000201c:	10800044 	addi	r2,r2,1
10002020:	44000015 	stw	r16,0(r8)
10002024:	28c7883a 	add	r3,r5,r3
10002028:	003b5b06 	br	10000d98 <__alt_data_end+0xf8000d98>
1000202c:	01040074 	movhi	r4,4097
10002030:	213e7f84 	addi	r4,r4,-1538
10002034:	d9003515 	stw	r4,212(sp)
10002038:	003af206 	br	10000c04 <__alt_data_end+0xf8000c04>
1000203c:	013fffc4 	movi	r4,-1
10002040:	003a0806 	br	10000864 <__alt_data_end+0xf8000864>
10002044:	0023883a 	mov	r17,zero
10002048:	003d9d06 	br	100016c0 <__alt_data_end+0xf80016c0>
1000204c:	d9002d17 	ldw	r4,180(sp)
10002050:	d9801e04 	addi	r6,sp,120
10002054:	b80b883a 	mov	r5,r23
10002058:	00071f40 	call	100071f4 <__sprint_r>
1000205c:	1039d31e 	bne	r2,zero,100007ac <__alt_data_end+0xf80007ac>
10002060:	d8c02017 	ldw	r3,128(sp)
10002064:	da000404 	addi	r8,sp,16
10002068:	003d9406 	br	100016bc <__alt_data_end+0xf80016bc>
1000206c:	01040074 	movhi	r4,4097
10002070:	213e7b84 	addi	r4,r4,-1554
10002074:	d9002c15 	stw	r4,176(sp)
10002078:	d9002c17 	ldw	r4,176(sp)
1000207c:	1c47883a 	add	r3,r3,r17
10002080:	10800044 	addi	r2,r2,1
10002084:	41000015 	stw	r4,0(r8)
10002088:	44400115 	stw	r17,4(r8)
1000208c:	d8c02015 	stw	r3,128(sp)
10002090:	d8801f15 	stw	r2,124(sp)
10002094:	010001c4 	movi	r4,7
10002098:	20bfd716 	blt	r4,r2,10001ff8 <__alt_data_end+0xf8001ff8>
1000209c:	42000204 	addi	r8,r8,8
100020a0:	003fdd06 	br	10002018 <__alt_data_end+0xf8002018>
100020a4:	d9002d17 	ldw	r4,180(sp)
100020a8:	d9801e04 	addi	r6,sp,120
100020ac:	b80b883a 	mov	r5,r23
100020b0:	00071f40 	call	100071f4 <__sprint_r>
100020b4:	1039bd1e 	bne	r2,zero,100007ac <__alt_data_end+0xf80007ac>
100020b8:	d8802617 	ldw	r2,152(sp)
100020bc:	d8c02017 	ldw	r3,128(sp)
100020c0:	da000404 	addi	r8,sp,16
100020c4:	003e1006 	br	10001908 <__alt_data_end+0xf8001908>
100020c8:	00800044 	movi	r2,1
100020cc:	10803fcc 	andi	r2,r2,255
100020d0:	00c00044 	movi	r3,1
100020d4:	10fa0d26 	beq	r2,r3,1000090c <__alt_data_end+0xf800090c>
100020d8:	00c00084 	movi	r3,2
100020dc:	10fbaf26 	beq	r2,r3,10000f9c <__alt_data_end+0xf8000f9c>
100020e0:	003a6d06 	br	10000a98 <__alt_data_end+0xf8000a98>
100020e4:	01040074 	movhi	r4,4097
100020e8:	213e7f84 	addi	r4,r4,-1538
100020ec:	d9003515 	stw	r4,212(sp)
100020f0:	003b5406 	br	10000e44 <__alt_data_end+0xf8000e44>
100020f4:	d8802a17 	ldw	r2,168(sp)
100020f8:	00c00184 	movi	r3,6
100020fc:	1880012e 	bgeu	r3,r2,10002104 <___vfprintf_internal_r+0x1d68>
10002100:	1805883a 	mov	r2,r3
10002104:	d8802b15 	stw	r2,172(sp)
10002108:	1000ef16 	blt	r2,zero,100024c8 <___vfprintf_internal_r+0x212c>
1000210c:	04040074 	movhi	r16,4097
10002110:	d8802915 	stw	r2,164(sp)
10002114:	dcc02e15 	stw	r19,184(sp)
10002118:	d8002a15 	stw	zero,168(sp)
1000211c:	d8003215 	stw	zero,200(sp)
10002120:	843e7904 	addi	r16,r16,-1564
10002124:	0039883a 	mov	fp,zero
10002128:	003a8006 	br	10000b2c <__alt_data_end+0xf8000b2c>
1000212c:	0021883a 	mov	r16,zero
10002130:	003e0706 	br	10001950 <__alt_data_end+0xf8001950>
10002134:	d9002d17 	ldw	r4,180(sp)
10002138:	d9801e04 	addi	r6,sp,120
1000213c:	b80b883a 	mov	r5,r23
10002140:	00071f40 	call	100071f4 <__sprint_r>
10002144:	1039991e 	bne	r2,zero,100007ac <__alt_data_end+0xf80007ac>
10002148:	d8802617 	ldw	r2,152(sp)
1000214c:	d9403317 	ldw	r5,204(sp)
10002150:	d8c02017 	ldw	r3,128(sp)
10002154:	da000404 	addi	r8,sp,16
10002158:	2885c83a 	sub	r2,r5,r2
1000215c:	003dfb06 	br	1000194c <__alt_data_end+0xf800194c>
10002160:	9080004c 	andi	r2,r18,1
10002164:	103e8f1e 	bne	r2,zero,10001ba4 <__alt_data_end+0xf8001ba4>
10002168:	d8802117 	ldw	r2,132(sp)
1000216c:	003e9e06 	br	10001be8 <__alt_data_end+0xf8001be8>
10002170:	1025883a 	mov	r18,r2
10002174:	0039883a 	mov	fp,zero
10002178:	00800084 	movi	r2,2
1000217c:	003fd306 	br	100020cc <__alt_data_end+0xf80020cc>
10002180:	07000b44 	movi	fp,45
10002184:	df002785 	stb	fp,158(sp)
10002188:	003a1b06 	br	100009f8 <__alt_data_end+0xf80009f8>
1000218c:	00c00b44 	movi	r3,45
10002190:	d8c02785 	stb	r3,158(sp)
10002194:	d8802915 	stw	r2,164(sp)
10002198:	dc802c17 	ldw	r18,176(sp)
1000219c:	d8002a15 	stw	zero,168(sp)
100021a0:	07000b44 	movi	fp,45
100021a4:	003a5e06 	br	10000b20 <__alt_data_end+0xf8000b20>
100021a8:	04040074 	movhi	r16,4097
100021ac:	843e6e04 	addi	r16,r16,-1608
100021b0:	003f4706 	br	10001ed0 <__alt_data_end+0xf8001ed0>
100021b4:	d9002e17 	ldw	r4,184(sp)
100021b8:	d9402f17 	ldw	r5,188(sp)
100021bc:	20800017 	ldw	r2,0(r4)
100021c0:	21000104 	addi	r4,r4,4
100021c4:	d9002e15 	stw	r4,184(sp)
100021c8:	11400015 	stw	r5,0(r2)
100021cc:	0038ab06 	br	1000047c <__alt_data_end+0xf800047c>
100021d0:	dd802617 	ldw	r22,152(sp)
100021d4:	00bfff44 	movi	r2,-3
100021d8:	b0801c16 	blt	r22,r2,1000224c <___vfprintf_internal_r+0x1eb0>
100021dc:	d9402a17 	ldw	r5,168(sp)
100021e0:	2d801a16 	blt	r5,r22,1000224c <___vfprintf_internal_r+0x1eb0>
100021e4:	dd803215 	stw	r22,200(sp)
100021e8:	003e8906 	br	10001c10 <__alt_data_end+0xf8001c10>
100021ec:	01040074 	movhi	r4,4097
100021f0:	213e7b84 	addi	r4,r4,-1554
100021f4:	d9002c15 	stw	r4,176(sp)
100021f8:	003c9106 	br	10001440 <__alt_data_end+0xf8001440>
100021fc:	e005883a 	mov	r2,fp
10002200:	003e7906 	br	10001be8 <__alt_data_end+0xf8001be8>
10002204:	d9002a17 	ldw	r4,168(sp)
10002208:	df002783 	ldbu	fp,158(sp)
1000220c:	dcc02e15 	stw	r19,184(sp)
10002210:	d9002915 	stw	r4,164(sp)
10002214:	d9002b15 	stw	r4,172(sp)
10002218:	d8002a15 	stw	zero,168(sp)
1000221c:	d8003215 	stw	zero,200(sp)
10002220:	003a3b06 	br	10000b10 <__alt_data_end+0xf8000b10>
10002224:	9080004c 	andi	r2,r18,1
10002228:	0039883a 	mov	fp,zero
1000222c:	10000426 	beq	r2,zero,10002240 <___vfprintf_internal_r+0x1ea4>
10002230:	00800c04 	movi	r2,48
10002234:	dc001dc4 	addi	r16,sp,119
10002238:	d8801dc5 	stb	r2,119(sp)
1000223c:	003b6406 	br	10000fd0 <__alt_data_end+0xf8000fd0>
10002240:	d8002b15 	stw	zero,172(sp)
10002244:	dc001e04 	addi	r16,sp,120
10002248:	003a2b06 	br	10000af8 <__alt_data_end+0xf8000af8>
1000224c:	8c7fff84 	addi	r17,r17,-2
10002250:	b5bfffc4 	addi	r22,r22,-1
10002254:	dd802615 	stw	r22,152(sp)
10002258:	dc4022c5 	stb	r17,139(sp)
1000225c:	b000bf16 	blt	r22,zero,1000255c <___vfprintf_internal_r+0x21c0>
10002260:	00800ac4 	movi	r2,43
10002264:	d8802305 	stb	r2,140(sp)
10002268:	00800244 	movi	r2,9
1000226c:	15807016 	blt	r2,r22,10002430 <___vfprintf_internal_r+0x2094>
10002270:	00800c04 	movi	r2,48
10002274:	b5800c04 	addi	r22,r22,48
10002278:	d8802345 	stb	r2,141(sp)
1000227c:	dd802385 	stb	r22,142(sp)
10002280:	d88023c4 	addi	r2,sp,143
10002284:	df0022c4 	addi	fp,sp,139
10002288:	d8c03317 	ldw	r3,204(sp)
1000228c:	1739c83a 	sub	fp,r2,fp
10002290:	d9003317 	ldw	r4,204(sp)
10002294:	e0c7883a 	add	r3,fp,r3
10002298:	df003a15 	stw	fp,232(sp)
1000229c:	d8c02b15 	stw	r3,172(sp)
100022a0:	00800044 	movi	r2,1
100022a4:	1100b30e 	bge	r2,r4,10002574 <___vfprintf_internal_r+0x21d8>
100022a8:	d8c02b17 	ldw	r3,172(sp)
100022ac:	18c00044 	addi	r3,r3,1
100022b0:	d8c02b15 	stw	r3,172(sp)
100022b4:	1805883a 	mov	r2,r3
100022b8:	1800ac16 	blt	r3,zero,1000256c <___vfprintf_internal_r+0x21d0>
100022bc:	d8003215 	stw	zero,200(sp)
100022c0:	003e5d06 	br	10001c38 <__alt_data_end+0xf8001c38>
100022c4:	d9002d17 	ldw	r4,180(sp)
100022c8:	d9801e04 	addi	r6,sp,120
100022cc:	b80b883a 	mov	r5,r23
100022d0:	00071f40 	call	100071f4 <__sprint_r>
100022d4:	1039351e 	bne	r2,zero,100007ac <__alt_data_end+0xf80007ac>
100022d8:	dc402617 	ldw	r17,152(sp)
100022dc:	d8c02017 	ldw	r3,128(sp)
100022e0:	d8801f17 	ldw	r2,124(sp)
100022e4:	da000404 	addi	r8,sp,16
100022e8:	003ed606 	br	10001e44 <__alt_data_end+0xf8001e44>
100022ec:	182b883a 	mov	r21,r3
100022f0:	d8002a15 	stw	zero,168(sp)
100022f4:	00388c06 	br	10000528 <__alt_data_end+0xf8000528>
100022f8:	d8802a17 	ldw	r2,168(sp)
100022fc:	103e071e 	bne	r2,zero,10001b1c <__alt_data_end+0xf8001b1c>
10002300:	dc002a15 	stw	r16,168(sp)
10002304:	003e0506 	br	10001b1c <__alt_data_end+0xf8001b1c>
10002308:	d9002a17 	ldw	r4,168(sp)
1000230c:	20c00044 	addi	r3,r4,1
10002310:	003e0f06 	br	10001b50 <__alt_data_end+0xf8001b50>
10002314:	01400184 	movi	r5,6
10002318:	d9402a15 	stw	r5,168(sp)
1000231c:	003dff06 	br	10001b1c <__alt_data_end+0xf8001b1c>
10002320:	d8802104 	addi	r2,sp,132
10002324:	d8800315 	stw	r2,12(sp)
10002328:	d8802504 	addi	r2,sp,148
1000232c:	d8800215 	stw	r2,8(sp)
10002330:	d8802604 	addi	r2,sp,152
10002334:	d8800115 	stw	r2,4(sp)
10002338:	d8802a17 	ldw	r2,168(sp)
1000233c:	d9403617 	ldw	r5,216(sp)
10002340:	d9002d17 	ldw	r4,180(sp)
10002344:	d8800015 	stw	r2,0(sp)
10002348:	01c000c4 	movi	r7,3
1000234c:	980d883a 	mov	r6,r19
10002350:	da003d15 	stw	r8,244(sp)
10002354:	0002acc0 	call	10002acc <_dtoa_r>
10002358:	d8c02a17 	ldw	r3,168(sp)
1000235c:	da003d17 	ldw	r8,244(sp)
10002360:	1021883a 	mov	r16,r2
10002364:	10f9883a 	add	fp,r2,r3
10002368:	81000007 	ldb	r4,0(r16)
1000236c:	00800c04 	movi	r2,48
10002370:	20805e26 	beq	r4,r2,100024ec <___vfprintf_internal_r+0x2150>
10002374:	d8c02617 	ldw	r3,152(sp)
10002378:	e0f9883a 	add	fp,fp,r3
1000237c:	003e0a06 	br	10001ba8 <__alt_data_end+0xf8001ba8>
10002380:	00c00b44 	movi	r3,45
10002384:	24e0003c 	xorhi	r19,r4,32768
10002388:	d8c02905 	stb	r3,164(sp)
1000238c:	003de906 	br	10001b34 <__alt_data_end+0xf8001b34>
10002390:	d8c03217 	ldw	r3,200(sp)
10002394:	00c07a0e 	bge	zero,r3,10002580 <___vfprintf_internal_r+0x21e4>
10002398:	00800044 	movi	r2,1
1000239c:	d9003317 	ldw	r4,204(sp)
100023a0:	1105883a 	add	r2,r2,r4
100023a4:	d8802b15 	stw	r2,172(sp)
100023a8:	10004e16 	blt	r2,zero,100024e4 <___vfprintf_internal_r+0x2148>
100023ac:	044019c4 	movi	r17,103
100023b0:	003e2106 	br	10001c38 <__alt_data_end+0xf8001c38>
100023b4:	d9002a17 	ldw	r4,168(sp)
100023b8:	d8802104 	addi	r2,sp,132
100023bc:	d8800315 	stw	r2,12(sp)
100023c0:	d9000015 	stw	r4,0(sp)
100023c4:	d8802504 	addi	r2,sp,148
100023c8:	d9403617 	ldw	r5,216(sp)
100023cc:	d9002d17 	ldw	r4,180(sp)
100023d0:	d8800215 	stw	r2,8(sp)
100023d4:	d8802604 	addi	r2,sp,152
100023d8:	d8800115 	stw	r2,4(sp)
100023dc:	01c000c4 	movi	r7,3
100023e0:	980d883a 	mov	r6,r19
100023e4:	da003d15 	stw	r8,244(sp)
100023e8:	0002acc0 	call	10002acc <_dtoa_r>
100023ec:	d8c02a17 	ldw	r3,168(sp)
100023f0:	da003d17 	ldw	r8,244(sp)
100023f4:	1021883a 	mov	r16,r2
100023f8:	00801184 	movi	r2,70
100023fc:	80f9883a 	add	fp,r16,r3
10002400:	88bfd926 	beq	r17,r2,10002368 <__alt_data_end+0xf8002368>
10002404:	003de806 	br	10001ba8 <__alt_data_end+0xf8001ba8>
10002408:	d9002a17 	ldw	r4,168(sp)
1000240c:	00c04d0e 	bge	zero,r3,10002544 <___vfprintf_internal_r+0x21a8>
10002410:	2000441e 	bne	r4,zero,10002524 <___vfprintf_internal_r+0x2188>
10002414:	9480004c 	andi	r18,r18,1
10002418:	9000421e 	bne	r18,zero,10002524 <___vfprintf_internal_r+0x2188>
1000241c:	1805883a 	mov	r2,r3
10002420:	18006f16 	blt	r3,zero,100025e0 <___vfprintf_internal_r+0x2244>
10002424:	d8c03217 	ldw	r3,200(sp)
10002428:	d8c02b15 	stw	r3,172(sp)
1000242c:	003e0206 	br	10001c38 <__alt_data_end+0xf8001c38>
10002430:	df0022c4 	addi	fp,sp,139
10002434:	dc002a15 	stw	r16,168(sp)
10002438:	4027883a 	mov	r19,r8
1000243c:	e021883a 	mov	r16,fp
10002440:	b009883a 	mov	r4,r22
10002444:	01400284 	movi	r5,10
10002448:	000a9080 	call	1000a908 <__modsi3>
1000244c:	10800c04 	addi	r2,r2,48
10002450:	843fffc4 	addi	r16,r16,-1
10002454:	b009883a 	mov	r4,r22
10002458:	01400284 	movi	r5,10
1000245c:	80800005 	stb	r2,0(r16)
10002460:	000a8840 	call	1000a884 <__divsi3>
10002464:	102d883a 	mov	r22,r2
10002468:	00800244 	movi	r2,9
1000246c:	15bff416 	blt	r2,r22,10002440 <__alt_data_end+0xf8002440>
10002470:	9811883a 	mov	r8,r19
10002474:	b0800c04 	addi	r2,r22,48
10002478:	8027883a 	mov	r19,r16
1000247c:	997fffc4 	addi	r5,r19,-1
10002480:	98bfffc5 	stb	r2,-1(r19)
10002484:	dc002a17 	ldw	r16,168(sp)
10002488:	2f006d2e 	bgeu	r5,fp,10002640 <___vfprintf_internal_r+0x22a4>
1000248c:	d9c02384 	addi	r7,sp,142
10002490:	3ccfc83a 	sub	r7,r7,r19
10002494:	d9002344 	addi	r4,sp,141
10002498:	e1cf883a 	add	r7,fp,r7
1000249c:	00000106 	br	100024a4 <___vfprintf_internal_r+0x2108>
100024a0:	28800003 	ldbu	r2,0(r5)
100024a4:	20800005 	stb	r2,0(r4)
100024a8:	21000044 	addi	r4,r4,1
100024ac:	29400044 	addi	r5,r5,1
100024b0:	393ffb1e 	bne	r7,r4,100024a0 <__alt_data_end+0xf80024a0>
100024b4:	d8802304 	addi	r2,sp,140
100024b8:	14c5c83a 	sub	r2,r2,r19
100024bc:	d8c02344 	addi	r3,sp,141
100024c0:	1885883a 	add	r2,r3,r2
100024c4:	003f7006 	br	10002288 <__alt_data_end+0xf8002288>
100024c8:	0005883a 	mov	r2,zero
100024cc:	003f0f06 	br	1000210c <__alt_data_end+0xf800210c>
100024d0:	d8c03217 	ldw	r3,200(sp)
100024d4:	18c00044 	addi	r3,r3,1
100024d8:	d8c02b15 	stw	r3,172(sp)
100024dc:	1805883a 	mov	r2,r3
100024e0:	183fb20e 	bge	r3,zero,100023ac <__alt_data_end+0xf80023ac>
100024e4:	0005883a 	mov	r2,zero
100024e8:	003fb006 	br	100023ac <__alt_data_end+0xf80023ac>
100024ec:	d9003617 	ldw	r4,216(sp)
100024f0:	000d883a 	mov	r6,zero
100024f4:	000f883a 	mov	r7,zero
100024f8:	980b883a 	mov	r5,r19
100024fc:	d8c03c15 	stw	r3,240(sp)
10002500:	da003d15 	stw	r8,244(sp)
10002504:	000bcdc0 	call	1000bcdc <__eqdf2>
10002508:	d8c03c17 	ldw	r3,240(sp)
1000250c:	da003d17 	ldw	r8,244(sp)
10002510:	103f9826 	beq	r2,zero,10002374 <__alt_data_end+0xf8002374>
10002514:	00800044 	movi	r2,1
10002518:	10c7c83a 	sub	r3,r2,r3
1000251c:	d8c02615 	stw	r3,152(sp)
10002520:	003f9506 	br	10002378 <__alt_data_end+0xf8002378>
10002524:	d9002a17 	ldw	r4,168(sp)
10002528:	d8c03217 	ldw	r3,200(sp)
1000252c:	20800044 	addi	r2,r4,1
10002530:	1885883a 	add	r2,r3,r2
10002534:	d8802b15 	stw	r2,172(sp)
10002538:	103dbf0e 	bge	r2,zero,10001c38 <__alt_data_end+0xf8001c38>
1000253c:	0005883a 	mov	r2,zero
10002540:	003dbd06 	br	10001c38 <__alt_data_end+0xf8001c38>
10002544:	2000201e 	bne	r4,zero,100025c8 <___vfprintf_internal_r+0x222c>
10002548:	9480004c 	andi	r18,r18,1
1000254c:	90001e1e 	bne	r18,zero,100025c8 <___vfprintf_internal_r+0x222c>
10002550:	00800044 	movi	r2,1
10002554:	d8802b15 	stw	r2,172(sp)
10002558:	003db706 	br	10001c38 <__alt_data_end+0xf8001c38>
1000255c:	00800b44 	movi	r2,45
10002560:	05adc83a 	sub	r22,zero,r22
10002564:	d8802305 	stb	r2,140(sp)
10002568:	003f3f06 	br	10002268 <__alt_data_end+0xf8002268>
1000256c:	0005883a 	mov	r2,zero
10002570:	003f5206 	br	100022bc <__alt_data_end+0xf80022bc>
10002574:	90a4703a 	and	r18,r18,r2
10002578:	903f4e26 	beq	r18,zero,100022b4 <__alt_data_end+0xf80022b4>
1000257c:	003f4a06 	br	100022a8 <__alt_data_end+0xf80022a8>
10002580:	00800084 	movi	r2,2
10002584:	10c5c83a 	sub	r2,r2,r3
10002588:	003f8406 	br	1000239c <__alt_data_end+0xf800239c>
1000258c:	d9402e17 	ldw	r5,184(sp)
10002590:	d9002e17 	ldw	r4,184(sp)
10002594:	ac400043 	ldbu	r17,1(r21)
10002598:	29400017 	ldw	r5,0(r5)
1000259c:	20800104 	addi	r2,r4,4
100025a0:	d8802e15 	stw	r2,184(sp)
100025a4:	d9402a15 	stw	r5,168(sp)
100025a8:	182b883a 	mov	r21,r3
100025ac:	283e7b0e 	bge	r5,zero,10001f9c <__alt_data_end+0xf8001f9c>
100025b0:	8c403fcc 	andi	r17,r17,255
100025b4:	017fffc4 	movi	r5,-1
100025b8:	8c40201c 	xori	r17,r17,128
100025bc:	d9402a15 	stw	r5,168(sp)
100025c0:	8c7fe004 	addi	r17,r17,-128
100025c4:	0037d706 	br	10000524 <__alt_data_end+0xf8000524>
100025c8:	d8c02a17 	ldw	r3,168(sp)
100025cc:	18c00084 	addi	r3,r3,2
100025d0:	d8c02b15 	stw	r3,172(sp)
100025d4:	1805883a 	mov	r2,r3
100025d8:	183d970e 	bge	r3,zero,10001c38 <__alt_data_end+0xf8001c38>
100025dc:	003fd706 	br	1000253c <__alt_data_end+0xf800253c>
100025e0:	0005883a 	mov	r2,zero
100025e4:	003f8f06 	br	10002424 <__alt_data_end+0xf8002424>
100025e8:	9080004c 	andi	r2,r18,1
100025ec:	103f821e 	bne	r2,zero,100023f8 <__alt_data_end+0xf80023f8>
100025f0:	d8802117 	ldw	r2,132(sp)
100025f4:	1405c83a 	sub	r2,r2,r16
100025f8:	d8803315 	stw	r2,204(sp)
100025fc:	b47ef426 	beq	r22,r17,100021d0 <__alt_data_end+0xf80021d0>
10002600:	dd802617 	ldw	r22,152(sp)
10002604:	003f1206 	br	10002250 <__alt_data_end+0xf8002250>
10002608:	d8c02b03 	ldbu	r3,172(sp)
1000260c:	d8c02785 	stb	r3,158(sp)
10002610:	0038df06 	br	10000990 <__alt_data_end+0xf8000990>
10002614:	d8c02b03 	ldbu	r3,172(sp)
10002618:	d8c02785 	stb	r3,158(sp)
1000261c:	0038aa06 	br	100008c8 <__alt_data_end+0xf80008c8>
10002620:	d8c02b03 	ldbu	r3,172(sp)
10002624:	d8c02785 	stb	r3,158(sp)
10002628:	003a4306 	br	10000f38 <__alt_data_end+0xf8000f38>
1000262c:	d8c02b03 	ldbu	r3,172(sp)
10002630:	d8c02785 	stb	r3,158(sp)
10002634:	003af506 	br	1000120c <__alt_data_end+0xf800120c>
10002638:	0005883a 	mov	r2,zero
1000263c:	003d7b06 	br	10001c2c <__alt_data_end+0xf8001c2c>
10002640:	d8802344 	addi	r2,sp,141
10002644:	003f1006 	br	10002288 <__alt_data_end+0xf8002288>
10002648:	d8c02b03 	ldbu	r3,172(sp)
1000264c:	d8c02785 	stb	r3,158(sp)
10002650:	0038fd06 	br	10000a48 <__alt_data_end+0xf8000a48>
10002654:	d8c02b03 	ldbu	r3,172(sp)
10002658:	d8c02785 	stb	r3,158(sp)
1000265c:	003a9706 	br	100010bc <__alt_data_end+0xf80010bc>
10002660:	d8c02b03 	ldbu	r3,172(sp)
10002664:	d8c02785 	stb	r3,158(sp)
10002668:	003a1806 	br	10000ecc <__alt_data_end+0xf8000ecc>
1000266c:	d8c02b03 	ldbu	r3,172(sp)
10002670:	d8c02785 	stb	r3,158(sp)
10002674:	003abe06 	br	10001170 <__alt_data_end+0xf8001170>

10002678 <__vfprintf_internal>:
10002678:	00840074 	movhi	r2,4097
1000267c:	1085d704 	addi	r2,r2,5980
10002680:	300f883a 	mov	r7,r6
10002684:	280d883a 	mov	r6,r5
10002688:	200b883a 	mov	r5,r4
1000268c:	11000017 	ldw	r4,0(r2)
10002690:	000039c1 	jmpi	1000039c <___vfprintf_internal_r>

10002694 <__sbprintf>:
10002694:	2880030b 	ldhu	r2,12(r5)
10002698:	2ac01917 	ldw	r11,100(r5)
1000269c:	2a80038b 	ldhu	r10,14(r5)
100026a0:	2a400717 	ldw	r9,28(r5)
100026a4:	2a000917 	ldw	r8,36(r5)
100026a8:	defee204 	addi	sp,sp,-1144
100026ac:	00c10004 	movi	r3,1024
100026b0:	dc011a15 	stw	r16,1128(sp)
100026b4:	10bfff4c 	andi	r2,r2,65533
100026b8:	2821883a 	mov	r16,r5
100026bc:	d8cb883a 	add	r5,sp,r3
100026c0:	dc811c15 	stw	r18,1136(sp)
100026c4:	dc411b15 	stw	r17,1132(sp)
100026c8:	dfc11d15 	stw	ra,1140(sp)
100026cc:	2025883a 	mov	r18,r4
100026d0:	d881030d 	sth	r2,1036(sp)
100026d4:	dac11915 	stw	r11,1124(sp)
100026d8:	da81038d 	sth	r10,1038(sp)
100026dc:	da410715 	stw	r9,1052(sp)
100026e0:	da010915 	stw	r8,1060(sp)
100026e4:	dec10015 	stw	sp,1024(sp)
100026e8:	dec10415 	stw	sp,1040(sp)
100026ec:	d8c10215 	stw	r3,1032(sp)
100026f0:	d8c10515 	stw	r3,1044(sp)
100026f4:	d8010615 	stw	zero,1048(sp)
100026f8:	000039c0 	call	1000039c <___vfprintf_internal_r>
100026fc:	1023883a 	mov	r17,r2
10002700:	10000416 	blt	r2,zero,10002714 <__sbprintf+0x80>
10002704:	d9410004 	addi	r5,sp,1024
10002708:	9009883a 	mov	r4,r18
1000270c:	00043700 	call	10004370 <_fflush_r>
10002710:	10000d1e 	bne	r2,zero,10002748 <__sbprintf+0xb4>
10002714:	d881030b 	ldhu	r2,1036(sp)
10002718:	1080100c 	andi	r2,r2,64
1000271c:	10000326 	beq	r2,zero,1000272c <__sbprintf+0x98>
10002720:	8080030b 	ldhu	r2,12(r16)
10002724:	10801014 	ori	r2,r2,64
10002728:	8080030d 	sth	r2,12(r16)
1000272c:	8805883a 	mov	r2,r17
10002730:	dfc11d17 	ldw	ra,1140(sp)
10002734:	dc811c17 	ldw	r18,1136(sp)
10002738:	dc411b17 	ldw	r17,1132(sp)
1000273c:	dc011a17 	ldw	r16,1128(sp)
10002740:	dec11e04 	addi	sp,sp,1144
10002744:	f800283a 	ret
10002748:	047fffc4 	movi	r17,-1
1000274c:	003ff106 	br	10002714 <__alt_data_end+0xf8002714>

10002750 <__swsetup_r>:
10002750:	00840074 	movhi	r2,4097
10002754:	defffd04 	addi	sp,sp,-12
10002758:	1085d704 	addi	r2,r2,5980
1000275c:	dc400115 	stw	r17,4(sp)
10002760:	2023883a 	mov	r17,r4
10002764:	11000017 	ldw	r4,0(r2)
10002768:	dc000015 	stw	r16,0(sp)
1000276c:	dfc00215 	stw	ra,8(sp)
10002770:	2821883a 	mov	r16,r5
10002774:	20000226 	beq	r4,zero,10002780 <__swsetup_r+0x30>
10002778:	20800e17 	ldw	r2,56(r4)
1000277c:	10003126 	beq	r2,zero,10002844 <__swsetup_r+0xf4>
10002780:	8080030b 	ldhu	r2,12(r16)
10002784:	10c0020c 	andi	r3,r2,8
10002788:	1009883a 	mov	r4,r2
1000278c:	18000f26 	beq	r3,zero,100027cc <__swsetup_r+0x7c>
10002790:	80c00417 	ldw	r3,16(r16)
10002794:	18001526 	beq	r3,zero,100027ec <__swsetup_r+0x9c>
10002798:	1100004c 	andi	r4,r2,1
1000279c:	20001c1e 	bne	r4,zero,10002810 <__swsetup_r+0xc0>
100027a0:	1080008c 	andi	r2,r2,2
100027a4:	1000291e 	bne	r2,zero,1000284c <__swsetup_r+0xfc>
100027a8:	80800517 	ldw	r2,20(r16)
100027ac:	80800215 	stw	r2,8(r16)
100027b0:	18001c26 	beq	r3,zero,10002824 <__swsetup_r+0xd4>
100027b4:	0005883a 	mov	r2,zero
100027b8:	dfc00217 	ldw	ra,8(sp)
100027bc:	dc400117 	ldw	r17,4(sp)
100027c0:	dc000017 	ldw	r16,0(sp)
100027c4:	dec00304 	addi	sp,sp,12
100027c8:	f800283a 	ret
100027cc:	2080040c 	andi	r2,r4,16
100027d0:	10002e26 	beq	r2,zero,1000288c <__swsetup_r+0x13c>
100027d4:	2080010c 	andi	r2,r4,4
100027d8:	10001e1e 	bne	r2,zero,10002854 <__swsetup_r+0x104>
100027dc:	80c00417 	ldw	r3,16(r16)
100027e0:	20800214 	ori	r2,r4,8
100027e4:	8080030d 	sth	r2,12(r16)
100027e8:	183feb1e 	bne	r3,zero,10002798 <__alt_data_end+0xf8002798>
100027ec:	1100a00c 	andi	r4,r2,640
100027f0:	01408004 	movi	r5,512
100027f4:	217fe826 	beq	r4,r5,10002798 <__alt_data_end+0xf8002798>
100027f8:	800b883a 	mov	r5,r16
100027fc:	8809883a 	mov	r4,r17
10002800:	0004e440 	call	10004e44 <__smakebuf_r>
10002804:	8080030b 	ldhu	r2,12(r16)
10002808:	80c00417 	ldw	r3,16(r16)
1000280c:	003fe206 	br	10002798 <__alt_data_end+0xf8002798>
10002810:	80800517 	ldw	r2,20(r16)
10002814:	80000215 	stw	zero,8(r16)
10002818:	0085c83a 	sub	r2,zero,r2
1000281c:	80800615 	stw	r2,24(r16)
10002820:	183fe41e 	bne	r3,zero,100027b4 <__alt_data_end+0xf80027b4>
10002824:	80c0030b 	ldhu	r3,12(r16)
10002828:	0005883a 	mov	r2,zero
1000282c:	1900200c 	andi	r4,r3,128
10002830:	203fe126 	beq	r4,zero,100027b8 <__alt_data_end+0xf80027b8>
10002834:	18c01014 	ori	r3,r3,64
10002838:	80c0030d 	sth	r3,12(r16)
1000283c:	00bfffc4 	movi	r2,-1
10002840:	003fdd06 	br	100027b8 <__alt_data_end+0xf80027b8>
10002844:	000475c0 	call	1000475c <__sinit>
10002848:	003fcd06 	br	10002780 <__alt_data_end+0xf8002780>
1000284c:	0005883a 	mov	r2,zero
10002850:	003fd606 	br	100027ac <__alt_data_end+0xf80027ac>
10002854:	81400c17 	ldw	r5,48(r16)
10002858:	28000626 	beq	r5,zero,10002874 <__swsetup_r+0x124>
1000285c:	80801004 	addi	r2,r16,64
10002860:	28800326 	beq	r5,r2,10002870 <__swsetup_r+0x120>
10002864:	8809883a 	mov	r4,r17
10002868:	00048d00 	call	100048d0 <_free_r>
1000286c:	8100030b 	ldhu	r4,12(r16)
10002870:	80000c15 	stw	zero,48(r16)
10002874:	80c00417 	ldw	r3,16(r16)
10002878:	00bff6c4 	movi	r2,-37
1000287c:	1108703a 	and	r4,r2,r4
10002880:	80000115 	stw	zero,4(r16)
10002884:	80c00015 	stw	r3,0(r16)
10002888:	003fd506 	br	100027e0 <__alt_data_end+0xf80027e0>
1000288c:	00800244 	movi	r2,9
10002890:	88800015 	stw	r2,0(r17)
10002894:	20801014 	ori	r2,r4,64
10002898:	8080030d 	sth	r2,12(r16)
1000289c:	00bfffc4 	movi	r2,-1
100028a0:	003fc506 	br	100027b8 <__alt_data_end+0xf80027b8>

100028a4 <quorem>:
100028a4:	defff204 	addi	sp,sp,-56
100028a8:	ddc00b15 	stw	r23,44(sp)
100028ac:	20800417 	ldw	r2,16(r4)
100028b0:	2dc00417 	ldw	r23,16(r5)
100028b4:	dfc00d15 	stw	ra,52(sp)
100028b8:	df000c15 	stw	fp,48(sp)
100028bc:	dd800a15 	stw	r22,40(sp)
100028c0:	dd400915 	stw	r21,36(sp)
100028c4:	dd000815 	stw	r20,32(sp)
100028c8:	dcc00715 	stw	r19,28(sp)
100028cc:	dc800615 	stw	r18,24(sp)
100028d0:	dc400515 	stw	r17,20(sp)
100028d4:	dc000415 	stw	r16,16(sp)
100028d8:	15c07a16 	blt	r2,r23,10002ac4 <quorem+0x220>
100028dc:	bdffffc4 	addi	r23,r23,-1
100028e0:	bde9883a 	add	r20,r23,r23
100028e4:	28c00504 	addi	r3,r5,20
100028e8:	a529883a 	add	r20,r20,r20
100028ec:	1d39883a 	add	fp,r3,r20
100028f0:	24c00504 	addi	r19,r4,20
100028f4:	d9400215 	stw	r5,8(sp)
100028f8:	9d29883a 	add	r20,r19,r20
100028fc:	e1400017 	ldw	r5,0(fp)
10002900:	d9000015 	stw	r4,0(sp)
10002904:	a1000017 	ldw	r4,0(r20)
10002908:	29400044 	addi	r5,r5,1
1000290c:	d8c00115 	stw	r3,4(sp)
10002910:	dd000315 	stw	r20,12(sp)
10002914:	000a97c0 	call	1000a97c <__udivsi3>
10002918:	1025883a 	mov	r18,r2
1000291c:	10003026 	beq	r2,zero,100029e0 <quorem+0x13c>
10002920:	dc400117 	ldw	r17,4(sp)
10002924:	9829883a 	mov	r20,r19
10002928:	002d883a 	mov	r22,zero
1000292c:	0021883a 	mov	r16,zero
10002930:	8d400017 	ldw	r21,0(r17)
10002934:	900b883a 	mov	r5,r18
10002938:	8c400104 	addi	r17,r17,4
1000293c:	a93fffcc 	andi	r4,r21,65535
10002940:	000aa380 	call	1000aa38 <__mulsi3>
10002944:	a808d43a 	srli	r4,r21,16
10002948:	900b883a 	mov	r5,r18
1000294c:	15ad883a 	add	r22,r2,r22
10002950:	000aa380 	call	1000aa38 <__mulsi3>
10002954:	a1000017 	ldw	r4,0(r20)
10002958:	b00cd43a 	srli	r6,r22,16
1000295c:	b0ffffcc 	andi	r3,r22,65535
10002960:	217fffcc 	andi	r5,r4,65535
10002964:	2c21883a 	add	r16,r5,r16
10002968:	80c7c83a 	sub	r3,r16,r3
1000296c:	2008d43a 	srli	r4,r4,16
10002970:	1185883a 	add	r2,r2,r6
10002974:	1821d43a 	srai	r16,r3,16
10002978:	117fffcc 	andi	r5,r2,65535
1000297c:	2149c83a 	sub	r4,r4,r5
10002980:	2421883a 	add	r16,r4,r16
10002984:	8008943a 	slli	r4,r16,16
10002988:	18ffffcc 	andi	r3,r3,65535
1000298c:	102cd43a 	srli	r22,r2,16
10002990:	20c8b03a 	or	r4,r4,r3
10002994:	a1000015 	stw	r4,0(r20)
10002998:	8021d43a 	srai	r16,r16,16
1000299c:	a5000104 	addi	r20,r20,4
100029a0:	e47fe32e 	bgeu	fp,r17,10002930 <__alt_data_end+0xf8002930>
100029a4:	d8c00317 	ldw	r3,12(sp)
100029a8:	18800017 	ldw	r2,0(r3)
100029ac:	10000c1e 	bne	r2,zero,100029e0 <quorem+0x13c>
100029b0:	18bfff04 	addi	r2,r3,-4
100029b4:	9880082e 	bgeu	r19,r2,100029d8 <quorem+0x134>
100029b8:	18ffff17 	ldw	r3,-4(r3)
100029bc:	18000326 	beq	r3,zero,100029cc <quorem+0x128>
100029c0:	00000506 	br	100029d8 <quorem+0x134>
100029c4:	10c00017 	ldw	r3,0(r2)
100029c8:	1800031e 	bne	r3,zero,100029d8 <quorem+0x134>
100029cc:	10bfff04 	addi	r2,r2,-4
100029d0:	bdffffc4 	addi	r23,r23,-1
100029d4:	98bffb36 	bltu	r19,r2,100029c4 <__alt_data_end+0xf80029c4>
100029d8:	d8c00017 	ldw	r3,0(sp)
100029dc:	1dc00415 	stw	r23,16(r3)
100029e0:	d9400217 	ldw	r5,8(sp)
100029e4:	d9000017 	ldw	r4,0(sp)
100029e8:	00064e40 	call	100064e4 <__mcmp>
100029ec:	10002816 	blt	r2,zero,10002a90 <quorem+0x1ec>
100029f0:	dc400117 	ldw	r17,4(sp)
100029f4:	94800044 	addi	r18,r18,1
100029f8:	980d883a 	mov	r6,r19
100029fc:	0007883a 	mov	r3,zero
10002a00:	31000017 	ldw	r4,0(r6)
10002a04:	89400017 	ldw	r5,0(r17)
10002a08:	31800104 	addi	r6,r6,4
10002a0c:	20bfffcc 	andi	r2,r4,65535
10002a10:	10c7883a 	add	r3,r2,r3
10002a14:	28bfffcc 	andi	r2,r5,65535
10002a18:	1885c83a 	sub	r2,r3,r2
10002a1c:	280ad43a 	srli	r5,r5,16
10002a20:	2008d43a 	srli	r4,r4,16
10002a24:	1007d43a 	srai	r3,r2,16
10002a28:	10bfffcc 	andi	r2,r2,65535
10002a2c:	2149c83a 	sub	r4,r4,r5
10002a30:	20c9883a 	add	r4,r4,r3
10002a34:	200a943a 	slli	r5,r4,16
10002a38:	8c400104 	addi	r17,r17,4
10002a3c:	2007d43a 	srai	r3,r4,16
10002a40:	2884b03a 	or	r2,r5,r2
10002a44:	30bfff15 	stw	r2,-4(r6)
10002a48:	e47fed2e 	bgeu	fp,r17,10002a00 <__alt_data_end+0xf8002a00>
10002a4c:	bdc5883a 	add	r2,r23,r23
10002a50:	1085883a 	add	r2,r2,r2
10002a54:	9887883a 	add	r3,r19,r2
10002a58:	18800017 	ldw	r2,0(r3)
10002a5c:	10000c1e 	bne	r2,zero,10002a90 <quorem+0x1ec>
10002a60:	18bfff04 	addi	r2,r3,-4
10002a64:	9880082e 	bgeu	r19,r2,10002a88 <quorem+0x1e4>
10002a68:	18ffff17 	ldw	r3,-4(r3)
10002a6c:	18000326 	beq	r3,zero,10002a7c <quorem+0x1d8>
10002a70:	00000506 	br	10002a88 <quorem+0x1e4>
10002a74:	10c00017 	ldw	r3,0(r2)
10002a78:	1800031e 	bne	r3,zero,10002a88 <quorem+0x1e4>
10002a7c:	10bfff04 	addi	r2,r2,-4
10002a80:	bdffffc4 	addi	r23,r23,-1
10002a84:	98bffb36 	bltu	r19,r2,10002a74 <__alt_data_end+0xf8002a74>
10002a88:	d8c00017 	ldw	r3,0(sp)
10002a8c:	1dc00415 	stw	r23,16(r3)
10002a90:	9005883a 	mov	r2,r18
10002a94:	dfc00d17 	ldw	ra,52(sp)
10002a98:	df000c17 	ldw	fp,48(sp)
10002a9c:	ddc00b17 	ldw	r23,44(sp)
10002aa0:	dd800a17 	ldw	r22,40(sp)
10002aa4:	dd400917 	ldw	r21,36(sp)
10002aa8:	dd000817 	ldw	r20,32(sp)
10002aac:	dcc00717 	ldw	r19,28(sp)
10002ab0:	dc800617 	ldw	r18,24(sp)
10002ab4:	dc400517 	ldw	r17,20(sp)
10002ab8:	dc000417 	ldw	r16,16(sp)
10002abc:	dec00e04 	addi	sp,sp,56
10002ac0:	f800283a 	ret
10002ac4:	0005883a 	mov	r2,zero
10002ac8:	003ff206 	br	10002a94 <__alt_data_end+0xf8002a94>

10002acc <_dtoa_r>:
10002acc:	20801017 	ldw	r2,64(r4)
10002ad0:	deffde04 	addi	sp,sp,-136
10002ad4:	df002015 	stw	fp,128(sp)
10002ad8:	dcc01b15 	stw	r19,108(sp)
10002adc:	dc801a15 	stw	r18,104(sp)
10002ae0:	dc401915 	stw	r17,100(sp)
10002ae4:	dc001815 	stw	r16,96(sp)
10002ae8:	dfc02115 	stw	ra,132(sp)
10002aec:	ddc01f15 	stw	r23,124(sp)
10002af0:	dd801e15 	stw	r22,120(sp)
10002af4:	dd401d15 	stw	r21,116(sp)
10002af8:	dd001c15 	stw	r20,112(sp)
10002afc:	d9c00315 	stw	r7,12(sp)
10002b00:	2039883a 	mov	fp,r4
10002b04:	3023883a 	mov	r17,r6
10002b08:	2825883a 	mov	r18,r5
10002b0c:	dc002417 	ldw	r16,144(sp)
10002b10:	3027883a 	mov	r19,r6
10002b14:	10000826 	beq	r2,zero,10002b38 <_dtoa_r+0x6c>
10002b18:	21801117 	ldw	r6,68(r4)
10002b1c:	00c00044 	movi	r3,1
10002b20:	100b883a 	mov	r5,r2
10002b24:	1986983a 	sll	r3,r3,r6
10002b28:	11800115 	stw	r6,4(r2)
10002b2c:	10c00215 	stw	r3,8(r2)
10002b30:	0005c080 	call	10005c08 <_Bfree>
10002b34:	e0001015 	stw	zero,64(fp)
10002b38:	88002e16 	blt	r17,zero,10002bf4 <_dtoa_r+0x128>
10002b3c:	80000015 	stw	zero,0(r16)
10002b40:	889ffc2c 	andhi	r2,r17,32752
10002b44:	00dffc34 	movhi	r3,32752
10002b48:	10c01c26 	beq	r2,r3,10002bbc <_dtoa_r+0xf0>
10002b4c:	000d883a 	mov	r6,zero
10002b50:	000f883a 	mov	r7,zero
10002b54:	9009883a 	mov	r4,r18
10002b58:	980b883a 	mov	r5,r19
10002b5c:	000bcdc0 	call	1000bcdc <__eqdf2>
10002b60:	10002b1e 	bne	r2,zero,10002c10 <_dtoa_r+0x144>
10002b64:	d9c02317 	ldw	r7,140(sp)
10002b68:	00800044 	movi	r2,1
10002b6c:	38800015 	stw	r2,0(r7)
10002b70:	d8802517 	ldw	r2,148(sp)
10002b74:	10019e26 	beq	r2,zero,100031f0 <_dtoa_r+0x724>
10002b78:	d8c02517 	ldw	r3,148(sp)
10002b7c:	00840074 	movhi	r2,4097
10002b80:	10be7b44 	addi	r2,r2,-1555
10002b84:	18800015 	stw	r2,0(r3)
10002b88:	10bfffc4 	addi	r2,r2,-1
10002b8c:	dfc02117 	ldw	ra,132(sp)
10002b90:	df002017 	ldw	fp,128(sp)
10002b94:	ddc01f17 	ldw	r23,124(sp)
10002b98:	dd801e17 	ldw	r22,120(sp)
10002b9c:	dd401d17 	ldw	r21,116(sp)
10002ba0:	dd001c17 	ldw	r20,112(sp)
10002ba4:	dcc01b17 	ldw	r19,108(sp)
10002ba8:	dc801a17 	ldw	r18,104(sp)
10002bac:	dc401917 	ldw	r17,100(sp)
10002bb0:	dc001817 	ldw	r16,96(sp)
10002bb4:	dec02204 	addi	sp,sp,136
10002bb8:	f800283a 	ret
10002bbc:	d8c02317 	ldw	r3,140(sp)
10002bc0:	0089c3c4 	movi	r2,9999
10002bc4:	18800015 	stw	r2,0(r3)
10002bc8:	90017726 	beq	r18,zero,100031a8 <_dtoa_r+0x6dc>
10002bcc:	00840074 	movhi	r2,4097
10002bd0:	10be8704 	addi	r2,r2,-1508
10002bd4:	d9002517 	ldw	r4,148(sp)
10002bd8:	203fec26 	beq	r4,zero,10002b8c <__alt_data_end+0xf8002b8c>
10002bdc:	10c000c7 	ldb	r3,3(r2)
10002be0:	1801781e 	bne	r3,zero,100031c4 <_dtoa_r+0x6f8>
10002be4:	10c000c4 	addi	r3,r2,3
10002be8:	d9802517 	ldw	r6,148(sp)
10002bec:	30c00015 	stw	r3,0(r6)
10002bf0:	003fe606 	br	10002b8c <__alt_data_end+0xf8002b8c>
10002bf4:	04e00034 	movhi	r19,32768
10002bf8:	9cffffc4 	addi	r19,r19,-1
10002bfc:	00800044 	movi	r2,1
10002c00:	8ce6703a 	and	r19,r17,r19
10002c04:	80800015 	stw	r2,0(r16)
10002c08:	9823883a 	mov	r17,r19
10002c0c:	003fcc06 	br	10002b40 <__alt_data_end+0xf8002b40>
10002c10:	d8800204 	addi	r2,sp,8
10002c14:	d8800015 	stw	r2,0(sp)
10002c18:	d9c00104 	addi	r7,sp,4
10002c1c:	900b883a 	mov	r5,r18
10002c20:	980d883a 	mov	r6,r19
10002c24:	e009883a 	mov	r4,fp
10002c28:	8820d53a 	srli	r16,r17,20
10002c2c:	00068b00 	call	100068b0 <__d2b>
10002c30:	d8800915 	stw	r2,36(sp)
10002c34:	8001651e 	bne	r16,zero,100031cc <_dtoa_r+0x700>
10002c38:	dd800217 	ldw	r22,8(sp)
10002c3c:	dc000117 	ldw	r16,4(sp)
10002c40:	00800804 	movi	r2,32
10002c44:	b421883a 	add	r16,r22,r16
10002c48:	80c10c84 	addi	r3,r16,1074
10002c4c:	10c2d10e 	bge	r2,r3,10003794 <_dtoa_r+0xcc8>
10002c50:	00801004 	movi	r2,64
10002c54:	81010484 	addi	r4,r16,1042
10002c58:	10c7c83a 	sub	r3,r2,r3
10002c5c:	9108d83a 	srl	r4,r18,r4
10002c60:	88e2983a 	sll	r17,r17,r3
10002c64:	2448b03a 	or	r4,r4,r17
10002c68:	000d1f80 	call	1000d1f8 <__floatunsidf>
10002c6c:	017f8434 	movhi	r5,65040
10002c70:	01800044 	movi	r6,1
10002c74:	1009883a 	mov	r4,r2
10002c78:	194b883a 	add	r5,r3,r5
10002c7c:	843fffc4 	addi	r16,r16,-1
10002c80:	d9801115 	stw	r6,68(sp)
10002c84:	000d883a 	mov	r6,zero
10002c88:	01cffe34 	movhi	r7,16376
10002c8c:	000c7a00 	call	1000c7a0 <__subdf3>
10002c90:	0198dbf4 	movhi	r6,25455
10002c94:	01cff4f4 	movhi	r7,16339
10002c98:	3190d844 	addi	r6,r6,17249
10002c9c:	39e1e9c4 	addi	r7,r7,-30809
10002ca0:	1009883a 	mov	r4,r2
10002ca4:	180b883a 	mov	r5,r3
10002ca8:	000bf340 	call	1000bf34 <__muldf3>
10002cac:	01a2d874 	movhi	r6,35681
10002cb0:	01cff1f4 	movhi	r7,16327
10002cb4:	31b22cc4 	addi	r6,r6,-14157
10002cb8:	39e28a04 	addi	r7,r7,-30168
10002cbc:	180b883a 	mov	r5,r3
10002cc0:	1009883a 	mov	r4,r2
10002cc4:	000aa600 	call	1000aa60 <__adddf3>
10002cc8:	8009883a 	mov	r4,r16
10002ccc:	1029883a 	mov	r20,r2
10002cd0:	1823883a 	mov	r17,r3
10002cd4:	000d11c0 	call	1000d11c <__floatsidf>
10002cd8:	019427f4 	movhi	r6,20639
10002cdc:	01cff4f4 	movhi	r7,16339
10002ce0:	319e7ec4 	addi	r6,r6,31227
10002ce4:	39d104c4 	addi	r7,r7,17427
10002ce8:	1009883a 	mov	r4,r2
10002cec:	180b883a 	mov	r5,r3
10002cf0:	000bf340 	call	1000bf34 <__muldf3>
10002cf4:	100d883a 	mov	r6,r2
10002cf8:	180f883a 	mov	r7,r3
10002cfc:	a009883a 	mov	r4,r20
10002d00:	880b883a 	mov	r5,r17
10002d04:	000aa600 	call	1000aa60 <__adddf3>
10002d08:	1009883a 	mov	r4,r2
10002d0c:	180b883a 	mov	r5,r3
10002d10:	1029883a 	mov	r20,r2
10002d14:	1823883a 	mov	r17,r3
10002d18:	000d09c0 	call	1000d09c <__fixdfsi>
10002d1c:	000d883a 	mov	r6,zero
10002d20:	000f883a 	mov	r7,zero
10002d24:	a009883a 	mov	r4,r20
10002d28:	880b883a 	mov	r5,r17
10002d2c:	d8800515 	stw	r2,20(sp)
10002d30:	000be400 	call	1000be40 <__ledf2>
10002d34:	10028716 	blt	r2,zero,10003754 <_dtoa_r+0xc88>
10002d38:	d8c00517 	ldw	r3,20(sp)
10002d3c:	00800584 	movi	r2,22
10002d40:	10c27536 	bltu	r2,r3,10003718 <_dtoa_r+0xc4c>
10002d44:	180490fa 	slli	r2,r3,3
10002d48:	00c40074 	movhi	r3,4097
10002d4c:	18fea304 	addi	r3,r3,-1396
10002d50:	1885883a 	add	r2,r3,r2
10002d54:	11000017 	ldw	r4,0(r2)
10002d58:	11400117 	ldw	r5,4(r2)
10002d5c:	900d883a 	mov	r6,r18
10002d60:	980f883a 	mov	r7,r19
10002d64:	000bd640 	call	1000bd64 <__gedf2>
10002d68:	00828d0e 	bge	zero,r2,100037a0 <_dtoa_r+0xcd4>
10002d6c:	d9000517 	ldw	r4,20(sp)
10002d70:	d8000e15 	stw	zero,56(sp)
10002d74:	213fffc4 	addi	r4,r4,-1
10002d78:	d9000515 	stw	r4,20(sp)
10002d7c:	b42dc83a 	sub	r22,r22,r16
10002d80:	b5bfffc4 	addi	r22,r22,-1
10002d84:	b0026f16 	blt	r22,zero,10003744 <_dtoa_r+0xc78>
10002d88:	d8000815 	stw	zero,32(sp)
10002d8c:	d9c00517 	ldw	r7,20(sp)
10002d90:	38026416 	blt	r7,zero,10003724 <_dtoa_r+0xc58>
10002d94:	b1ed883a 	add	r22,r22,r7
10002d98:	d9c00d15 	stw	r7,52(sp)
10002d9c:	d8000a15 	stw	zero,40(sp)
10002da0:	d9800317 	ldw	r6,12(sp)
10002da4:	00800244 	movi	r2,9
10002da8:	11811436 	bltu	r2,r6,100031fc <_dtoa_r+0x730>
10002dac:	00800144 	movi	r2,5
10002db0:	1184e10e 	bge	r2,r6,10004138 <_dtoa_r+0x166c>
10002db4:	31bfff04 	addi	r6,r6,-4
10002db8:	d9800315 	stw	r6,12(sp)
10002dbc:	0023883a 	mov	r17,zero
10002dc0:	d9800317 	ldw	r6,12(sp)
10002dc4:	008000c4 	movi	r2,3
10002dc8:	30836726 	beq	r6,r2,10003b68 <_dtoa_r+0x109c>
10002dcc:	1183410e 	bge	r2,r6,10003ad4 <_dtoa_r+0x1008>
10002dd0:	d9c00317 	ldw	r7,12(sp)
10002dd4:	00800104 	movi	r2,4
10002dd8:	38827c26 	beq	r7,r2,100037cc <_dtoa_r+0xd00>
10002ddc:	00800144 	movi	r2,5
10002de0:	3884c41e 	bne	r7,r2,100040f4 <_dtoa_r+0x1628>
10002de4:	00800044 	movi	r2,1
10002de8:	d8800b15 	stw	r2,44(sp)
10002dec:	d8c00517 	ldw	r3,20(sp)
10002df0:	d9002217 	ldw	r4,136(sp)
10002df4:	1907883a 	add	r3,r3,r4
10002df8:	19800044 	addi	r6,r3,1
10002dfc:	d8c00c15 	stw	r3,48(sp)
10002e00:	d9800615 	stw	r6,24(sp)
10002e04:	0183a40e 	bge	zero,r6,10003c98 <_dtoa_r+0x11cc>
10002e08:	d9800617 	ldw	r6,24(sp)
10002e0c:	3021883a 	mov	r16,r6
10002e10:	e0001115 	stw	zero,68(fp)
10002e14:	008005c4 	movi	r2,23
10002e18:	1184c92e 	bgeu	r2,r6,10004140 <_dtoa_r+0x1674>
10002e1c:	00c00044 	movi	r3,1
10002e20:	00800104 	movi	r2,4
10002e24:	1085883a 	add	r2,r2,r2
10002e28:	11000504 	addi	r4,r2,20
10002e2c:	180b883a 	mov	r5,r3
10002e30:	18c00044 	addi	r3,r3,1
10002e34:	313ffb2e 	bgeu	r6,r4,10002e24 <__alt_data_end+0xf8002e24>
10002e38:	e1401115 	stw	r5,68(fp)
10002e3c:	e009883a 	mov	r4,fp
10002e40:	0005b600 	call	10005b60 <_Balloc>
10002e44:	d8800715 	stw	r2,28(sp)
10002e48:	e0801015 	stw	r2,64(fp)
10002e4c:	00800384 	movi	r2,14
10002e50:	1400f736 	bltu	r2,r16,10003230 <_dtoa_r+0x764>
10002e54:	8800f626 	beq	r17,zero,10003230 <_dtoa_r+0x764>
10002e58:	d9c00517 	ldw	r7,20(sp)
10002e5c:	01c39a0e 	bge	zero,r7,10003cc8 <_dtoa_r+0x11fc>
10002e60:	388003cc 	andi	r2,r7,15
10002e64:	100490fa 	slli	r2,r2,3
10002e68:	382bd13a 	srai	r21,r7,4
10002e6c:	00c40074 	movhi	r3,4097
10002e70:	18fea304 	addi	r3,r3,-1396
10002e74:	1885883a 	add	r2,r3,r2
10002e78:	a8c0040c 	andi	r3,r21,16
10002e7c:	12400017 	ldw	r9,0(r2)
10002e80:	12000117 	ldw	r8,4(r2)
10002e84:	18037926 	beq	r3,zero,10003c6c <_dtoa_r+0x11a0>
10002e88:	00840074 	movhi	r2,4097
10002e8c:	10be9904 	addi	r2,r2,-1436
10002e90:	11800817 	ldw	r6,32(r2)
10002e94:	11c00917 	ldw	r7,36(r2)
10002e98:	9009883a 	mov	r4,r18
10002e9c:	980b883a 	mov	r5,r19
10002ea0:	da001715 	stw	r8,92(sp)
10002ea4:	da401615 	stw	r9,88(sp)
10002ea8:	000b30c0 	call	1000b30c <__divdf3>
10002eac:	da001717 	ldw	r8,92(sp)
10002eb0:	da401617 	ldw	r9,88(sp)
10002eb4:	ad4003cc 	andi	r21,r21,15
10002eb8:	040000c4 	movi	r16,3
10002ebc:	1023883a 	mov	r17,r2
10002ec0:	1829883a 	mov	r20,r3
10002ec4:	a8001126 	beq	r21,zero,10002f0c <_dtoa_r+0x440>
10002ec8:	05c40074 	movhi	r23,4097
10002ecc:	bdfe9904 	addi	r23,r23,-1436
10002ed0:	4805883a 	mov	r2,r9
10002ed4:	4007883a 	mov	r3,r8
10002ed8:	a980004c 	andi	r6,r21,1
10002edc:	1009883a 	mov	r4,r2
10002ee0:	a82bd07a 	srai	r21,r21,1
10002ee4:	180b883a 	mov	r5,r3
10002ee8:	30000426 	beq	r6,zero,10002efc <_dtoa_r+0x430>
10002eec:	b9800017 	ldw	r6,0(r23)
10002ef0:	b9c00117 	ldw	r7,4(r23)
10002ef4:	84000044 	addi	r16,r16,1
10002ef8:	000bf340 	call	1000bf34 <__muldf3>
10002efc:	bdc00204 	addi	r23,r23,8
10002f00:	a83ff51e 	bne	r21,zero,10002ed8 <__alt_data_end+0xf8002ed8>
10002f04:	1013883a 	mov	r9,r2
10002f08:	1811883a 	mov	r8,r3
10002f0c:	480d883a 	mov	r6,r9
10002f10:	400f883a 	mov	r7,r8
10002f14:	8809883a 	mov	r4,r17
10002f18:	a00b883a 	mov	r5,r20
10002f1c:	000b30c0 	call	1000b30c <__divdf3>
10002f20:	d8800f15 	stw	r2,60(sp)
10002f24:	d8c01015 	stw	r3,64(sp)
10002f28:	d8c00e17 	ldw	r3,56(sp)
10002f2c:	18000626 	beq	r3,zero,10002f48 <_dtoa_r+0x47c>
10002f30:	d9000f17 	ldw	r4,60(sp)
10002f34:	d9401017 	ldw	r5,64(sp)
10002f38:	000d883a 	mov	r6,zero
10002f3c:	01cffc34 	movhi	r7,16368
10002f40:	000be400 	call	1000be40 <__ledf2>
10002f44:	10040b16 	blt	r2,zero,10003f74 <_dtoa_r+0x14a8>
10002f48:	8009883a 	mov	r4,r16
10002f4c:	000d11c0 	call	1000d11c <__floatsidf>
10002f50:	d9800f17 	ldw	r6,60(sp)
10002f54:	d9c01017 	ldw	r7,64(sp)
10002f58:	1009883a 	mov	r4,r2
10002f5c:	180b883a 	mov	r5,r3
10002f60:	000bf340 	call	1000bf34 <__muldf3>
10002f64:	000d883a 	mov	r6,zero
10002f68:	01d00734 	movhi	r7,16412
10002f6c:	1009883a 	mov	r4,r2
10002f70:	180b883a 	mov	r5,r3
10002f74:	000aa600 	call	1000aa60 <__adddf3>
10002f78:	1021883a 	mov	r16,r2
10002f7c:	d8800617 	ldw	r2,24(sp)
10002f80:	047f3034 	movhi	r17,64704
10002f84:	1c63883a 	add	r17,r3,r17
10002f88:	10031826 	beq	r2,zero,10003bec <_dtoa_r+0x1120>
10002f8c:	d8c00517 	ldw	r3,20(sp)
10002f90:	db000617 	ldw	r12,24(sp)
10002f94:	d8c01315 	stw	r3,76(sp)
10002f98:	d9000b17 	ldw	r4,44(sp)
10002f9c:	20038f26 	beq	r4,zero,10003ddc <_dtoa_r+0x1310>
10002fa0:	60bfffc4 	addi	r2,r12,-1
10002fa4:	100490fa 	slli	r2,r2,3
10002fa8:	00c40074 	movhi	r3,4097
10002fac:	18fea304 	addi	r3,r3,-1396
10002fb0:	1885883a 	add	r2,r3,r2
10002fb4:	11800017 	ldw	r6,0(r2)
10002fb8:	11c00117 	ldw	r7,4(r2)
10002fbc:	d8800717 	ldw	r2,28(sp)
10002fc0:	0009883a 	mov	r4,zero
10002fc4:	014ff834 	movhi	r5,16352
10002fc8:	db001615 	stw	r12,88(sp)
10002fcc:	15c00044 	addi	r23,r2,1
10002fd0:	000b30c0 	call	1000b30c <__divdf3>
10002fd4:	800d883a 	mov	r6,r16
10002fd8:	880f883a 	mov	r7,r17
10002fdc:	1009883a 	mov	r4,r2
10002fe0:	180b883a 	mov	r5,r3
10002fe4:	000c7a00 	call	1000c7a0 <__subdf3>
10002fe8:	d9401017 	ldw	r5,64(sp)
10002fec:	d9000f17 	ldw	r4,60(sp)
10002ff0:	102b883a 	mov	r21,r2
10002ff4:	d8c01215 	stw	r3,72(sp)
10002ff8:	000d09c0 	call	1000d09c <__fixdfsi>
10002ffc:	1009883a 	mov	r4,r2
10003000:	1029883a 	mov	r20,r2
10003004:	000d11c0 	call	1000d11c <__floatsidf>
10003008:	d9000f17 	ldw	r4,60(sp)
1000300c:	d9401017 	ldw	r5,64(sp)
10003010:	100d883a 	mov	r6,r2
10003014:	180f883a 	mov	r7,r3
10003018:	000c7a00 	call	1000c7a0 <__subdf3>
1000301c:	1823883a 	mov	r17,r3
10003020:	d8c00717 	ldw	r3,28(sp)
10003024:	d9401217 	ldw	r5,72(sp)
10003028:	a2000c04 	addi	r8,r20,48
1000302c:	1021883a 	mov	r16,r2
10003030:	1a000005 	stb	r8,0(r3)
10003034:	800d883a 	mov	r6,r16
10003038:	880f883a 	mov	r7,r17
1000303c:	a809883a 	mov	r4,r21
10003040:	4029883a 	mov	r20,r8
10003044:	000bd640 	call	1000bd64 <__gedf2>
10003048:	00841d16 	blt	zero,r2,100040c0 <_dtoa_r+0x15f4>
1000304c:	800d883a 	mov	r6,r16
10003050:	880f883a 	mov	r7,r17
10003054:	0009883a 	mov	r4,zero
10003058:	014ffc34 	movhi	r5,16368
1000305c:	000c7a00 	call	1000c7a0 <__subdf3>
10003060:	d9401217 	ldw	r5,72(sp)
10003064:	100d883a 	mov	r6,r2
10003068:	180f883a 	mov	r7,r3
1000306c:	a809883a 	mov	r4,r21
10003070:	000bd640 	call	1000bd64 <__gedf2>
10003074:	db001617 	ldw	r12,88(sp)
10003078:	00840e16 	blt	zero,r2,100040b4 <_dtoa_r+0x15e8>
1000307c:	00800044 	movi	r2,1
10003080:	13006b0e 	bge	r2,r12,10003230 <_dtoa_r+0x764>
10003084:	d9000717 	ldw	r4,28(sp)
10003088:	dd800f15 	stw	r22,60(sp)
1000308c:	dcc01015 	stw	r19,64(sp)
10003090:	2319883a 	add	r12,r4,r12
10003094:	dcc01217 	ldw	r19,72(sp)
10003098:	602d883a 	mov	r22,r12
1000309c:	dc801215 	stw	r18,72(sp)
100030a0:	b825883a 	mov	r18,r23
100030a4:	00000906 	br	100030cc <_dtoa_r+0x600>
100030a8:	000c7a00 	call	1000c7a0 <__subdf3>
100030ac:	a80d883a 	mov	r6,r21
100030b0:	980f883a 	mov	r7,r19
100030b4:	1009883a 	mov	r4,r2
100030b8:	180b883a 	mov	r5,r3
100030bc:	000be400 	call	1000be40 <__ledf2>
100030c0:	1003e816 	blt	r2,zero,10004064 <_dtoa_r+0x1598>
100030c4:	b825883a 	mov	r18,r23
100030c8:	bd83e926 	beq	r23,r22,10004070 <_dtoa_r+0x15a4>
100030cc:	a809883a 	mov	r4,r21
100030d0:	980b883a 	mov	r5,r19
100030d4:	000d883a 	mov	r6,zero
100030d8:	01d00934 	movhi	r7,16420
100030dc:	000bf340 	call	1000bf34 <__muldf3>
100030e0:	000d883a 	mov	r6,zero
100030e4:	01d00934 	movhi	r7,16420
100030e8:	8009883a 	mov	r4,r16
100030ec:	880b883a 	mov	r5,r17
100030f0:	102b883a 	mov	r21,r2
100030f4:	1827883a 	mov	r19,r3
100030f8:	000bf340 	call	1000bf34 <__muldf3>
100030fc:	180b883a 	mov	r5,r3
10003100:	1009883a 	mov	r4,r2
10003104:	1821883a 	mov	r16,r3
10003108:	1023883a 	mov	r17,r2
1000310c:	000d09c0 	call	1000d09c <__fixdfsi>
10003110:	1009883a 	mov	r4,r2
10003114:	1029883a 	mov	r20,r2
10003118:	000d11c0 	call	1000d11c <__floatsidf>
1000311c:	8809883a 	mov	r4,r17
10003120:	800b883a 	mov	r5,r16
10003124:	100d883a 	mov	r6,r2
10003128:	180f883a 	mov	r7,r3
1000312c:	000c7a00 	call	1000c7a0 <__subdf3>
10003130:	a5000c04 	addi	r20,r20,48
10003134:	a80d883a 	mov	r6,r21
10003138:	980f883a 	mov	r7,r19
1000313c:	1009883a 	mov	r4,r2
10003140:	180b883a 	mov	r5,r3
10003144:	95000005 	stb	r20,0(r18)
10003148:	1021883a 	mov	r16,r2
1000314c:	1823883a 	mov	r17,r3
10003150:	000be400 	call	1000be40 <__ledf2>
10003154:	bdc00044 	addi	r23,r23,1
10003158:	800d883a 	mov	r6,r16
1000315c:	880f883a 	mov	r7,r17
10003160:	0009883a 	mov	r4,zero
10003164:	014ffc34 	movhi	r5,16368
10003168:	103fcf0e 	bge	r2,zero,100030a8 <__alt_data_end+0xf80030a8>
1000316c:	d8c01317 	ldw	r3,76(sp)
10003170:	d8c00515 	stw	r3,20(sp)
10003174:	d9400917 	ldw	r5,36(sp)
10003178:	e009883a 	mov	r4,fp
1000317c:	0005c080 	call	10005c08 <_Bfree>
10003180:	d9000517 	ldw	r4,20(sp)
10003184:	d9802317 	ldw	r6,140(sp)
10003188:	d9c02517 	ldw	r7,148(sp)
1000318c:	b8000005 	stb	zero,0(r23)
10003190:	20800044 	addi	r2,r4,1
10003194:	30800015 	stw	r2,0(r6)
10003198:	3802aa26 	beq	r7,zero,10003c44 <_dtoa_r+0x1178>
1000319c:	3dc00015 	stw	r23,0(r7)
100031a0:	d8800717 	ldw	r2,28(sp)
100031a4:	003e7906 	br	10002b8c <__alt_data_end+0xf8002b8c>
100031a8:	00800434 	movhi	r2,16
100031ac:	10bfffc4 	addi	r2,r2,-1
100031b0:	88a2703a 	and	r17,r17,r2
100031b4:	883e851e 	bne	r17,zero,10002bcc <__alt_data_end+0xf8002bcc>
100031b8:	00840074 	movhi	r2,4097
100031bc:	10be8404 	addi	r2,r2,-1520
100031c0:	003e8406 	br	10002bd4 <__alt_data_end+0xf8002bd4>
100031c4:	10c00204 	addi	r3,r2,8
100031c8:	003e8706 	br	10002be8 <__alt_data_end+0xf8002be8>
100031cc:	01400434 	movhi	r5,16
100031d0:	297fffc4 	addi	r5,r5,-1
100031d4:	994a703a 	and	r5,r19,r5
100031d8:	9009883a 	mov	r4,r18
100031dc:	843f0044 	addi	r16,r16,-1023
100031e0:	294ffc34 	orhi	r5,r5,16368
100031e4:	dd800217 	ldw	r22,8(sp)
100031e8:	d8001115 	stw	zero,68(sp)
100031ec:	003ea506 	br	10002c84 <__alt_data_end+0xf8002c84>
100031f0:	00840074 	movhi	r2,4097
100031f4:	10be7b04 	addi	r2,r2,-1556
100031f8:	003e6406 	br	10002b8c <__alt_data_end+0xf8002b8c>
100031fc:	e0001115 	stw	zero,68(fp)
10003200:	000b883a 	mov	r5,zero
10003204:	e009883a 	mov	r4,fp
10003208:	0005b600 	call	10005b60 <_Balloc>
1000320c:	01bfffc4 	movi	r6,-1
10003210:	01c00044 	movi	r7,1
10003214:	d8800715 	stw	r2,28(sp)
10003218:	d9800c15 	stw	r6,48(sp)
1000321c:	e0801015 	stw	r2,64(fp)
10003220:	d8000315 	stw	zero,12(sp)
10003224:	d9c00b15 	stw	r7,44(sp)
10003228:	d9800615 	stw	r6,24(sp)
1000322c:	d8002215 	stw	zero,136(sp)
10003230:	d8800117 	ldw	r2,4(sp)
10003234:	10008916 	blt	r2,zero,1000345c <_dtoa_r+0x990>
10003238:	d9000517 	ldw	r4,20(sp)
1000323c:	00c00384 	movi	r3,14
10003240:	19008616 	blt	r3,r4,1000345c <_dtoa_r+0x990>
10003244:	200490fa 	slli	r2,r4,3
10003248:	00c40074 	movhi	r3,4097
1000324c:	d9802217 	ldw	r6,136(sp)
10003250:	18fea304 	addi	r3,r3,-1396
10003254:	1885883a 	add	r2,r3,r2
10003258:	14000017 	ldw	r16,0(r2)
1000325c:	14400117 	ldw	r17,4(r2)
10003260:	30016316 	blt	r6,zero,100037f0 <_dtoa_r+0xd24>
10003264:	800d883a 	mov	r6,r16
10003268:	880f883a 	mov	r7,r17
1000326c:	9009883a 	mov	r4,r18
10003270:	980b883a 	mov	r5,r19
10003274:	000b30c0 	call	1000b30c <__divdf3>
10003278:	180b883a 	mov	r5,r3
1000327c:	1009883a 	mov	r4,r2
10003280:	000d09c0 	call	1000d09c <__fixdfsi>
10003284:	1009883a 	mov	r4,r2
10003288:	102b883a 	mov	r21,r2
1000328c:	000d11c0 	call	1000d11c <__floatsidf>
10003290:	800d883a 	mov	r6,r16
10003294:	880f883a 	mov	r7,r17
10003298:	1009883a 	mov	r4,r2
1000329c:	180b883a 	mov	r5,r3
100032a0:	000bf340 	call	1000bf34 <__muldf3>
100032a4:	100d883a 	mov	r6,r2
100032a8:	180f883a 	mov	r7,r3
100032ac:	9009883a 	mov	r4,r18
100032b0:	980b883a 	mov	r5,r19
100032b4:	000c7a00 	call	1000c7a0 <__subdf3>
100032b8:	d9c00717 	ldw	r7,28(sp)
100032bc:	1009883a 	mov	r4,r2
100032c0:	a8800c04 	addi	r2,r21,48
100032c4:	38800005 	stb	r2,0(r7)
100032c8:	3dc00044 	addi	r23,r7,1
100032cc:	d9c00617 	ldw	r7,24(sp)
100032d0:	01800044 	movi	r6,1
100032d4:	180b883a 	mov	r5,r3
100032d8:	2005883a 	mov	r2,r4
100032dc:	39803826 	beq	r7,r6,100033c0 <_dtoa_r+0x8f4>
100032e0:	000d883a 	mov	r6,zero
100032e4:	01d00934 	movhi	r7,16420
100032e8:	000bf340 	call	1000bf34 <__muldf3>
100032ec:	000d883a 	mov	r6,zero
100032f0:	000f883a 	mov	r7,zero
100032f4:	1009883a 	mov	r4,r2
100032f8:	180b883a 	mov	r5,r3
100032fc:	1025883a 	mov	r18,r2
10003300:	1827883a 	mov	r19,r3
10003304:	000bcdc0 	call	1000bcdc <__eqdf2>
10003308:	103f9a26 	beq	r2,zero,10003174 <__alt_data_end+0xf8003174>
1000330c:	d9c00617 	ldw	r7,24(sp)
10003310:	d8c00717 	ldw	r3,28(sp)
10003314:	b829883a 	mov	r20,r23
10003318:	38bfffc4 	addi	r2,r7,-1
1000331c:	18ad883a 	add	r22,r3,r2
10003320:	00000a06 	br	1000334c <_dtoa_r+0x880>
10003324:	000bf340 	call	1000bf34 <__muldf3>
10003328:	000d883a 	mov	r6,zero
1000332c:	000f883a 	mov	r7,zero
10003330:	1009883a 	mov	r4,r2
10003334:	180b883a 	mov	r5,r3
10003338:	1025883a 	mov	r18,r2
1000333c:	1827883a 	mov	r19,r3
10003340:	b829883a 	mov	r20,r23
10003344:	000bcdc0 	call	1000bcdc <__eqdf2>
10003348:	103f8a26 	beq	r2,zero,10003174 <__alt_data_end+0xf8003174>
1000334c:	800d883a 	mov	r6,r16
10003350:	880f883a 	mov	r7,r17
10003354:	9009883a 	mov	r4,r18
10003358:	980b883a 	mov	r5,r19
1000335c:	000b30c0 	call	1000b30c <__divdf3>
10003360:	180b883a 	mov	r5,r3
10003364:	1009883a 	mov	r4,r2
10003368:	000d09c0 	call	1000d09c <__fixdfsi>
1000336c:	1009883a 	mov	r4,r2
10003370:	102b883a 	mov	r21,r2
10003374:	000d11c0 	call	1000d11c <__floatsidf>
10003378:	800d883a 	mov	r6,r16
1000337c:	880f883a 	mov	r7,r17
10003380:	1009883a 	mov	r4,r2
10003384:	180b883a 	mov	r5,r3
10003388:	000bf340 	call	1000bf34 <__muldf3>
1000338c:	100d883a 	mov	r6,r2
10003390:	180f883a 	mov	r7,r3
10003394:	9009883a 	mov	r4,r18
10003398:	980b883a 	mov	r5,r19
1000339c:	000c7a00 	call	1000c7a0 <__subdf3>
100033a0:	aa000c04 	addi	r8,r21,48
100033a4:	a2000005 	stb	r8,0(r20)
100033a8:	000d883a 	mov	r6,zero
100033ac:	01d00934 	movhi	r7,16420
100033b0:	1009883a 	mov	r4,r2
100033b4:	180b883a 	mov	r5,r3
100033b8:	a5c00044 	addi	r23,r20,1
100033bc:	b53fd91e 	bne	r22,r20,10003324 <__alt_data_end+0xf8003324>
100033c0:	100d883a 	mov	r6,r2
100033c4:	180f883a 	mov	r7,r3
100033c8:	1009883a 	mov	r4,r2
100033cc:	180b883a 	mov	r5,r3
100033d0:	000aa600 	call	1000aa60 <__adddf3>
100033d4:	100d883a 	mov	r6,r2
100033d8:	180f883a 	mov	r7,r3
100033dc:	8009883a 	mov	r4,r16
100033e0:	880b883a 	mov	r5,r17
100033e4:	1027883a 	mov	r19,r2
100033e8:	1825883a 	mov	r18,r3
100033ec:	000be400 	call	1000be40 <__ledf2>
100033f0:	10000816 	blt	r2,zero,10003414 <_dtoa_r+0x948>
100033f4:	980d883a 	mov	r6,r19
100033f8:	900f883a 	mov	r7,r18
100033fc:	8009883a 	mov	r4,r16
10003400:	880b883a 	mov	r5,r17
10003404:	000bcdc0 	call	1000bcdc <__eqdf2>
10003408:	103f5a1e 	bne	r2,zero,10003174 <__alt_data_end+0xf8003174>
1000340c:	ad40004c 	andi	r21,r21,1
10003410:	a83f5826 	beq	r21,zero,10003174 <__alt_data_end+0xf8003174>
10003414:	bd3fffc3 	ldbu	r20,-1(r23)
10003418:	b8bfffc4 	addi	r2,r23,-1
1000341c:	1007883a 	mov	r3,r2
10003420:	01400e44 	movi	r5,57
10003424:	d9800717 	ldw	r6,28(sp)
10003428:	00000506 	br	10003440 <_dtoa_r+0x974>
1000342c:	18ffffc4 	addi	r3,r3,-1
10003430:	11824726 	beq	r2,r6,10003d50 <_dtoa_r+0x1284>
10003434:	1d000003 	ldbu	r20,0(r3)
10003438:	102f883a 	mov	r23,r2
1000343c:	10bfffc4 	addi	r2,r2,-1
10003440:	a1003fcc 	andi	r4,r20,255
10003444:	2100201c 	xori	r4,r4,128
10003448:	213fe004 	addi	r4,r4,-128
1000344c:	217ff726 	beq	r4,r5,1000342c <__alt_data_end+0xf800342c>
10003450:	a2000044 	addi	r8,r20,1
10003454:	12000005 	stb	r8,0(r2)
10003458:	003f4606 	br	10003174 <__alt_data_end+0xf8003174>
1000345c:	d9000b17 	ldw	r4,44(sp)
10003460:	2000c826 	beq	r4,zero,10003784 <_dtoa_r+0xcb8>
10003464:	d9800317 	ldw	r6,12(sp)
10003468:	00c00044 	movi	r3,1
1000346c:	1980f90e 	bge	r3,r6,10003854 <_dtoa_r+0xd88>
10003470:	d8800617 	ldw	r2,24(sp)
10003474:	d8c00a17 	ldw	r3,40(sp)
10003478:	157fffc4 	addi	r21,r2,-1
1000347c:	1d41f316 	blt	r3,r21,10003c4c <_dtoa_r+0x1180>
10003480:	1d6bc83a 	sub	r21,r3,r21
10003484:	d9c00617 	ldw	r7,24(sp)
10003488:	3802aa16 	blt	r7,zero,10003f34 <_dtoa_r+0x1468>
1000348c:	dd000817 	ldw	r20,32(sp)
10003490:	d8800617 	ldw	r2,24(sp)
10003494:	d8c00817 	ldw	r3,32(sp)
10003498:	01400044 	movi	r5,1
1000349c:	e009883a 	mov	r4,fp
100034a0:	1887883a 	add	r3,r3,r2
100034a4:	d8c00815 	stw	r3,32(sp)
100034a8:	b0ad883a 	add	r22,r22,r2
100034ac:	0005f940 	call	10005f94 <__i2b>
100034b0:	1023883a 	mov	r17,r2
100034b4:	a0000826 	beq	r20,zero,100034d8 <_dtoa_r+0xa0c>
100034b8:	0580070e 	bge	zero,r22,100034d8 <_dtoa_r+0xa0c>
100034bc:	a005883a 	mov	r2,r20
100034c0:	b500b916 	blt	r22,r20,100037a8 <_dtoa_r+0xcdc>
100034c4:	d9000817 	ldw	r4,32(sp)
100034c8:	a0a9c83a 	sub	r20,r20,r2
100034cc:	b0adc83a 	sub	r22,r22,r2
100034d0:	2089c83a 	sub	r4,r4,r2
100034d4:	d9000815 	stw	r4,32(sp)
100034d8:	d9800a17 	ldw	r6,40(sp)
100034dc:	0181810e 	bge	zero,r6,10003ae4 <_dtoa_r+0x1018>
100034e0:	d9c00b17 	ldw	r7,44(sp)
100034e4:	3800b326 	beq	r7,zero,100037b4 <_dtoa_r+0xce8>
100034e8:	a800b226 	beq	r21,zero,100037b4 <_dtoa_r+0xce8>
100034ec:	880b883a 	mov	r5,r17
100034f0:	a80d883a 	mov	r6,r21
100034f4:	e009883a 	mov	r4,fp
100034f8:	000625c0 	call	1000625c <__pow5mult>
100034fc:	d9800917 	ldw	r6,36(sp)
10003500:	100b883a 	mov	r5,r2
10003504:	e009883a 	mov	r4,fp
10003508:	1023883a 	mov	r17,r2
1000350c:	0005fd00 	call	10005fd0 <__multiply>
10003510:	1021883a 	mov	r16,r2
10003514:	d8800a17 	ldw	r2,40(sp)
10003518:	d9400917 	ldw	r5,36(sp)
1000351c:	e009883a 	mov	r4,fp
10003520:	1545c83a 	sub	r2,r2,r21
10003524:	d8800a15 	stw	r2,40(sp)
10003528:	0005c080 	call	10005c08 <_Bfree>
1000352c:	d8c00a17 	ldw	r3,40(sp)
10003530:	18009f1e 	bne	r3,zero,100037b0 <_dtoa_r+0xce4>
10003534:	05c00044 	movi	r23,1
10003538:	e009883a 	mov	r4,fp
1000353c:	b80b883a 	mov	r5,r23
10003540:	0005f940 	call	10005f94 <__i2b>
10003544:	d9000d17 	ldw	r4,52(sp)
10003548:	102b883a 	mov	r21,r2
1000354c:	2000ce26 	beq	r4,zero,10003888 <_dtoa_r+0xdbc>
10003550:	200d883a 	mov	r6,r4
10003554:	100b883a 	mov	r5,r2
10003558:	e009883a 	mov	r4,fp
1000355c:	000625c0 	call	1000625c <__pow5mult>
10003560:	d9800317 	ldw	r6,12(sp)
10003564:	102b883a 	mov	r21,r2
10003568:	b981810e 	bge	r23,r6,10003b70 <_dtoa_r+0x10a4>
1000356c:	0027883a 	mov	r19,zero
10003570:	a8800417 	ldw	r2,16(r21)
10003574:	05c00804 	movi	r23,32
10003578:	10800104 	addi	r2,r2,4
1000357c:	1085883a 	add	r2,r2,r2
10003580:	1085883a 	add	r2,r2,r2
10003584:	a885883a 	add	r2,r21,r2
10003588:	11000017 	ldw	r4,0(r2)
1000358c:	0005e7c0 	call	10005e7c <__hi0bits>
10003590:	b885c83a 	sub	r2,r23,r2
10003594:	1585883a 	add	r2,r2,r22
10003598:	108007cc 	andi	r2,r2,31
1000359c:	1000b326 	beq	r2,zero,1000386c <_dtoa_r+0xda0>
100035a0:	00c00804 	movi	r3,32
100035a4:	1887c83a 	sub	r3,r3,r2
100035a8:	01000104 	movi	r4,4
100035ac:	20c2cd0e 	bge	r4,r3,100040e4 <_dtoa_r+0x1618>
100035b0:	00c00704 	movi	r3,28
100035b4:	1885c83a 	sub	r2,r3,r2
100035b8:	d8c00817 	ldw	r3,32(sp)
100035bc:	a0a9883a 	add	r20,r20,r2
100035c0:	b0ad883a 	add	r22,r22,r2
100035c4:	1887883a 	add	r3,r3,r2
100035c8:	d8c00815 	stw	r3,32(sp)
100035cc:	d9800817 	ldw	r6,32(sp)
100035d0:	0180040e 	bge	zero,r6,100035e4 <_dtoa_r+0xb18>
100035d4:	800b883a 	mov	r5,r16
100035d8:	e009883a 	mov	r4,fp
100035dc:	000639c0 	call	1000639c <__lshift>
100035e0:	1021883a 	mov	r16,r2
100035e4:	0580050e 	bge	zero,r22,100035fc <_dtoa_r+0xb30>
100035e8:	a80b883a 	mov	r5,r21
100035ec:	b00d883a 	mov	r6,r22
100035f0:	e009883a 	mov	r4,fp
100035f4:	000639c0 	call	1000639c <__lshift>
100035f8:	102b883a 	mov	r21,r2
100035fc:	d9c00e17 	ldw	r7,56(sp)
10003600:	3801211e 	bne	r7,zero,10003a88 <_dtoa_r+0xfbc>
10003604:	d9800617 	ldw	r6,24(sp)
10003608:	0181380e 	bge	zero,r6,10003aec <_dtoa_r+0x1020>
1000360c:	d8c00b17 	ldw	r3,44(sp)
10003610:	1800ab1e 	bne	r3,zero,100038c0 <_dtoa_r+0xdf4>
10003614:	dc800717 	ldw	r18,28(sp)
10003618:	dcc00617 	ldw	r19,24(sp)
1000361c:	9029883a 	mov	r20,r18
10003620:	00000206 	br	1000362c <_dtoa_r+0xb60>
10003624:	0005c300 	call	10005c30 <__multadd>
10003628:	1021883a 	mov	r16,r2
1000362c:	a80b883a 	mov	r5,r21
10003630:	8009883a 	mov	r4,r16
10003634:	00028a40 	call	100028a4 <quorem>
10003638:	10800c04 	addi	r2,r2,48
1000363c:	90800005 	stb	r2,0(r18)
10003640:	94800044 	addi	r18,r18,1
10003644:	9507c83a 	sub	r3,r18,r20
10003648:	000f883a 	mov	r7,zero
1000364c:	01800284 	movi	r6,10
10003650:	800b883a 	mov	r5,r16
10003654:	e009883a 	mov	r4,fp
10003658:	1cfff216 	blt	r3,r19,10003624 <__alt_data_end+0xf8003624>
1000365c:	1011883a 	mov	r8,r2
10003660:	d8800617 	ldw	r2,24(sp)
10003664:	0082370e 	bge	zero,r2,10003f44 <_dtoa_r+0x1478>
10003668:	d9000717 	ldw	r4,28(sp)
1000366c:	0025883a 	mov	r18,zero
10003670:	20af883a 	add	r23,r4,r2
10003674:	01800044 	movi	r6,1
10003678:	800b883a 	mov	r5,r16
1000367c:	e009883a 	mov	r4,fp
10003680:	da001715 	stw	r8,92(sp)
10003684:	000639c0 	call	1000639c <__lshift>
10003688:	a80b883a 	mov	r5,r21
1000368c:	1009883a 	mov	r4,r2
10003690:	d8800915 	stw	r2,36(sp)
10003694:	00064e40 	call	100064e4 <__mcmp>
10003698:	da001717 	ldw	r8,92(sp)
1000369c:	0081800e 	bge	zero,r2,10003ca0 <_dtoa_r+0x11d4>
100036a0:	b93fffc3 	ldbu	r4,-1(r23)
100036a4:	b8bfffc4 	addi	r2,r23,-1
100036a8:	1007883a 	mov	r3,r2
100036ac:	01800e44 	movi	r6,57
100036b0:	d9c00717 	ldw	r7,28(sp)
100036b4:	00000506 	br	100036cc <_dtoa_r+0xc00>
100036b8:	18ffffc4 	addi	r3,r3,-1
100036bc:	11c12326 	beq	r2,r7,10003b4c <_dtoa_r+0x1080>
100036c0:	19000003 	ldbu	r4,0(r3)
100036c4:	102f883a 	mov	r23,r2
100036c8:	10bfffc4 	addi	r2,r2,-1
100036cc:	21403fcc 	andi	r5,r4,255
100036d0:	2940201c 	xori	r5,r5,128
100036d4:	297fe004 	addi	r5,r5,-128
100036d8:	29bff726 	beq	r5,r6,100036b8 <__alt_data_end+0xf80036b8>
100036dc:	21000044 	addi	r4,r4,1
100036e0:	11000005 	stb	r4,0(r2)
100036e4:	a80b883a 	mov	r5,r21
100036e8:	e009883a 	mov	r4,fp
100036ec:	0005c080 	call	10005c08 <_Bfree>
100036f0:	883ea026 	beq	r17,zero,10003174 <__alt_data_end+0xf8003174>
100036f4:	90000426 	beq	r18,zero,10003708 <_dtoa_r+0xc3c>
100036f8:	94400326 	beq	r18,r17,10003708 <_dtoa_r+0xc3c>
100036fc:	900b883a 	mov	r5,r18
10003700:	e009883a 	mov	r4,fp
10003704:	0005c080 	call	10005c08 <_Bfree>
10003708:	880b883a 	mov	r5,r17
1000370c:	e009883a 	mov	r4,fp
10003710:	0005c080 	call	10005c08 <_Bfree>
10003714:	003e9706 	br	10003174 <__alt_data_end+0xf8003174>
10003718:	01800044 	movi	r6,1
1000371c:	d9800e15 	stw	r6,56(sp)
10003720:	003d9606 	br	10002d7c <__alt_data_end+0xf8002d7c>
10003724:	d8800817 	ldw	r2,32(sp)
10003728:	d8c00517 	ldw	r3,20(sp)
1000372c:	d8000d15 	stw	zero,52(sp)
10003730:	10c5c83a 	sub	r2,r2,r3
10003734:	00c9c83a 	sub	r4,zero,r3
10003738:	d8800815 	stw	r2,32(sp)
1000373c:	d9000a15 	stw	r4,40(sp)
10003740:	003d9706 	br	10002da0 <__alt_data_end+0xf8002da0>
10003744:	05adc83a 	sub	r22,zero,r22
10003748:	dd800815 	stw	r22,32(sp)
1000374c:	002d883a 	mov	r22,zero
10003750:	003d8e06 	br	10002d8c <__alt_data_end+0xf8002d8c>
10003754:	d9000517 	ldw	r4,20(sp)
10003758:	000d11c0 	call	1000d11c <__floatsidf>
1000375c:	100d883a 	mov	r6,r2
10003760:	180f883a 	mov	r7,r3
10003764:	a009883a 	mov	r4,r20
10003768:	880b883a 	mov	r5,r17
1000376c:	000bcdc0 	call	1000bcdc <__eqdf2>
10003770:	103d7126 	beq	r2,zero,10002d38 <__alt_data_end+0xf8002d38>
10003774:	d9c00517 	ldw	r7,20(sp)
10003778:	39ffffc4 	addi	r7,r7,-1
1000377c:	d9c00515 	stw	r7,20(sp)
10003780:	003d6d06 	br	10002d38 <__alt_data_end+0xf8002d38>
10003784:	dd400a17 	ldw	r21,40(sp)
10003788:	dd000817 	ldw	r20,32(sp)
1000378c:	0023883a 	mov	r17,zero
10003790:	003f4806 	br	100034b4 <__alt_data_end+0xf80034b4>
10003794:	10e3c83a 	sub	r17,r2,r3
10003798:	9448983a 	sll	r4,r18,r17
1000379c:	003d3206 	br	10002c68 <__alt_data_end+0xf8002c68>
100037a0:	d8000e15 	stw	zero,56(sp)
100037a4:	003d7506 	br	10002d7c <__alt_data_end+0xf8002d7c>
100037a8:	b005883a 	mov	r2,r22
100037ac:	003f4506 	br	100034c4 <__alt_data_end+0xf80034c4>
100037b0:	dc000915 	stw	r16,36(sp)
100037b4:	d9800a17 	ldw	r6,40(sp)
100037b8:	d9400917 	ldw	r5,36(sp)
100037bc:	e009883a 	mov	r4,fp
100037c0:	000625c0 	call	1000625c <__pow5mult>
100037c4:	1021883a 	mov	r16,r2
100037c8:	003f5a06 	br	10003534 <__alt_data_end+0xf8003534>
100037cc:	01c00044 	movi	r7,1
100037d0:	d9c00b15 	stw	r7,44(sp)
100037d4:	d8802217 	ldw	r2,136(sp)
100037d8:	0081280e 	bge	zero,r2,10003c7c <_dtoa_r+0x11b0>
100037dc:	100d883a 	mov	r6,r2
100037e0:	1021883a 	mov	r16,r2
100037e4:	d8800c15 	stw	r2,48(sp)
100037e8:	d8800615 	stw	r2,24(sp)
100037ec:	003d8806 	br	10002e10 <__alt_data_end+0xf8002e10>
100037f0:	d8800617 	ldw	r2,24(sp)
100037f4:	00be9b16 	blt	zero,r2,10003264 <__alt_data_end+0xf8003264>
100037f8:	10010f1e 	bne	r2,zero,10003c38 <_dtoa_r+0x116c>
100037fc:	880b883a 	mov	r5,r17
10003800:	000d883a 	mov	r6,zero
10003804:	01d00534 	movhi	r7,16404
10003808:	8009883a 	mov	r4,r16
1000380c:	000bf340 	call	1000bf34 <__muldf3>
10003810:	900d883a 	mov	r6,r18
10003814:	980f883a 	mov	r7,r19
10003818:	1009883a 	mov	r4,r2
1000381c:	180b883a 	mov	r5,r3
10003820:	000bd640 	call	1000bd64 <__gedf2>
10003824:	002b883a 	mov	r21,zero
10003828:	0023883a 	mov	r17,zero
1000382c:	1000bf16 	blt	r2,zero,10003b2c <_dtoa_r+0x1060>
10003830:	d9802217 	ldw	r6,136(sp)
10003834:	ddc00717 	ldw	r23,28(sp)
10003838:	018c303a 	nor	r6,zero,r6
1000383c:	d9800515 	stw	r6,20(sp)
10003840:	a80b883a 	mov	r5,r21
10003844:	e009883a 	mov	r4,fp
10003848:	0005c080 	call	10005c08 <_Bfree>
1000384c:	883e4926 	beq	r17,zero,10003174 <__alt_data_end+0xf8003174>
10003850:	003fad06 	br	10003708 <__alt_data_end+0xf8003708>
10003854:	d9c01117 	ldw	r7,68(sp)
10003858:	3801bc26 	beq	r7,zero,10003f4c <_dtoa_r+0x1480>
1000385c:	10810cc4 	addi	r2,r2,1075
10003860:	dd400a17 	ldw	r21,40(sp)
10003864:	dd000817 	ldw	r20,32(sp)
10003868:	003f0a06 	br	10003494 <__alt_data_end+0xf8003494>
1000386c:	00800704 	movi	r2,28
10003870:	d9000817 	ldw	r4,32(sp)
10003874:	a0a9883a 	add	r20,r20,r2
10003878:	b0ad883a 	add	r22,r22,r2
1000387c:	2089883a 	add	r4,r4,r2
10003880:	d9000815 	stw	r4,32(sp)
10003884:	003f5106 	br	100035cc <__alt_data_end+0xf80035cc>
10003888:	d8c00317 	ldw	r3,12(sp)
1000388c:	b8c1fc0e 	bge	r23,r3,10004080 <_dtoa_r+0x15b4>
10003890:	0027883a 	mov	r19,zero
10003894:	b805883a 	mov	r2,r23
10003898:	003f3e06 	br	10003594 <__alt_data_end+0xf8003594>
1000389c:	880b883a 	mov	r5,r17
100038a0:	e009883a 	mov	r4,fp
100038a4:	000f883a 	mov	r7,zero
100038a8:	01800284 	movi	r6,10
100038ac:	0005c300 	call	10005c30 <__multadd>
100038b0:	d9000c17 	ldw	r4,48(sp)
100038b4:	1023883a 	mov	r17,r2
100038b8:	0102040e 	bge	zero,r4,100040cc <_dtoa_r+0x1600>
100038bc:	d9000615 	stw	r4,24(sp)
100038c0:	0500050e 	bge	zero,r20,100038d8 <_dtoa_r+0xe0c>
100038c4:	880b883a 	mov	r5,r17
100038c8:	a00d883a 	mov	r6,r20
100038cc:	e009883a 	mov	r4,fp
100038d0:	000639c0 	call	1000639c <__lshift>
100038d4:	1023883a 	mov	r17,r2
100038d8:	9801241e 	bne	r19,zero,10003d6c <_dtoa_r+0x12a0>
100038dc:	8829883a 	mov	r20,r17
100038e0:	d9000617 	ldw	r4,24(sp)
100038e4:	dcc00717 	ldw	r19,28(sp)
100038e8:	9480004c 	andi	r18,r18,1
100038ec:	20bfffc4 	addi	r2,r4,-1
100038f0:	9885883a 	add	r2,r19,r2
100038f4:	d8800415 	stw	r2,16(sp)
100038f8:	dc800615 	stw	r18,24(sp)
100038fc:	a80b883a 	mov	r5,r21
10003900:	8009883a 	mov	r4,r16
10003904:	00028a40 	call	100028a4 <quorem>
10003908:	880b883a 	mov	r5,r17
1000390c:	8009883a 	mov	r4,r16
10003910:	102f883a 	mov	r23,r2
10003914:	00064e40 	call	100064e4 <__mcmp>
10003918:	a80b883a 	mov	r5,r21
1000391c:	a00d883a 	mov	r6,r20
10003920:	e009883a 	mov	r4,fp
10003924:	102d883a 	mov	r22,r2
10003928:	00065440 	call	10006544 <__mdiff>
1000392c:	1007883a 	mov	r3,r2
10003930:	10800317 	ldw	r2,12(r2)
10003934:	bc800c04 	addi	r18,r23,48
10003938:	180b883a 	mov	r5,r3
1000393c:	10004e1e 	bne	r2,zero,10003a78 <_dtoa_r+0xfac>
10003940:	8009883a 	mov	r4,r16
10003944:	d8c01615 	stw	r3,88(sp)
10003948:	00064e40 	call	100064e4 <__mcmp>
1000394c:	d8c01617 	ldw	r3,88(sp)
10003950:	e009883a 	mov	r4,fp
10003954:	d8801615 	stw	r2,88(sp)
10003958:	180b883a 	mov	r5,r3
1000395c:	0005c080 	call	10005c08 <_Bfree>
10003960:	d8801617 	ldw	r2,88(sp)
10003964:	1000041e 	bne	r2,zero,10003978 <_dtoa_r+0xeac>
10003968:	d9800317 	ldw	r6,12(sp)
1000396c:	3000021e 	bne	r6,zero,10003978 <_dtoa_r+0xeac>
10003970:	d8c00617 	ldw	r3,24(sp)
10003974:	18003726 	beq	r3,zero,10003a54 <_dtoa_r+0xf88>
10003978:	b0002016 	blt	r22,zero,100039fc <_dtoa_r+0xf30>
1000397c:	b000041e 	bne	r22,zero,10003990 <_dtoa_r+0xec4>
10003980:	d9000317 	ldw	r4,12(sp)
10003984:	2000021e 	bne	r4,zero,10003990 <_dtoa_r+0xec4>
10003988:	d8c00617 	ldw	r3,24(sp)
1000398c:	18001b26 	beq	r3,zero,100039fc <_dtoa_r+0xf30>
10003990:	00810716 	blt	zero,r2,10003db0 <_dtoa_r+0x12e4>
10003994:	d8c00417 	ldw	r3,16(sp)
10003998:	9d800044 	addi	r22,r19,1
1000399c:	9c800005 	stb	r18,0(r19)
100039a0:	b02f883a 	mov	r23,r22
100039a4:	98c10626 	beq	r19,r3,10003dc0 <_dtoa_r+0x12f4>
100039a8:	800b883a 	mov	r5,r16
100039ac:	000f883a 	mov	r7,zero
100039b0:	01800284 	movi	r6,10
100039b4:	e009883a 	mov	r4,fp
100039b8:	0005c300 	call	10005c30 <__multadd>
100039bc:	1021883a 	mov	r16,r2
100039c0:	000f883a 	mov	r7,zero
100039c4:	01800284 	movi	r6,10
100039c8:	880b883a 	mov	r5,r17
100039cc:	e009883a 	mov	r4,fp
100039d0:	8d002526 	beq	r17,r20,10003a68 <_dtoa_r+0xf9c>
100039d4:	0005c300 	call	10005c30 <__multadd>
100039d8:	a00b883a 	mov	r5,r20
100039dc:	000f883a 	mov	r7,zero
100039e0:	01800284 	movi	r6,10
100039e4:	e009883a 	mov	r4,fp
100039e8:	1023883a 	mov	r17,r2
100039ec:	0005c300 	call	10005c30 <__multadd>
100039f0:	1029883a 	mov	r20,r2
100039f4:	b027883a 	mov	r19,r22
100039f8:	003fc006 	br	100038fc <__alt_data_end+0xf80038fc>
100039fc:	9011883a 	mov	r8,r18
10003a00:	00800e0e 	bge	zero,r2,10003a3c <_dtoa_r+0xf70>
10003a04:	800b883a 	mov	r5,r16
10003a08:	01800044 	movi	r6,1
10003a0c:	e009883a 	mov	r4,fp
10003a10:	da001715 	stw	r8,92(sp)
10003a14:	000639c0 	call	1000639c <__lshift>
10003a18:	a80b883a 	mov	r5,r21
10003a1c:	1009883a 	mov	r4,r2
10003a20:	1021883a 	mov	r16,r2
10003a24:	00064e40 	call	100064e4 <__mcmp>
10003a28:	da001717 	ldw	r8,92(sp)
10003a2c:	0081960e 	bge	zero,r2,10004088 <_dtoa_r+0x15bc>
10003a30:	00800e44 	movi	r2,57
10003a34:	40817026 	beq	r8,r2,10003ff8 <_dtoa_r+0x152c>
10003a38:	ba000c44 	addi	r8,r23,49
10003a3c:	8825883a 	mov	r18,r17
10003a40:	9dc00044 	addi	r23,r19,1
10003a44:	9a000005 	stb	r8,0(r19)
10003a48:	a023883a 	mov	r17,r20
10003a4c:	dc000915 	stw	r16,36(sp)
10003a50:	003f2406 	br	100036e4 <__alt_data_end+0xf80036e4>
10003a54:	00800e44 	movi	r2,57
10003a58:	9011883a 	mov	r8,r18
10003a5c:	90816626 	beq	r18,r2,10003ff8 <_dtoa_r+0x152c>
10003a60:	05bff516 	blt	zero,r22,10003a38 <__alt_data_end+0xf8003a38>
10003a64:	003ff506 	br	10003a3c <__alt_data_end+0xf8003a3c>
10003a68:	0005c300 	call	10005c30 <__multadd>
10003a6c:	1023883a 	mov	r17,r2
10003a70:	1029883a 	mov	r20,r2
10003a74:	003fdf06 	br	100039f4 <__alt_data_end+0xf80039f4>
10003a78:	e009883a 	mov	r4,fp
10003a7c:	0005c080 	call	10005c08 <_Bfree>
10003a80:	00800044 	movi	r2,1
10003a84:	003fbc06 	br	10003978 <__alt_data_end+0xf8003978>
10003a88:	a80b883a 	mov	r5,r21
10003a8c:	8009883a 	mov	r4,r16
10003a90:	00064e40 	call	100064e4 <__mcmp>
10003a94:	103edb0e 	bge	r2,zero,10003604 <__alt_data_end+0xf8003604>
10003a98:	800b883a 	mov	r5,r16
10003a9c:	000f883a 	mov	r7,zero
10003aa0:	01800284 	movi	r6,10
10003aa4:	e009883a 	mov	r4,fp
10003aa8:	0005c300 	call	10005c30 <__multadd>
10003aac:	1021883a 	mov	r16,r2
10003ab0:	d8800517 	ldw	r2,20(sp)
10003ab4:	d8c00b17 	ldw	r3,44(sp)
10003ab8:	10bfffc4 	addi	r2,r2,-1
10003abc:	d8800515 	stw	r2,20(sp)
10003ac0:	183f761e 	bne	r3,zero,1000389c <__alt_data_end+0xf800389c>
10003ac4:	d9000c17 	ldw	r4,48(sp)
10003ac8:	0101730e 	bge	zero,r4,10004098 <_dtoa_r+0x15cc>
10003acc:	d9000615 	stw	r4,24(sp)
10003ad0:	003ed006 	br	10003614 <__alt_data_end+0xf8003614>
10003ad4:	00800084 	movi	r2,2
10003ad8:	3081861e 	bne	r6,r2,100040f4 <_dtoa_r+0x1628>
10003adc:	d8000b15 	stw	zero,44(sp)
10003ae0:	003f3c06 	br	100037d4 <__alt_data_end+0xf80037d4>
10003ae4:	dc000917 	ldw	r16,36(sp)
10003ae8:	003e9206 	br	10003534 <__alt_data_end+0xf8003534>
10003aec:	d9c00317 	ldw	r7,12(sp)
10003af0:	00800084 	movi	r2,2
10003af4:	11fec50e 	bge	r2,r7,1000360c <__alt_data_end+0xf800360c>
10003af8:	d9000617 	ldw	r4,24(sp)
10003afc:	20013c1e 	bne	r4,zero,10003ff0 <_dtoa_r+0x1524>
10003b00:	a80b883a 	mov	r5,r21
10003b04:	000f883a 	mov	r7,zero
10003b08:	01800144 	movi	r6,5
10003b0c:	e009883a 	mov	r4,fp
10003b10:	0005c300 	call	10005c30 <__multadd>
10003b14:	100b883a 	mov	r5,r2
10003b18:	8009883a 	mov	r4,r16
10003b1c:	102b883a 	mov	r21,r2
10003b20:	00064e40 	call	100064e4 <__mcmp>
10003b24:	dc000915 	stw	r16,36(sp)
10003b28:	00bf410e 	bge	zero,r2,10003830 <__alt_data_end+0xf8003830>
10003b2c:	d9c00717 	ldw	r7,28(sp)
10003b30:	00800c44 	movi	r2,49
10003b34:	38800005 	stb	r2,0(r7)
10003b38:	d8800517 	ldw	r2,20(sp)
10003b3c:	3dc00044 	addi	r23,r7,1
10003b40:	10800044 	addi	r2,r2,1
10003b44:	d8800515 	stw	r2,20(sp)
10003b48:	003f3d06 	br	10003840 <__alt_data_end+0xf8003840>
10003b4c:	d9800517 	ldw	r6,20(sp)
10003b50:	d9c00717 	ldw	r7,28(sp)
10003b54:	00800c44 	movi	r2,49
10003b58:	31800044 	addi	r6,r6,1
10003b5c:	d9800515 	stw	r6,20(sp)
10003b60:	38800005 	stb	r2,0(r7)
10003b64:	003edf06 	br	100036e4 <__alt_data_end+0xf80036e4>
10003b68:	d8000b15 	stw	zero,44(sp)
10003b6c:	003c9f06 	br	10002dec <__alt_data_end+0xf8002dec>
10003b70:	903e7e1e 	bne	r18,zero,1000356c <__alt_data_end+0xf800356c>
10003b74:	00800434 	movhi	r2,16
10003b78:	10bfffc4 	addi	r2,r2,-1
10003b7c:	9884703a 	and	r2,r19,r2
10003b80:	1000ea1e 	bne	r2,zero,10003f2c <_dtoa_r+0x1460>
10003b84:	9cdffc2c 	andhi	r19,r19,32752
10003b88:	9800e826 	beq	r19,zero,10003f2c <_dtoa_r+0x1460>
10003b8c:	d9c00817 	ldw	r7,32(sp)
10003b90:	b5800044 	addi	r22,r22,1
10003b94:	04c00044 	movi	r19,1
10003b98:	39c00044 	addi	r7,r7,1
10003b9c:	d9c00815 	stw	r7,32(sp)
10003ba0:	d8800d17 	ldw	r2,52(sp)
10003ba4:	103e721e 	bne	r2,zero,10003570 <__alt_data_end+0xf8003570>
10003ba8:	00800044 	movi	r2,1
10003bac:	003e7906 	br	10003594 <__alt_data_end+0xf8003594>
10003bb0:	8009883a 	mov	r4,r16
10003bb4:	000d11c0 	call	1000d11c <__floatsidf>
10003bb8:	d9800f17 	ldw	r6,60(sp)
10003bbc:	d9c01017 	ldw	r7,64(sp)
10003bc0:	1009883a 	mov	r4,r2
10003bc4:	180b883a 	mov	r5,r3
10003bc8:	000bf340 	call	1000bf34 <__muldf3>
10003bcc:	000d883a 	mov	r6,zero
10003bd0:	01d00734 	movhi	r7,16412
10003bd4:	1009883a 	mov	r4,r2
10003bd8:	180b883a 	mov	r5,r3
10003bdc:	000aa600 	call	1000aa60 <__adddf3>
10003be0:	047f3034 	movhi	r17,64704
10003be4:	1021883a 	mov	r16,r2
10003be8:	1c63883a 	add	r17,r3,r17
10003bec:	d9000f17 	ldw	r4,60(sp)
10003bf0:	d9401017 	ldw	r5,64(sp)
10003bf4:	000d883a 	mov	r6,zero
10003bf8:	01d00534 	movhi	r7,16404
10003bfc:	000c7a00 	call	1000c7a0 <__subdf3>
10003c00:	800d883a 	mov	r6,r16
10003c04:	880f883a 	mov	r7,r17
10003c08:	1009883a 	mov	r4,r2
10003c0c:	180b883a 	mov	r5,r3
10003c10:	102b883a 	mov	r21,r2
10003c14:	1829883a 	mov	r20,r3
10003c18:	000bd640 	call	1000bd64 <__gedf2>
10003c1c:	00806c16 	blt	zero,r2,10003dd0 <_dtoa_r+0x1304>
10003c20:	89e0003c 	xorhi	r7,r17,32768
10003c24:	800d883a 	mov	r6,r16
10003c28:	a809883a 	mov	r4,r21
10003c2c:	a00b883a 	mov	r5,r20
10003c30:	000be400 	call	1000be40 <__ledf2>
10003c34:	103d7e0e 	bge	r2,zero,10003230 <__alt_data_end+0xf8003230>
10003c38:	002b883a 	mov	r21,zero
10003c3c:	0023883a 	mov	r17,zero
10003c40:	003efb06 	br	10003830 <__alt_data_end+0xf8003830>
10003c44:	d8800717 	ldw	r2,28(sp)
10003c48:	003bd006 	br	10002b8c <__alt_data_end+0xf8002b8c>
10003c4c:	d9000a17 	ldw	r4,40(sp)
10003c50:	d9800d17 	ldw	r6,52(sp)
10003c54:	dd400a15 	stw	r21,40(sp)
10003c58:	a905c83a 	sub	r2,r21,r4
10003c5c:	308d883a 	add	r6,r6,r2
10003c60:	d9800d15 	stw	r6,52(sp)
10003c64:	002b883a 	mov	r21,zero
10003c68:	003e0606 	br	10003484 <__alt_data_end+0xf8003484>
10003c6c:	9023883a 	mov	r17,r18
10003c70:	9829883a 	mov	r20,r19
10003c74:	04000084 	movi	r16,2
10003c78:	003c9206 	br	10002ec4 <__alt_data_end+0xf8002ec4>
10003c7c:	04000044 	movi	r16,1
10003c80:	dc000c15 	stw	r16,48(sp)
10003c84:	dc000615 	stw	r16,24(sp)
10003c88:	dc002215 	stw	r16,136(sp)
10003c8c:	e0001115 	stw	zero,68(fp)
10003c90:	000b883a 	mov	r5,zero
10003c94:	003c6906 	br	10002e3c <__alt_data_end+0xf8002e3c>
10003c98:	3021883a 	mov	r16,r6
10003c9c:	003ffb06 	br	10003c8c <__alt_data_end+0xf8003c8c>
10003ca0:	1000021e 	bne	r2,zero,10003cac <_dtoa_r+0x11e0>
10003ca4:	4200004c 	andi	r8,r8,1
10003ca8:	403e7d1e 	bne	r8,zero,100036a0 <__alt_data_end+0xf80036a0>
10003cac:	01000c04 	movi	r4,48
10003cb0:	00000106 	br	10003cb8 <_dtoa_r+0x11ec>
10003cb4:	102f883a 	mov	r23,r2
10003cb8:	b8bfffc4 	addi	r2,r23,-1
10003cbc:	10c00007 	ldb	r3,0(r2)
10003cc0:	193ffc26 	beq	r3,r4,10003cb4 <__alt_data_end+0xf8003cb4>
10003cc4:	003e8706 	br	100036e4 <__alt_data_end+0xf80036e4>
10003cc8:	d8800517 	ldw	r2,20(sp)
10003ccc:	00a3c83a 	sub	r17,zero,r2
10003cd0:	8800a426 	beq	r17,zero,10003f64 <_dtoa_r+0x1498>
10003cd4:	888003cc 	andi	r2,r17,15
10003cd8:	100490fa 	slli	r2,r2,3
10003cdc:	00c40074 	movhi	r3,4097
10003ce0:	18fea304 	addi	r3,r3,-1396
10003ce4:	1885883a 	add	r2,r3,r2
10003ce8:	11800017 	ldw	r6,0(r2)
10003cec:	11c00117 	ldw	r7,4(r2)
10003cf0:	9009883a 	mov	r4,r18
10003cf4:	980b883a 	mov	r5,r19
10003cf8:	8823d13a 	srai	r17,r17,4
10003cfc:	000bf340 	call	1000bf34 <__muldf3>
10003d00:	d8800f15 	stw	r2,60(sp)
10003d04:	d8c01015 	stw	r3,64(sp)
10003d08:	8800e826 	beq	r17,zero,100040ac <_dtoa_r+0x15e0>
10003d0c:	05040074 	movhi	r20,4097
10003d10:	a53e9904 	addi	r20,r20,-1436
10003d14:	04000084 	movi	r16,2
10003d18:	8980004c 	andi	r6,r17,1
10003d1c:	1009883a 	mov	r4,r2
10003d20:	8823d07a 	srai	r17,r17,1
10003d24:	180b883a 	mov	r5,r3
10003d28:	30000426 	beq	r6,zero,10003d3c <_dtoa_r+0x1270>
10003d2c:	a1800017 	ldw	r6,0(r20)
10003d30:	a1c00117 	ldw	r7,4(r20)
10003d34:	84000044 	addi	r16,r16,1
10003d38:	000bf340 	call	1000bf34 <__muldf3>
10003d3c:	a5000204 	addi	r20,r20,8
10003d40:	883ff51e 	bne	r17,zero,10003d18 <__alt_data_end+0xf8003d18>
10003d44:	d8800f15 	stw	r2,60(sp)
10003d48:	d8c01015 	stw	r3,64(sp)
10003d4c:	003c7606 	br	10002f28 <__alt_data_end+0xf8002f28>
10003d50:	00c00c04 	movi	r3,48
10003d54:	10c00005 	stb	r3,0(r2)
10003d58:	d8c00517 	ldw	r3,20(sp)
10003d5c:	bd3fffc3 	ldbu	r20,-1(r23)
10003d60:	18c00044 	addi	r3,r3,1
10003d64:	d8c00515 	stw	r3,20(sp)
10003d68:	003db906 	br	10003450 <__alt_data_end+0xf8003450>
10003d6c:	89400117 	ldw	r5,4(r17)
10003d70:	e009883a 	mov	r4,fp
10003d74:	0005b600 	call	10005b60 <_Balloc>
10003d78:	89800417 	ldw	r6,16(r17)
10003d7c:	89400304 	addi	r5,r17,12
10003d80:	11000304 	addi	r4,r2,12
10003d84:	31800084 	addi	r6,r6,2
10003d88:	318d883a 	add	r6,r6,r6
10003d8c:	318d883a 	add	r6,r6,r6
10003d90:	1027883a 	mov	r19,r2
10003d94:	00058f00 	call	100058f0 <memcpy>
10003d98:	01800044 	movi	r6,1
10003d9c:	980b883a 	mov	r5,r19
10003da0:	e009883a 	mov	r4,fp
10003da4:	000639c0 	call	1000639c <__lshift>
10003da8:	1029883a 	mov	r20,r2
10003dac:	003ecc06 	br	100038e0 <__alt_data_end+0xf80038e0>
10003db0:	00800e44 	movi	r2,57
10003db4:	90809026 	beq	r18,r2,10003ff8 <_dtoa_r+0x152c>
10003db8:	92000044 	addi	r8,r18,1
10003dbc:	003f1f06 	br	10003a3c <__alt_data_end+0xf8003a3c>
10003dc0:	9011883a 	mov	r8,r18
10003dc4:	8825883a 	mov	r18,r17
10003dc8:	a023883a 	mov	r17,r20
10003dcc:	003e2906 	br	10003674 <__alt_data_end+0xf8003674>
10003dd0:	002b883a 	mov	r21,zero
10003dd4:	0023883a 	mov	r17,zero
10003dd8:	003f5406 	br	10003b2c <__alt_data_end+0xf8003b2c>
10003ddc:	61bfffc4 	addi	r6,r12,-1
10003de0:	300490fa 	slli	r2,r6,3
10003de4:	00c40074 	movhi	r3,4097
10003de8:	18fea304 	addi	r3,r3,-1396
10003dec:	1885883a 	add	r2,r3,r2
10003df0:	11000017 	ldw	r4,0(r2)
10003df4:	11400117 	ldw	r5,4(r2)
10003df8:	d8800717 	ldw	r2,28(sp)
10003dfc:	880f883a 	mov	r7,r17
10003e00:	d9801215 	stw	r6,72(sp)
10003e04:	800d883a 	mov	r6,r16
10003e08:	db001615 	stw	r12,88(sp)
10003e0c:	15c00044 	addi	r23,r2,1
10003e10:	000bf340 	call	1000bf34 <__muldf3>
10003e14:	d9401017 	ldw	r5,64(sp)
10003e18:	d9000f17 	ldw	r4,60(sp)
10003e1c:	d8c01515 	stw	r3,84(sp)
10003e20:	d8801415 	stw	r2,80(sp)
10003e24:	000d09c0 	call	1000d09c <__fixdfsi>
10003e28:	1009883a 	mov	r4,r2
10003e2c:	1021883a 	mov	r16,r2
10003e30:	000d11c0 	call	1000d11c <__floatsidf>
10003e34:	d9000f17 	ldw	r4,60(sp)
10003e38:	d9401017 	ldw	r5,64(sp)
10003e3c:	100d883a 	mov	r6,r2
10003e40:	180f883a 	mov	r7,r3
10003e44:	000c7a00 	call	1000c7a0 <__subdf3>
10003e48:	1829883a 	mov	r20,r3
10003e4c:	d8c00717 	ldw	r3,28(sp)
10003e50:	84000c04 	addi	r16,r16,48
10003e54:	1023883a 	mov	r17,r2
10003e58:	1c000005 	stb	r16,0(r3)
10003e5c:	db001617 	ldw	r12,88(sp)
10003e60:	00800044 	movi	r2,1
10003e64:	60802226 	beq	r12,r2,10003ef0 <_dtoa_r+0x1424>
10003e68:	d9c00717 	ldw	r7,28(sp)
10003e6c:	8805883a 	mov	r2,r17
10003e70:	b82b883a 	mov	r21,r23
10003e74:	3b19883a 	add	r12,r7,r12
10003e78:	6023883a 	mov	r17,r12
10003e7c:	a007883a 	mov	r3,r20
10003e80:	dc800f15 	stw	r18,60(sp)
10003e84:	000d883a 	mov	r6,zero
10003e88:	01d00934 	movhi	r7,16420
10003e8c:	1009883a 	mov	r4,r2
10003e90:	180b883a 	mov	r5,r3
10003e94:	000bf340 	call	1000bf34 <__muldf3>
10003e98:	180b883a 	mov	r5,r3
10003e9c:	1009883a 	mov	r4,r2
10003ea0:	1829883a 	mov	r20,r3
10003ea4:	1025883a 	mov	r18,r2
10003ea8:	000d09c0 	call	1000d09c <__fixdfsi>
10003eac:	1009883a 	mov	r4,r2
10003eb0:	1021883a 	mov	r16,r2
10003eb4:	000d11c0 	call	1000d11c <__floatsidf>
10003eb8:	100d883a 	mov	r6,r2
10003ebc:	180f883a 	mov	r7,r3
10003ec0:	9009883a 	mov	r4,r18
10003ec4:	a00b883a 	mov	r5,r20
10003ec8:	84000c04 	addi	r16,r16,48
10003ecc:	000c7a00 	call	1000c7a0 <__subdf3>
10003ed0:	ad400044 	addi	r21,r21,1
10003ed4:	ac3fffc5 	stb	r16,-1(r21)
10003ed8:	ac7fea1e 	bne	r21,r17,10003e84 <__alt_data_end+0xf8003e84>
10003edc:	1023883a 	mov	r17,r2
10003ee0:	d8801217 	ldw	r2,72(sp)
10003ee4:	dc800f17 	ldw	r18,60(sp)
10003ee8:	1829883a 	mov	r20,r3
10003eec:	b8af883a 	add	r23,r23,r2
10003ef0:	d9001417 	ldw	r4,80(sp)
10003ef4:	d9401517 	ldw	r5,84(sp)
10003ef8:	000d883a 	mov	r6,zero
10003efc:	01cff834 	movhi	r7,16352
10003f00:	000aa600 	call	1000aa60 <__adddf3>
10003f04:	880d883a 	mov	r6,r17
10003f08:	a00f883a 	mov	r7,r20
10003f0c:	1009883a 	mov	r4,r2
10003f10:	180b883a 	mov	r5,r3
10003f14:	000be400 	call	1000be40 <__ledf2>
10003f18:	10003e0e 	bge	r2,zero,10004014 <_dtoa_r+0x1548>
10003f1c:	d9001317 	ldw	r4,76(sp)
10003f20:	bd3fffc3 	ldbu	r20,-1(r23)
10003f24:	d9000515 	stw	r4,20(sp)
10003f28:	003d3b06 	br	10003418 <__alt_data_end+0xf8003418>
10003f2c:	0027883a 	mov	r19,zero
10003f30:	003f1b06 	br	10003ba0 <__alt_data_end+0xf8003ba0>
10003f34:	d8800817 	ldw	r2,32(sp)
10003f38:	11e9c83a 	sub	r20,r2,r7
10003f3c:	0005883a 	mov	r2,zero
10003f40:	003d5406 	br	10003494 <__alt_data_end+0xf8003494>
10003f44:	00800044 	movi	r2,1
10003f48:	003dc706 	br	10003668 <__alt_data_end+0xf8003668>
10003f4c:	d8c00217 	ldw	r3,8(sp)
10003f50:	00800d84 	movi	r2,54
10003f54:	dd400a17 	ldw	r21,40(sp)
10003f58:	10c5c83a 	sub	r2,r2,r3
10003f5c:	dd000817 	ldw	r20,32(sp)
10003f60:	003d4c06 	br	10003494 <__alt_data_end+0xf8003494>
10003f64:	dc800f15 	stw	r18,60(sp)
10003f68:	dcc01015 	stw	r19,64(sp)
10003f6c:	04000084 	movi	r16,2
10003f70:	003bed06 	br	10002f28 <__alt_data_end+0xf8002f28>
10003f74:	d9000617 	ldw	r4,24(sp)
10003f78:	203f0d26 	beq	r4,zero,10003bb0 <__alt_data_end+0xf8003bb0>
10003f7c:	d9800c17 	ldw	r6,48(sp)
10003f80:	01bcab0e 	bge	zero,r6,10003230 <__alt_data_end+0xf8003230>
10003f84:	d9401017 	ldw	r5,64(sp)
10003f88:	d9000f17 	ldw	r4,60(sp)
10003f8c:	000d883a 	mov	r6,zero
10003f90:	01d00934 	movhi	r7,16420
10003f94:	000bf340 	call	1000bf34 <__muldf3>
10003f98:	81000044 	addi	r4,r16,1
10003f9c:	d8800f15 	stw	r2,60(sp)
10003fa0:	d8c01015 	stw	r3,64(sp)
10003fa4:	000d11c0 	call	1000d11c <__floatsidf>
10003fa8:	d9800f17 	ldw	r6,60(sp)
10003fac:	d9c01017 	ldw	r7,64(sp)
10003fb0:	1009883a 	mov	r4,r2
10003fb4:	180b883a 	mov	r5,r3
10003fb8:	000bf340 	call	1000bf34 <__muldf3>
10003fbc:	01d00734 	movhi	r7,16412
10003fc0:	000d883a 	mov	r6,zero
10003fc4:	1009883a 	mov	r4,r2
10003fc8:	180b883a 	mov	r5,r3
10003fcc:	000aa600 	call	1000aa60 <__adddf3>
10003fd0:	d9c00517 	ldw	r7,20(sp)
10003fd4:	047f3034 	movhi	r17,64704
10003fd8:	1021883a 	mov	r16,r2
10003fdc:	39ffffc4 	addi	r7,r7,-1
10003fe0:	d9c01315 	stw	r7,76(sp)
10003fe4:	1c63883a 	add	r17,r3,r17
10003fe8:	db000c17 	ldw	r12,48(sp)
10003fec:	003bea06 	br	10002f98 <__alt_data_end+0xf8002f98>
10003ff0:	dc000915 	stw	r16,36(sp)
10003ff4:	003e0e06 	br	10003830 <__alt_data_end+0xf8003830>
10003ff8:	01000e44 	movi	r4,57
10003ffc:	8825883a 	mov	r18,r17
10004000:	9dc00044 	addi	r23,r19,1
10004004:	99000005 	stb	r4,0(r19)
10004008:	a023883a 	mov	r17,r20
1000400c:	dc000915 	stw	r16,36(sp)
10004010:	003da406 	br	100036a4 <__alt_data_end+0xf80036a4>
10004014:	d9801417 	ldw	r6,80(sp)
10004018:	d9c01517 	ldw	r7,84(sp)
1000401c:	0009883a 	mov	r4,zero
10004020:	014ff834 	movhi	r5,16352
10004024:	000c7a00 	call	1000c7a0 <__subdf3>
10004028:	880d883a 	mov	r6,r17
1000402c:	a00f883a 	mov	r7,r20
10004030:	1009883a 	mov	r4,r2
10004034:	180b883a 	mov	r5,r3
10004038:	000bd640 	call	1000bd64 <__gedf2>
1000403c:	00bc7c0e 	bge	zero,r2,10003230 <__alt_data_end+0xf8003230>
10004040:	01000c04 	movi	r4,48
10004044:	00000106 	br	1000404c <_dtoa_r+0x1580>
10004048:	102f883a 	mov	r23,r2
1000404c:	b8bfffc4 	addi	r2,r23,-1
10004050:	10c00007 	ldb	r3,0(r2)
10004054:	193ffc26 	beq	r3,r4,10004048 <__alt_data_end+0xf8004048>
10004058:	d9801317 	ldw	r6,76(sp)
1000405c:	d9800515 	stw	r6,20(sp)
10004060:	003c4406 	br	10003174 <__alt_data_end+0xf8003174>
10004064:	d9801317 	ldw	r6,76(sp)
10004068:	d9800515 	stw	r6,20(sp)
1000406c:	003cea06 	br	10003418 <__alt_data_end+0xf8003418>
10004070:	dd800f17 	ldw	r22,60(sp)
10004074:	dcc01017 	ldw	r19,64(sp)
10004078:	dc801217 	ldw	r18,72(sp)
1000407c:	003c6c06 	br	10003230 <__alt_data_end+0xf8003230>
10004080:	903e031e 	bne	r18,zero,10003890 <__alt_data_end+0xf8003890>
10004084:	003ebb06 	br	10003b74 <__alt_data_end+0xf8003b74>
10004088:	103e6c1e 	bne	r2,zero,10003a3c <__alt_data_end+0xf8003a3c>
1000408c:	4080004c 	andi	r2,r8,1
10004090:	103e6a26 	beq	r2,zero,10003a3c <__alt_data_end+0xf8003a3c>
10004094:	003e6606 	br	10003a30 <__alt_data_end+0xf8003a30>
10004098:	d8c00317 	ldw	r3,12(sp)
1000409c:	00800084 	movi	r2,2
100040a0:	10c02916 	blt	r2,r3,10004148 <_dtoa_r+0x167c>
100040a4:	d9000c17 	ldw	r4,48(sp)
100040a8:	003e8806 	br	10003acc <__alt_data_end+0xf8003acc>
100040ac:	04000084 	movi	r16,2
100040b0:	003b9d06 	br	10002f28 <__alt_data_end+0xf8002f28>
100040b4:	d9001317 	ldw	r4,76(sp)
100040b8:	d9000515 	stw	r4,20(sp)
100040bc:	003cd606 	br	10003418 <__alt_data_end+0xf8003418>
100040c0:	d8801317 	ldw	r2,76(sp)
100040c4:	d8800515 	stw	r2,20(sp)
100040c8:	003c2a06 	br	10003174 <__alt_data_end+0xf8003174>
100040cc:	d9800317 	ldw	r6,12(sp)
100040d0:	00800084 	movi	r2,2
100040d4:	11801516 	blt	r2,r6,1000412c <_dtoa_r+0x1660>
100040d8:	d9c00c17 	ldw	r7,48(sp)
100040dc:	d9c00615 	stw	r7,24(sp)
100040e0:	003df706 	br	100038c0 <__alt_data_end+0xf80038c0>
100040e4:	193d3926 	beq	r3,r4,100035cc <__alt_data_end+0xf80035cc>
100040e8:	00c00f04 	movi	r3,60
100040ec:	1885c83a 	sub	r2,r3,r2
100040f0:	003ddf06 	br	10003870 <__alt_data_end+0xf8003870>
100040f4:	e009883a 	mov	r4,fp
100040f8:	e0001115 	stw	zero,68(fp)
100040fc:	000b883a 	mov	r5,zero
10004100:	0005b600 	call	10005b60 <_Balloc>
10004104:	d8800715 	stw	r2,28(sp)
10004108:	d8c00717 	ldw	r3,28(sp)
1000410c:	00bfffc4 	movi	r2,-1
10004110:	01000044 	movi	r4,1
10004114:	d8800c15 	stw	r2,48(sp)
10004118:	e0c01015 	stw	r3,64(fp)
1000411c:	d9000b15 	stw	r4,44(sp)
10004120:	d8800615 	stw	r2,24(sp)
10004124:	d8002215 	stw	zero,136(sp)
10004128:	003c4106 	br	10003230 <__alt_data_end+0xf8003230>
1000412c:	d8c00c17 	ldw	r3,48(sp)
10004130:	d8c00615 	stw	r3,24(sp)
10004134:	003e7006 	br	10003af8 <__alt_data_end+0xf8003af8>
10004138:	04400044 	movi	r17,1
1000413c:	003b2006 	br	10002dc0 <__alt_data_end+0xf8002dc0>
10004140:	000b883a 	mov	r5,zero
10004144:	003b3d06 	br	10002e3c <__alt_data_end+0xf8002e3c>
10004148:	d8800c17 	ldw	r2,48(sp)
1000414c:	d8800615 	stw	r2,24(sp)
10004150:	003e6906 	br	10003af8 <__alt_data_end+0xf8003af8>

10004154 <__sflush_r>:
10004154:	2880030b 	ldhu	r2,12(r5)
10004158:	defffb04 	addi	sp,sp,-20
1000415c:	dcc00315 	stw	r19,12(sp)
10004160:	dc400115 	stw	r17,4(sp)
10004164:	dfc00415 	stw	ra,16(sp)
10004168:	dc800215 	stw	r18,8(sp)
1000416c:	dc000015 	stw	r16,0(sp)
10004170:	10c0020c 	andi	r3,r2,8
10004174:	2823883a 	mov	r17,r5
10004178:	2027883a 	mov	r19,r4
1000417c:	1800311e 	bne	r3,zero,10004244 <__sflush_r+0xf0>
10004180:	28c00117 	ldw	r3,4(r5)
10004184:	10820014 	ori	r2,r2,2048
10004188:	2880030d 	sth	r2,12(r5)
1000418c:	00c04b0e 	bge	zero,r3,100042bc <__sflush_r+0x168>
10004190:	8a000a17 	ldw	r8,40(r17)
10004194:	40002326 	beq	r8,zero,10004224 <__sflush_r+0xd0>
10004198:	9c000017 	ldw	r16,0(r19)
1000419c:	10c4000c 	andi	r3,r2,4096
100041a0:	98000015 	stw	zero,0(r19)
100041a4:	18004826 	beq	r3,zero,100042c8 <__sflush_r+0x174>
100041a8:	89801417 	ldw	r6,80(r17)
100041ac:	10c0010c 	andi	r3,r2,4
100041b0:	18000626 	beq	r3,zero,100041cc <__sflush_r+0x78>
100041b4:	88c00117 	ldw	r3,4(r17)
100041b8:	88800c17 	ldw	r2,48(r17)
100041bc:	30cdc83a 	sub	r6,r6,r3
100041c0:	10000226 	beq	r2,zero,100041cc <__sflush_r+0x78>
100041c4:	88800f17 	ldw	r2,60(r17)
100041c8:	308dc83a 	sub	r6,r6,r2
100041cc:	89400717 	ldw	r5,28(r17)
100041d0:	000f883a 	mov	r7,zero
100041d4:	9809883a 	mov	r4,r19
100041d8:	403ee83a 	callr	r8
100041dc:	00ffffc4 	movi	r3,-1
100041e0:	10c04426 	beq	r2,r3,100042f4 <__sflush_r+0x1a0>
100041e4:	88c0030b 	ldhu	r3,12(r17)
100041e8:	89000417 	ldw	r4,16(r17)
100041ec:	88000115 	stw	zero,4(r17)
100041f0:	197dffcc 	andi	r5,r3,63487
100041f4:	8940030d 	sth	r5,12(r17)
100041f8:	89000015 	stw	r4,0(r17)
100041fc:	18c4000c 	andi	r3,r3,4096
10004200:	18002c1e 	bne	r3,zero,100042b4 <__sflush_r+0x160>
10004204:	89400c17 	ldw	r5,48(r17)
10004208:	9c000015 	stw	r16,0(r19)
1000420c:	28000526 	beq	r5,zero,10004224 <__sflush_r+0xd0>
10004210:	88801004 	addi	r2,r17,64
10004214:	28800226 	beq	r5,r2,10004220 <__sflush_r+0xcc>
10004218:	9809883a 	mov	r4,r19
1000421c:	00048d00 	call	100048d0 <_free_r>
10004220:	88000c15 	stw	zero,48(r17)
10004224:	0005883a 	mov	r2,zero
10004228:	dfc00417 	ldw	ra,16(sp)
1000422c:	dcc00317 	ldw	r19,12(sp)
10004230:	dc800217 	ldw	r18,8(sp)
10004234:	dc400117 	ldw	r17,4(sp)
10004238:	dc000017 	ldw	r16,0(sp)
1000423c:	dec00504 	addi	sp,sp,20
10004240:	f800283a 	ret
10004244:	2c800417 	ldw	r18,16(r5)
10004248:	903ff626 	beq	r18,zero,10004224 <__alt_data_end+0xf8004224>
1000424c:	2c000017 	ldw	r16,0(r5)
10004250:	108000cc 	andi	r2,r2,3
10004254:	2c800015 	stw	r18,0(r5)
10004258:	84a1c83a 	sub	r16,r16,r18
1000425c:	1000131e 	bne	r2,zero,100042ac <__sflush_r+0x158>
10004260:	28800517 	ldw	r2,20(r5)
10004264:	88800215 	stw	r2,8(r17)
10004268:	04000316 	blt	zero,r16,10004278 <__sflush_r+0x124>
1000426c:	003fed06 	br	10004224 <__alt_data_end+0xf8004224>
10004270:	90a5883a 	add	r18,r18,r2
10004274:	043feb0e 	bge	zero,r16,10004224 <__alt_data_end+0xf8004224>
10004278:	88800917 	ldw	r2,36(r17)
1000427c:	89400717 	ldw	r5,28(r17)
10004280:	800f883a 	mov	r7,r16
10004284:	900d883a 	mov	r6,r18
10004288:	9809883a 	mov	r4,r19
1000428c:	103ee83a 	callr	r2
10004290:	80a1c83a 	sub	r16,r16,r2
10004294:	00bff616 	blt	zero,r2,10004270 <__alt_data_end+0xf8004270>
10004298:	88c0030b 	ldhu	r3,12(r17)
1000429c:	00bfffc4 	movi	r2,-1
100042a0:	18c01014 	ori	r3,r3,64
100042a4:	88c0030d 	sth	r3,12(r17)
100042a8:	003fdf06 	br	10004228 <__alt_data_end+0xf8004228>
100042ac:	0005883a 	mov	r2,zero
100042b0:	003fec06 	br	10004264 <__alt_data_end+0xf8004264>
100042b4:	88801415 	stw	r2,80(r17)
100042b8:	003fd206 	br	10004204 <__alt_data_end+0xf8004204>
100042bc:	28c00f17 	ldw	r3,60(r5)
100042c0:	00ffb316 	blt	zero,r3,10004190 <__alt_data_end+0xf8004190>
100042c4:	003fd706 	br	10004224 <__alt_data_end+0xf8004224>
100042c8:	89400717 	ldw	r5,28(r17)
100042cc:	000d883a 	mov	r6,zero
100042d0:	01c00044 	movi	r7,1
100042d4:	9809883a 	mov	r4,r19
100042d8:	403ee83a 	callr	r8
100042dc:	100d883a 	mov	r6,r2
100042e0:	00bfffc4 	movi	r2,-1
100042e4:	30801426 	beq	r6,r2,10004338 <__sflush_r+0x1e4>
100042e8:	8880030b 	ldhu	r2,12(r17)
100042ec:	8a000a17 	ldw	r8,40(r17)
100042f0:	003fae06 	br	100041ac <__alt_data_end+0xf80041ac>
100042f4:	98c00017 	ldw	r3,0(r19)
100042f8:	183fba26 	beq	r3,zero,100041e4 <__alt_data_end+0xf80041e4>
100042fc:	01000744 	movi	r4,29
10004300:	19000626 	beq	r3,r4,1000431c <__sflush_r+0x1c8>
10004304:	01000584 	movi	r4,22
10004308:	19000426 	beq	r3,r4,1000431c <__sflush_r+0x1c8>
1000430c:	88c0030b 	ldhu	r3,12(r17)
10004310:	18c01014 	ori	r3,r3,64
10004314:	88c0030d 	sth	r3,12(r17)
10004318:	003fc306 	br	10004228 <__alt_data_end+0xf8004228>
1000431c:	8880030b 	ldhu	r2,12(r17)
10004320:	88c00417 	ldw	r3,16(r17)
10004324:	88000115 	stw	zero,4(r17)
10004328:	10bdffcc 	andi	r2,r2,63487
1000432c:	8880030d 	sth	r2,12(r17)
10004330:	88c00015 	stw	r3,0(r17)
10004334:	003fb306 	br	10004204 <__alt_data_end+0xf8004204>
10004338:	98800017 	ldw	r2,0(r19)
1000433c:	103fea26 	beq	r2,zero,100042e8 <__alt_data_end+0xf80042e8>
10004340:	00c00744 	movi	r3,29
10004344:	10c00226 	beq	r2,r3,10004350 <__sflush_r+0x1fc>
10004348:	00c00584 	movi	r3,22
1000434c:	10c0031e 	bne	r2,r3,1000435c <__sflush_r+0x208>
10004350:	9c000015 	stw	r16,0(r19)
10004354:	0005883a 	mov	r2,zero
10004358:	003fb306 	br	10004228 <__alt_data_end+0xf8004228>
1000435c:	88c0030b 	ldhu	r3,12(r17)
10004360:	3005883a 	mov	r2,r6
10004364:	18c01014 	ori	r3,r3,64
10004368:	88c0030d 	sth	r3,12(r17)
1000436c:	003fae06 	br	10004228 <__alt_data_end+0xf8004228>

10004370 <_fflush_r>:
10004370:	defffd04 	addi	sp,sp,-12
10004374:	dc000115 	stw	r16,4(sp)
10004378:	dfc00215 	stw	ra,8(sp)
1000437c:	2021883a 	mov	r16,r4
10004380:	20000226 	beq	r4,zero,1000438c <_fflush_r+0x1c>
10004384:	20800e17 	ldw	r2,56(r4)
10004388:	10000c26 	beq	r2,zero,100043bc <_fflush_r+0x4c>
1000438c:	2880030f 	ldh	r2,12(r5)
10004390:	1000051e 	bne	r2,zero,100043a8 <_fflush_r+0x38>
10004394:	0005883a 	mov	r2,zero
10004398:	dfc00217 	ldw	ra,8(sp)
1000439c:	dc000117 	ldw	r16,4(sp)
100043a0:	dec00304 	addi	sp,sp,12
100043a4:	f800283a 	ret
100043a8:	8009883a 	mov	r4,r16
100043ac:	dfc00217 	ldw	ra,8(sp)
100043b0:	dc000117 	ldw	r16,4(sp)
100043b4:	dec00304 	addi	sp,sp,12
100043b8:	00041541 	jmpi	10004154 <__sflush_r>
100043bc:	d9400015 	stw	r5,0(sp)
100043c0:	000475c0 	call	1000475c <__sinit>
100043c4:	d9400017 	ldw	r5,0(sp)
100043c8:	003ff006 	br	1000438c <__alt_data_end+0xf800438c>

100043cc <fflush>:
100043cc:	20000526 	beq	r4,zero,100043e4 <fflush+0x18>
100043d0:	00840074 	movhi	r2,4097
100043d4:	1085d704 	addi	r2,r2,5980
100043d8:	200b883a 	mov	r5,r4
100043dc:	11000017 	ldw	r4,0(r2)
100043e0:	00043701 	jmpi	10004370 <_fflush_r>
100043e4:	00840074 	movhi	r2,4097
100043e8:	1085d604 	addi	r2,r2,5976
100043ec:	11000017 	ldw	r4,0(r2)
100043f0:	01440034 	movhi	r5,4096
100043f4:	2950dc04 	addi	r5,r5,17264
100043f8:	0004ca41 	jmpi	10004ca4 <_fwalk_reent>

100043fc <__fp_unlock>:
100043fc:	0005883a 	mov	r2,zero
10004400:	f800283a 	ret

10004404 <_cleanup_r>:
10004404:	01440074 	movhi	r5,4097
10004408:	2962b604 	addi	r5,r5,-29992
1000440c:	0004ca41 	jmpi	10004ca4 <_fwalk_reent>

10004410 <__sinit.part.1>:
10004410:	defff704 	addi	sp,sp,-36
10004414:	00c40034 	movhi	r3,4096
10004418:	dfc00815 	stw	ra,32(sp)
1000441c:	ddc00715 	stw	r23,28(sp)
10004420:	dd800615 	stw	r22,24(sp)
10004424:	dd400515 	stw	r21,20(sp)
10004428:	dd000415 	stw	r20,16(sp)
1000442c:	dcc00315 	stw	r19,12(sp)
10004430:	dc800215 	stw	r18,8(sp)
10004434:	dc400115 	stw	r17,4(sp)
10004438:	dc000015 	stw	r16,0(sp)
1000443c:	18d10104 	addi	r3,r3,17412
10004440:	24000117 	ldw	r16,4(r4)
10004444:	20c00f15 	stw	r3,60(r4)
10004448:	2080bb04 	addi	r2,r4,748
1000444c:	00c000c4 	movi	r3,3
10004450:	20c0b915 	stw	r3,740(r4)
10004454:	2080ba15 	stw	r2,744(r4)
10004458:	2000b815 	stw	zero,736(r4)
1000445c:	05c00204 	movi	r23,8
10004460:	00800104 	movi	r2,4
10004464:	2025883a 	mov	r18,r4
10004468:	b80d883a 	mov	r6,r23
1000446c:	81001704 	addi	r4,r16,92
10004470:	000b883a 	mov	r5,zero
10004474:	80000015 	stw	zero,0(r16)
10004478:	80000115 	stw	zero,4(r16)
1000447c:	80000215 	stw	zero,8(r16)
10004480:	8080030d 	sth	r2,12(r16)
10004484:	80001915 	stw	zero,100(r16)
10004488:	8000038d 	sth	zero,14(r16)
1000448c:	80000415 	stw	zero,16(r16)
10004490:	80000515 	stw	zero,20(r16)
10004494:	80000615 	stw	zero,24(r16)
10004498:	0005a380 	call	10005a38 <memset>
1000449c:	05840034 	movhi	r22,4096
100044a0:	94400217 	ldw	r17,8(r18)
100044a4:	05440034 	movhi	r21,4096
100044a8:	05040034 	movhi	r20,4096
100044ac:	04c40034 	movhi	r19,4096
100044b0:	b59b9204 	addi	r22,r22,28232
100044b4:	ad5ba904 	addi	r21,r21,28324
100044b8:	a51bc804 	addi	r20,r20,28448
100044bc:	9cdbdf04 	addi	r19,r19,28540
100044c0:	85800815 	stw	r22,32(r16)
100044c4:	85400915 	stw	r21,36(r16)
100044c8:	85000a15 	stw	r20,40(r16)
100044cc:	84c00b15 	stw	r19,44(r16)
100044d0:	84000715 	stw	r16,28(r16)
100044d4:	00800284 	movi	r2,10
100044d8:	8880030d 	sth	r2,12(r17)
100044dc:	00800044 	movi	r2,1
100044e0:	b80d883a 	mov	r6,r23
100044e4:	89001704 	addi	r4,r17,92
100044e8:	000b883a 	mov	r5,zero
100044ec:	88000015 	stw	zero,0(r17)
100044f0:	88000115 	stw	zero,4(r17)
100044f4:	88000215 	stw	zero,8(r17)
100044f8:	88001915 	stw	zero,100(r17)
100044fc:	8880038d 	sth	r2,14(r17)
10004500:	88000415 	stw	zero,16(r17)
10004504:	88000515 	stw	zero,20(r17)
10004508:	88000615 	stw	zero,24(r17)
1000450c:	0005a380 	call	10005a38 <memset>
10004510:	94000317 	ldw	r16,12(r18)
10004514:	00800484 	movi	r2,18
10004518:	8c400715 	stw	r17,28(r17)
1000451c:	8d800815 	stw	r22,32(r17)
10004520:	8d400915 	stw	r21,36(r17)
10004524:	8d000a15 	stw	r20,40(r17)
10004528:	8cc00b15 	stw	r19,44(r17)
1000452c:	8080030d 	sth	r2,12(r16)
10004530:	00800084 	movi	r2,2
10004534:	80000015 	stw	zero,0(r16)
10004538:	80000115 	stw	zero,4(r16)
1000453c:	80000215 	stw	zero,8(r16)
10004540:	80001915 	stw	zero,100(r16)
10004544:	8080038d 	sth	r2,14(r16)
10004548:	80000415 	stw	zero,16(r16)
1000454c:	80000515 	stw	zero,20(r16)
10004550:	80000615 	stw	zero,24(r16)
10004554:	b80d883a 	mov	r6,r23
10004558:	000b883a 	mov	r5,zero
1000455c:	81001704 	addi	r4,r16,92
10004560:	0005a380 	call	10005a38 <memset>
10004564:	00800044 	movi	r2,1
10004568:	84000715 	stw	r16,28(r16)
1000456c:	85800815 	stw	r22,32(r16)
10004570:	85400915 	stw	r21,36(r16)
10004574:	85000a15 	stw	r20,40(r16)
10004578:	84c00b15 	stw	r19,44(r16)
1000457c:	90800e15 	stw	r2,56(r18)
10004580:	dfc00817 	ldw	ra,32(sp)
10004584:	ddc00717 	ldw	r23,28(sp)
10004588:	dd800617 	ldw	r22,24(sp)
1000458c:	dd400517 	ldw	r21,20(sp)
10004590:	dd000417 	ldw	r20,16(sp)
10004594:	dcc00317 	ldw	r19,12(sp)
10004598:	dc800217 	ldw	r18,8(sp)
1000459c:	dc400117 	ldw	r17,4(sp)
100045a0:	dc000017 	ldw	r16,0(sp)
100045a4:	dec00904 	addi	sp,sp,36
100045a8:	f800283a 	ret

100045ac <__fp_lock>:
100045ac:	0005883a 	mov	r2,zero
100045b0:	f800283a 	ret

100045b4 <__sfmoreglue>:
100045b4:	defffc04 	addi	sp,sp,-16
100045b8:	dc800215 	stw	r18,8(sp)
100045bc:	2825883a 	mov	r18,r5
100045c0:	dc000015 	stw	r16,0(sp)
100045c4:	01401a04 	movi	r5,104
100045c8:	2021883a 	mov	r16,r4
100045cc:	913fffc4 	addi	r4,r18,-1
100045d0:	dfc00315 	stw	ra,12(sp)
100045d4:	dc400115 	stw	r17,4(sp)
100045d8:	000aa380 	call	1000aa38 <__mulsi3>
100045dc:	8009883a 	mov	r4,r16
100045e0:	11401d04 	addi	r5,r2,116
100045e4:	1023883a 	mov	r17,r2
100045e8:	00050000 	call	10005000 <_malloc_r>
100045ec:	1021883a 	mov	r16,r2
100045f0:	10000726 	beq	r2,zero,10004610 <__sfmoreglue+0x5c>
100045f4:	11000304 	addi	r4,r2,12
100045f8:	10000015 	stw	zero,0(r2)
100045fc:	14800115 	stw	r18,4(r2)
10004600:	11000215 	stw	r4,8(r2)
10004604:	89801a04 	addi	r6,r17,104
10004608:	000b883a 	mov	r5,zero
1000460c:	0005a380 	call	10005a38 <memset>
10004610:	8005883a 	mov	r2,r16
10004614:	dfc00317 	ldw	ra,12(sp)
10004618:	dc800217 	ldw	r18,8(sp)
1000461c:	dc400117 	ldw	r17,4(sp)
10004620:	dc000017 	ldw	r16,0(sp)
10004624:	dec00404 	addi	sp,sp,16
10004628:	f800283a 	ret

1000462c <__sfp>:
1000462c:	defffb04 	addi	sp,sp,-20
10004630:	dc000015 	stw	r16,0(sp)
10004634:	04040074 	movhi	r16,4097
10004638:	8405d604 	addi	r16,r16,5976
1000463c:	dcc00315 	stw	r19,12(sp)
10004640:	2027883a 	mov	r19,r4
10004644:	81000017 	ldw	r4,0(r16)
10004648:	dfc00415 	stw	ra,16(sp)
1000464c:	dc800215 	stw	r18,8(sp)
10004650:	20800e17 	ldw	r2,56(r4)
10004654:	dc400115 	stw	r17,4(sp)
10004658:	1000021e 	bne	r2,zero,10004664 <__sfp+0x38>
1000465c:	00044100 	call	10004410 <__sinit.part.1>
10004660:	81000017 	ldw	r4,0(r16)
10004664:	2480b804 	addi	r18,r4,736
10004668:	047fffc4 	movi	r17,-1
1000466c:	91000117 	ldw	r4,4(r18)
10004670:	94000217 	ldw	r16,8(r18)
10004674:	213fffc4 	addi	r4,r4,-1
10004678:	20000a16 	blt	r4,zero,100046a4 <__sfp+0x78>
1000467c:	8080030f 	ldh	r2,12(r16)
10004680:	10000c26 	beq	r2,zero,100046b4 <__sfp+0x88>
10004684:	80c01d04 	addi	r3,r16,116
10004688:	00000206 	br	10004694 <__sfp+0x68>
1000468c:	18bfe60f 	ldh	r2,-104(r3)
10004690:	10000826 	beq	r2,zero,100046b4 <__sfp+0x88>
10004694:	213fffc4 	addi	r4,r4,-1
10004698:	1c3ffd04 	addi	r16,r3,-12
1000469c:	18c01a04 	addi	r3,r3,104
100046a0:	247ffa1e 	bne	r4,r17,1000468c <__alt_data_end+0xf800468c>
100046a4:	90800017 	ldw	r2,0(r18)
100046a8:	10001d26 	beq	r2,zero,10004720 <__sfp+0xf4>
100046ac:	1025883a 	mov	r18,r2
100046b0:	003fee06 	br	1000466c <__alt_data_end+0xf800466c>
100046b4:	00bfffc4 	movi	r2,-1
100046b8:	8080038d 	sth	r2,14(r16)
100046bc:	00800044 	movi	r2,1
100046c0:	8080030d 	sth	r2,12(r16)
100046c4:	80001915 	stw	zero,100(r16)
100046c8:	80000015 	stw	zero,0(r16)
100046cc:	80000215 	stw	zero,8(r16)
100046d0:	80000115 	stw	zero,4(r16)
100046d4:	80000415 	stw	zero,16(r16)
100046d8:	80000515 	stw	zero,20(r16)
100046dc:	80000615 	stw	zero,24(r16)
100046e0:	01800204 	movi	r6,8
100046e4:	000b883a 	mov	r5,zero
100046e8:	81001704 	addi	r4,r16,92
100046ec:	0005a380 	call	10005a38 <memset>
100046f0:	8005883a 	mov	r2,r16
100046f4:	80000c15 	stw	zero,48(r16)
100046f8:	80000d15 	stw	zero,52(r16)
100046fc:	80001115 	stw	zero,68(r16)
10004700:	80001215 	stw	zero,72(r16)
10004704:	dfc00417 	ldw	ra,16(sp)
10004708:	dcc00317 	ldw	r19,12(sp)
1000470c:	dc800217 	ldw	r18,8(sp)
10004710:	dc400117 	ldw	r17,4(sp)
10004714:	dc000017 	ldw	r16,0(sp)
10004718:	dec00504 	addi	sp,sp,20
1000471c:	f800283a 	ret
10004720:	01400104 	movi	r5,4
10004724:	9809883a 	mov	r4,r19
10004728:	00045b40 	call	100045b4 <__sfmoreglue>
1000472c:	90800015 	stw	r2,0(r18)
10004730:	103fde1e 	bne	r2,zero,100046ac <__alt_data_end+0xf80046ac>
10004734:	00800304 	movi	r2,12
10004738:	98800015 	stw	r2,0(r19)
1000473c:	0005883a 	mov	r2,zero
10004740:	003ff006 	br	10004704 <__alt_data_end+0xf8004704>

10004744 <_cleanup>:
10004744:	00840074 	movhi	r2,4097
10004748:	1085d604 	addi	r2,r2,5976
1000474c:	11000017 	ldw	r4,0(r2)
10004750:	01440074 	movhi	r5,4097
10004754:	2962b604 	addi	r5,r5,-29992
10004758:	0004ca41 	jmpi	10004ca4 <_fwalk_reent>

1000475c <__sinit>:
1000475c:	20800e17 	ldw	r2,56(r4)
10004760:	10000126 	beq	r2,zero,10004768 <__sinit+0xc>
10004764:	f800283a 	ret
10004768:	00044101 	jmpi	10004410 <__sinit.part.1>

1000476c <__sfp_lock_acquire>:
1000476c:	f800283a 	ret

10004770 <__sfp_lock_release>:
10004770:	f800283a 	ret

10004774 <__sinit_lock_acquire>:
10004774:	f800283a 	ret

10004778 <__sinit_lock_release>:
10004778:	f800283a 	ret

1000477c <__fp_lock_all>:
1000477c:	00840074 	movhi	r2,4097
10004780:	1085d704 	addi	r2,r2,5980
10004784:	11000017 	ldw	r4,0(r2)
10004788:	01440034 	movhi	r5,4096
1000478c:	29516b04 	addi	r5,r5,17836
10004790:	0004be01 	jmpi	10004be0 <_fwalk>

10004794 <__fp_unlock_all>:
10004794:	00840074 	movhi	r2,4097
10004798:	1085d704 	addi	r2,r2,5980
1000479c:	11000017 	ldw	r4,0(r2)
100047a0:	01440034 	movhi	r5,4096
100047a4:	2950ff04 	addi	r5,r5,17404
100047a8:	0004be01 	jmpi	10004be0 <_fwalk>

100047ac <_malloc_trim_r>:
100047ac:	defffb04 	addi	sp,sp,-20
100047b0:	dcc00315 	stw	r19,12(sp)
100047b4:	04c40074 	movhi	r19,4097
100047b8:	dc800215 	stw	r18,8(sp)
100047bc:	dc400115 	stw	r17,4(sp)
100047c0:	dc000015 	stw	r16,0(sp)
100047c4:	dfc00415 	stw	ra,16(sp)
100047c8:	2821883a 	mov	r16,r5
100047cc:	9cc05104 	addi	r19,r19,324
100047d0:	2025883a 	mov	r18,r4
100047d4:	000d8a00 	call	1000d8a0 <__malloc_lock>
100047d8:	98800217 	ldw	r2,8(r19)
100047dc:	14400117 	ldw	r17,4(r2)
100047e0:	00bfff04 	movi	r2,-4
100047e4:	88a2703a 	and	r17,r17,r2
100047e8:	8c21c83a 	sub	r16,r17,r16
100047ec:	8403fbc4 	addi	r16,r16,4079
100047f0:	8020d33a 	srli	r16,r16,12
100047f4:	0083ffc4 	movi	r2,4095
100047f8:	843fffc4 	addi	r16,r16,-1
100047fc:	8020933a 	slli	r16,r16,12
10004800:	1400060e 	bge	r2,r16,1000481c <_malloc_trim_r+0x70>
10004804:	000b883a 	mov	r5,zero
10004808:	9009883a 	mov	r4,r18
1000480c:	0006df40 	call	10006df4 <_sbrk_r>
10004810:	98c00217 	ldw	r3,8(r19)
10004814:	1c47883a 	add	r3,r3,r17
10004818:	10c00a26 	beq	r2,r3,10004844 <_malloc_trim_r+0x98>
1000481c:	9009883a 	mov	r4,r18
10004820:	000d8c40 	call	1000d8c4 <__malloc_unlock>
10004824:	0005883a 	mov	r2,zero
10004828:	dfc00417 	ldw	ra,16(sp)
1000482c:	dcc00317 	ldw	r19,12(sp)
10004830:	dc800217 	ldw	r18,8(sp)
10004834:	dc400117 	ldw	r17,4(sp)
10004838:	dc000017 	ldw	r16,0(sp)
1000483c:	dec00504 	addi	sp,sp,20
10004840:	f800283a 	ret
10004844:	040bc83a 	sub	r5,zero,r16
10004848:	9009883a 	mov	r4,r18
1000484c:	0006df40 	call	10006df4 <_sbrk_r>
10004850:	00ffffc4 	movi	r3,-1
10004854:	10c00d26 	beq	r2,r3,1000488c <_malloc_trim_r+0xe0>
10004858:	00c40074 	movhi	r3,4097
1000485c:	18ccb004 	addi	r3,r3,12992
10004860:	18800017 	ldw	r2,0(r3)
10004864:	99000217 	ldw	r4,8(r19)
10004868:	8c23c83a 	sub	r17,r17,r16
1000486c:	8c400054 	ori	r17,r17,1
10004870:	1421c83a 	sub	r16,r2,r16
10004874:	24400115 	stw	r17,4(r4)
10004878:	9009883a 	mov	r4,r18
1000487c:	1c000015 	stw	r16,0(r3)
10004880:	000d8c40 	call	1000d8c4 <__malloc_unlock>
10004884:	00800044 	movi	r2,1
10004888:	003fe706 	br	10004828 <__alt_data_end+0xf8004828>
1000488c:	000b883a 	mov	r5,zero
10004890:	9009883a 	mov	r4,r18
10004894:	0006df40 	call	10006df4 <_sbrk_r>
10004898:	99000217 	ldw	r4,8(r19)
1000489c:	014003c4 	movi	r5,15
100048a0:	1107c83a 	sub	r3,r2,r4
100048a4:	28ffdd0e 	bge	r5,r3,1000481c <__alt_data_end+0xf800481c>
100048a8:	01440074 	movhi	r5,4097
100048ac:	2945d904 	addi	r5,r5,5988
100048b0:	29400017 	ldw	r5,0(r5)
100048b4:	18c00054 	ori	r3,r3,1
100048b8:	20c00115 	stw	r3,4(r4)
100048bc:	00c40074 	movhi	r3,4097
100048c0:	1145c83a 	sub	r2,r2,r5
100048c4:	18ccb004 	addi	r3,r3,12992
100048c8:	18800015 	stw	r2,0(r3)
100048cc:	003fd306 	br	1000481c <__alt_data_end+0xf800481c>

100048d0 <_free_r>:
100048d0:	28004126 	beq	r5,zero,100049d8 <_free_r+0x108>
100048d4:	defffd04 	addi	sp,sp,-12
100048d8:	dc400115 	stw	r17,4(sp)
100048dc:	dc000015 	stw	r16,0(sp)
100048e0:	2023883a 	mov	r17,r4
100048e4:	2821883a 	mov	r16,r5
100048e8:	dfc00215 	stw	ra,8(sp)
100048ec:	000d8a00 	call	1000d8a0 <__malloc_lock>
100048f0:	81ffff17 	ldw	r7,-4(r16)
100048f4:	00bfff84 	movi	r2,-2
100048f8:	01040074 	movhi	r4,4097
100048fc:	81bffe04 	addi	r6,r16,-8
10004900:	3884703a 	and	r2,r7,r2
10004904:	21005104 	addi	r4,r4,324
10004908:	308b883a 	add	r5,r6,r2
1000490c:	2a400117 	ldw	r9,4(r5)
10004910:	22000217 	ldw	r8,8(r4)
10004914:	00ffff04 	movi	r3,-4
10004918:	48c6703a 	and	r3,r9,r3
1000491c:	2a005726 	beq	r5,r8,10004a7c <_free_r+0x1ac>
10004920:	28c00115 	stw	r3,4(r5)
10004924:	39c0004c 	andi	r7,r7,1
10004928:	3800091e 	bne	r7,zero,10004950 <_free_r+0x80>
1000492c:	823ffe17 	ldw	r8,-8(r16)
10004930:	22400204 	addi	r9,r4,8
10004934:	320dc83a 	sub	r6,r6,r8
10004938:	31c00217 	ldw	r7,8(r6)
1000493c:	1205883a 	add	r2,r2,r8
10004940:	3a406526 	beq	r7,r9,10004ad8 <_free_r+0x208>
10004944:	32000317 	ldw	r8,12(r6)
10004948:	3a000315 	stw	r8,12(r7)
1000494c:	41c00215 	stw	r7,8(r8)
10004950:	28cf883a 	add	r7,r5,r3
10004954:	39c00117 	ldw	r7,4(r7)
10004958:	39c0004c 	andi	r7,r7,1
1000495c:	38003a26 	beq	r7,zero,10004a48 <_free_r+0x178>
10004960:	10c00054 	ori	r3,r2,1
10004964:	30c00115 	stw	r3,4(r6)
10004968:	3087883a 	add	r3,r6,r2
1000496c:	18800015 	stw	r2,0(r3)
10004970:	00c07fc4 	movi	r3,511
10004974:	18801936 	bltu	r3,r2,100049dc <_free_r+0x10c>
10004978:	1004d0fa 	srli	r2,r2,3
1000497c:	01c00044 	movi	r7,1
10004980:	21400117 	ldw	r5,4(r4)
10004984:	10c00044 	addi	r3,r2,1
10004988:	18c7883a 	add	r3,r3,r3
1000498c:	1005d0ba 	srai	r2,r2,2
10004990:	18c7883a 	add	r3,r3,r3
10004994:	18c7883a 	add	r3,r3,r3
10004998:	1907883a 	add	r3,r3,r4
1000499c:	3884983a 	sll	r2,r7,r2
100049a0:	19c00017 	ldw	r7,0(r3)
100049a4:	1a3ffe04 	addi	r8,r3,-8
100049a8:	1144b03a 	or	r2,r2,r5
100049ac:	32000315 	stw	r8,12(r6)
100049b0:	31c00215 	stw	r7,8(r6)
100049b4:	20800115 	stw	r2,4(r4)
100049b8:	19800015 	stw	r6,0(r3)
100049bc:	39800315 	stw	r6,12(r7)
100049c0:	8809883a 	mov	r4,r17
100049c4:	dfc00217 	ldw	ra,8(sp)
100049c8:	dc400117 	ldw	r17,4(sp)
100049cc:	dc000017 	ldw	r16,0(sp)
100049d0:	dec00304 	addi	sp,sp,12
100049d4:	000d8c41 	jmpi	1000d8c4 <__malloc_unlock>
100049d8:	f800283a 	ret
100049dc:	100ad27a 	srli	r5,r2,9
100049e0:	00c00104 	movi	r3,4
100049e4:	19404a36 	bltu	r3,r5,10004b10 <_free_r+0x240>
100049e8:	100ad1ba 	srli	r5,r2,6
100049ec:	28c00e44 	addi	r3,r5,57
100049f0:	18c7883a 	add	r3,r3,r3
100049f4:	29400e04 	addi	r5,r5,56
100049f8:	18c7883a 	add	r3,r3,r3
100049fc:	18c7883a 	add	r3,r3,r3
10004a00:	1909883a 	add	r4,r3,r4
10004a04:	20c00017 	ldw	r3,0(r4)
10004a08:	01c40074 	movhi	r7,4097
10004a0c:	213ffe04 	addi	r4,r4,-8
10004a10:	39c05104 	addi	r7,r7,324
10004a14:	20c04426 	beq	r4,r3,10004b28 <_free_r+0x258>
10004a18:	01ffff04 	movi	r7,-4
10004a1c:	19400117 	ldw	r5,4(r3)
10004a20:	29ca703a 	and	r5,r5,r7
10004a24:	1140022e 	bgeu	r2,r5,10004a30 <_free_r+0x160>
10004a28:	18c00217 	ldw	r3,8(r3)
10004a2c:	20fffb1e 	bne	r4,r3,10004a1c <__alt_data_end+0xf8004a1c>
10004a30:	19000317 	ldw	r4,12(r3)
10004a34:	31000315 	stw	r4,12(r6)
10004a38:	30c00215 	stw	r3,8(r6)
10004a3c:	21800215 	stw	r6,8(r4)
10004a40:	19800315 	stw	r6,12(r3)
10004a44:	003fde06 	br	100049c0 <__alt_data_end+0xf80049c0>
10004a48:	29c00217 	ldw	r7,8(r5)
10004a4c:	10c5883a 	add	r2,r2,r3
10004a50:	00c40074 	movhi	r3,4097
10004a54:	18c05304 	addi	r3,r3,332
10004a58:	38c03b26 	beq	r7,r3,10004b48 <_free_r+0x278>
10004a5c:	2a000317 	ldw	r8,12(r5)
10004a60:	11400054 	ori	r5,r2,1
10004a64:	3087883a 	add	r3,r6,r2
10004a68:	3a000315 	stw	r8,12(r7)
10004a6c:	41c00215 	stw	r7,8(r8)
10004a70:	31400115 	stw	r5,4(r6)
10004a74:	18800015 	stw	r2,0(r3)
10004a78:	003fbd06 	br	10004970 <__alt_data_end+0xf8004970>
10004a7c:	39c0004c 	andi	r7,r7,1
10004a80:	10c5883a 	add	r2,r2,r3
10004a84:	3800071e 	bne	r7,zero,10004aa4 <_free_r+0x1d4>
10004a88:	81fffe17 	ldw	r7,-8(r16)
10004a8c:	31cdc83a 	sub	r6,r6,r7
10004a90:	30c00317 	ldw	r3,12(r6)
10004a94:	31400217 	ldw	r5,8(r6)
10004a98:	11c5883a 	add	r2,r2,r7
10004a9c:	28c00315 	stw	r3,12(r5)
10004aa0:	19400215 	stw	r5,8(r3)
10004aa4:	10c00054 	ori	r3,r2,1
10004aa8:	30c00115 	stw	r3,4(r6)
10004aac:	00c40074 	movhi	r3,4097
10004ab0:	18c5da04 	addi	r3,r3,5992
10004ab4:	18c00017 	ldw	r3,0(r3)
10004ab8:	21800215 	stw	r6,8(r4)
10004abc:	10ffc036 	bltu	r2,r3,100049c0 <__alt_data_end+0xf80049c0>
10004ac0:	00840074 	movhi	r2,4097
10004ac4:	108ca704 	addi	r2,r2,12956
10004ac8:	11400017 	ldw	r5,0(r2)
10004acc:	8809883a 	mov	r4,r17
10004ad0:	00047ac0 	call	100047ac <_malloc_trim_r>
10004ad4:	003fba06 	br	100049c0 <__alt_data_end+0xf80049c0>
10004ad8:	28c9883a 	add	r4,r5,r3
10004adc:	21000117 	ldw	r4,4(r4)
10004ae0:	2100004c 	andi	r4,r4,1
10004ae4:	2000391e 	bne	r4,zero,10004bcc <_free_r+0x2fc>
10004ae8:	29c00217 	ldw	r7,8(r5)
10004aec:	29000317 	ldw	r4,12(r5)
10004af0:	1885883a 	add	r2,r3,r2
10004af4:	10c00054 	ori	r3,r2,1
10004af8:	39000315 	stw	r4,12(r7)
10004afc:	21c00215 	stw	r7,8(r4)
10004b00:	30c00115 	stw	r3,4(r6)
10004b04:	308d883a 	add	r6,r6,r2
10004b08:	30800015 	stw	r2,0(r6)
10004b0c:	003fac06 	br	100049c0 <__alt_data_end+0xf80049c0>
10004b10:	00c00504 	movi	r3,20
10004b14:	19401536 	bltu	r3,r5,10004b6c <_free_r+0x29c>
10004b18:	28c01704 	addi	r3,r5,92
10004b1c:	18c7883a 	add	r3,r3,r3
10004b20:	294016c4 	addi	r5,r5,91
10004b24:	003fb406 	br	100049f8 <__alt_data_end+0xf80049f8>
10004b28:	280bd0ba 	srai	r5,r5,2
10004b2c:	00c00044 	movi	r3,1
10004b30:	38800117 	ldw	r2,4(r7)
10004b34:	194a983a 	sll	r5,r3,r5
10004b38:	2007883a 	mov	r3,r4
10004b3c:	2884b03a 	or	r2,r5,r2
10004b40:	38800115 	stw	r2,4(r7)
10004b44:	003fbb06 	br	10004a34 <__alt_data_end+0xf8004a34>
10004b48:	21800515 	stw	r6,20(r4)
10004b4c:	21800415 	stw	r6,16(r4)
10004b50:	10c00054 	ori	r3,r2,1
10004b54:	31c00315 	stw	r7,12(r6)
10004b58:	31c00215 	stw	r7,8(r6)
10004b5c:	30c00115 	stw	r3,4(r6)
10004b60:	308d883a 	add	r6,r6,r2
10004b64:	30800015 	stw	r2,0(r6)
10004b68:	003f9506 	br	100049c0 <__alt_data_end+0xf80049c0>
10004b6c:	00c01504 	movi	r3,84
10004b70:	19400536 	bltu	r3,r5,10004b88 <_free_r+0x2b8>
10004b74:	100ad33a 	srli	r5,r2,12
10004b78:	28c01bc4 	addi	r3,r5,111
10004b7c:	18c7883a 	add	r3,r3,r3
10004b80:	29401b84 	addi	r5,r5,110
10004b84:	003f9c06 	br	100049f8 <__alt_data_end+0xf80049f8>
10004b88:	00c05504 	movi	r3,340
10004b8c:	19400536 	bltu	r3,r5,10004ba4 <_free_r+0x2d4>
10004b90:	100ad3fa 	srli	r5,r2,15
10004b94:	28c01e04 	addi	r3,r5,120
10004b98:	18c7883a 	add	r3,r3,r3
10004b9c:	29401dc4 	addi	r5,r5,119
10004ba0:	003f9506 	br	100049f8 <__alt_data_end+0xf80049f8>
10004ba4:	00c15504 	movi	r3,1364
10004ba8:	19400536 	bltu	r3,r5,10004bc0 <_free_r+0x2f0>
10004bac:	100ad4ba 	srli	r5,r2,18
10004bb0:	28c01f44 	addi	r3,r5,125
10004bb4:	18c7883a 	add	r3,r3,r3
10004bb8:	29401f04 	addi	r5,r5,124
10004bbc:	003f8e06 	br	100049f8 <__alt_data_end+0xf80049f8>
10004bc0:	00c03f84 	movi	r3,254
10004bc4:	01401f84 	movi	r5,126
10004bc8:	003f8b06 	br	100049f8 <__alt_data_end+0xf80049f8>
10004bcc:	10c00054 	ori	r3,r2,1
10004bd0:	30c00115 	stw	r3,4(r6)
10004bd4:	308d883a 	add	r6,r6,r2
10004bd8:	30800015 	stw	r2,0(r6)
10004bdc:	003f7806 	br	100049c0 <__alt_data_end+0xf80049c0>

10004be0 <_fwalk>:
10004be0:	defff704 	addi	sp,sp,-36
10004be4:	dd000415 	stw	r20,16(sp)
10004be8:	dfc00815 	stw	ra,32(sp)
10004bec:	ddc00715 	stw	r23,28(sp)
10004bf0:	dd800615 	stw	r22,24(sp)
10004bf4:	dd400515 	stw	r21,20(sp)
10004bf8:	dcc00315 	stw	r19,12(sp)
10004bfc:	dc800215 	stw	r18,8(sp)
10004c00:	dc400115 	stw	r17,4(sp)
10004c04:	dc000015 	stw	r16,0(sp)
10004c08:	2500b804 	addi	r20,r4,736
10004c0c:	a0002326 	beq	r20,zero,10004c9c <_fwalk+0xbc>
10004c10:	282b883a 	mov	r21,r5
10004c14:	002f883a 	mov	r23,zero
10004c18:	05800044 	movi	r22,1
10004c1c:	04ffffc4 	movi	r19,-1
10004c20:	a4400117 	ldw	r17,4(r20)
10004c24:	a4800217 	ldw	r18,8(r20)
10004c28:	8c7fffc4 	addi	r17,r17,-1
10004c2c:	88000d16 	blt	r17,zero,10004c64 <_fwalk+0x84>
10004c30:	94000304 	addi	r16,r18,12
10004c34:	94800384 	addi	r18,r18,14
10004c38:	8080000b 	ldhu	r2,0(r16)
10004c3c:	8c7fffc4 	addi	r17,r17,-1
10004c40:	813ffd04 	addi	r4,r16,-12
10004c44:	b080042e 	bgeu	r22,r2,10004c58 <_fwalk+0x78>
10004c48:	9080000f 	ldh	r2,0(r18)
10004c4c:	14c00226 	beq	r2,r19,10004c58 <_fwalk+0x78>
10004c50:	a83ee83a 	callr	r21
10004c54:	b8aeb03a 	or	r23,r23,r2
10004c58:	84001a04 	addi	r16,r16,104
10004c5c:	94801a04 	addi	r18,r18,104
10004c60:	8cfff51e 	bne	r17,r19,10004c38 <__alt_data_end+0xf8004c38>
10004c64:	a5000017 	ldw	r20,0(r20)
10004c68:	a03fed1e 	bne	r20,zero,10004c20 <__alt_data_end+0xf8004c20>
10004c6c:	b805883a 	mov	r2,r23
10004c70:	dfc00817 	ldw	ra,32(sp)
10004c74:	ddc00717 	ldw	r23,28(sp)
10004c78:	dd800617 	ldw	r22,24(sp)
10004c7c:	dd400517 	ldw	r21,20(sp)
10004c80:	dd000417 	ldw	r20,16(sp)
10004c84:	dcc00317 	ldw	r19,12(sp)
10004c88:	dc800217 	ldw	r18,8(sp)
10004c8c:	dc400117 	ldw	r17,4(sp)
10004c90:	dc000017 	ldw	r16,0(sp)
10004c94:	dec00904 	addi	sp,sp,36
10004c98:	f800283a 	ret
10004c9c:	002f883a 	mov	r23,zero
10004ca0:	003ff206 	br	10004c6c <__alt_data_end+0xf8004c6c>

10004ca4 <_fwalk_reent>:
10004ca4:	defff704 	addi	sp,sp,-36
10004ca8:	dd000415 	stw	r20,16(sp)
10004cac:	dfc00815 	stw	ra,32(sp)
10004cb0:	ddc00715 	stw	r23,28(sp)
10004cb4:	dd800615 	stw	r22,24(sp)
10004cb8:	dd400515 	stw	r21,20(sp)
10004cbc:	dcc00315 	stw	r19,12(sp)
10004cc0:	dc800215 	stw	r18,8(sp)
10004cc4:	dc400115 	stw	r17,4(sp)
10004cc8:	dc000015 	stw	r16,0(sp)
10004ccc:	2500b804 	addi	r20,r4,736
10004cd0:	a0002326 	beq	r20,zero,10004d60 <_fwalk_reent+0xbc>
10004cd4:	282b883a 	mov	r21,r5
10004cd8:	2027883a 	mov	r19,r4
10004cdc:	002f883a 	mov	r23,zero
10004ce0:	05800044 	movi	r22,1
10004ce4:	04bfffc4 	movi	r18,-1
10004ce8:	a4400117 	ldw	r17,4(r20)
10004cec:	a4000217 	ldw	r16,8(r20)
10004cf0:	8c7fffc4 	addi	r17,r17,-1
10004cf4:	88000c16 	blt	r17,zero,10004d28 <_fwalk_reent+0x84>
10004cf8:	84000304 	addi	r16,r16,12
10004cfc:	8080000b 	ldhu	r2,0(r16)
10004d00:	8c7fffc4 	addi	r17,r17,-1
10004d04:	817ffd04 	addi	r5,r16,-12
10004d08:	b080052e 	bgeu	r22,r2,10004d20 <_fwalk_reent+0x7c>
10004d0c:	8080008f 	ldh	r2,2(r16)
10004d10:	9809883a 	mov	r4,r19
10004d14:	14800226 	beq	r2,r18,10004d20 <_fwalk_reent+0x7c>
10004d18:	a83ee83a 	callr	r21
10004d1c:	b8aeb03a 	or	r23,r23,r2
10004d20:	84001a04 	addi	r16,r16,104
10004d24:	8cbff51e 	bne	r17,r18,10004cfc <__alt_data_end+0xf8004cfc>
10004d28:	a5000017 	ldw	r20,0(r20)
10004d2c:	a03fee1e 	bne	r20,zero,10004ce8 <__alt_data_end+0xf8004ce8>
10004d30:	b805883a 	mov	r2,r23
10004d34:	dfc00817 	ldw	ra,32(sp)
10004d38:	ddc00717 	ldw	r23,28(sp)
10004d3c:	dd800617 	ldw	r22,24(sp)
10004d40:	dd400517 	ldw	r21,20(sp)
10004d44:	dd000417 	ldw	r20,16(sp)
10004d48:	dcc00317 	ldw	r19,12(sp)
10004d4c:	dc800217 	ldw	r18,8(sp)
10004d50:	dc400117 	ldw	r17,4(sp)
10004d54:	dc000017 	ldw	r16,0(sp)
10004d58:	dec00904 	addi	sp,sp,36
10004d5c:	f800283a 	ret
10004d60:	002f883a 	mov	r23,zero
10004d64:	003ff206 	br	10004d30 <__alt_data_end+0xf8004d30>

10004d68 <_setlocale_r>:
10004d68:	30001b26 	beq	r6,zero,10004dd8 <_setlocale_r+0x70>
10004d6c:	01440074 	movhi	r5,4097
10004d70:	defffe04 	addi	sp,sp,-8
10004d74:	297e8904 	addi	r5,r5,-1500
10004d78:	3009883a 	mov	r4,r6
10004d7c:	dc000015 	stw	r16,0(sp)
10004d80:	dfc00115 	stw	ra,4(sp)
10004d84:	3021883a 	mov	r16,r6
10004d88:	0006f840 	call	10006f84 <strcmp>
10004d8c:	1000061e 	bne	r2,zero,10004da8 <_setlocale_r+0x40>
10004d90:	00840074 	movhi	r2,4097
10004d94:	10be8804 	addi	r2,r2,-1504
10004d98:	dfc00117 	ldw	ra,4(sp)
10004d9c:	dc000017 	ldw	r16,0(sp)
10004da0:	dec00204 	addi	sp,sp,8
10004da4:	f800283a 	ret
10004da8:	01440074 	movhi	r5,4097
10004dac:	297e8804 	addi	r5,r5,-1504
10004db0:	8009883a 	mov	r4,r16
10004db4:	0006f840 	call	10006f84 <strcmp>
10004db8:	103ff526 	beq	r2,zero,10004d90 <__alt_data_end+0xf8004d90>
10004dbc:	01440074 	movhi	r5,4097
10004dc0:	297e7304 	addi	r5,r5,-1588
10004dc4:	8009883a 	mov	r4,r16
10004dc8:	0006f840 	call	10006f84 <strcmp>
10004dcc:	103ff026 	beq	r2,zero,10004d90 <__alt_data_end+0xf8004d90>
10004dd0:	0005883a 	mov	r2,zero
10004dd4:	003ff006 	br	10004d98 <__alt_data_end+0xf8004d98>
10004dd8:	00840074 	movhi	r2,4097
10004ddc:	10be8804 	addi	r2,r2,-1504
10004de0:	f800283a 	ret

10004de4 <__locale_charset>:
10004de4:	00840074 	movhi	r2,4097
10004de8:	10803b04 	addi	r2,r2,236
10004dec:	f800283a 	ret

10004df0 <__locale_mb_cur_max>:
10004df0:	00840074 	movhi	r2,4097
10004df4:	1085d804 	addi	r2,r2,5984
10004df8:	10800017 	ldw	r2,0(r2)
10004dfc:	f800283a 	ret

10004e00 <__locale_msgcharset>:
10004e00:	00840074 	movhi	r2,4097
10004e04:	10803304 	addi	r2,r2,204
10004e08:	f800283a 	ret

10004e0c <__locale_cjk_lang>:
10004e0c:	0005883a 	mov	r2,zero
10004e10:	f800283a 	ret

10004e14 <_localeconv_r>:
10004e14:	00840074 	movhi	r2,4097
10004e18:	10804304 	addi	r2,r2,268
10004e1c:	f800283a 	ret

10004e20 <setlocale>:
10004e20:	00840074 	movhi	r2,4097
10004e24:	1085d704 	addi	r2,r2,5980
10004e28:	280d883a 	mov	r6,r5
10004e2c:	200b883a 	mov	r5,r4
10004e30:	11000017 	ldw	r4,0(r2)
10004e34:	0004d681 	jmpi	10004d68 <_setlocale_r>

10004e38 <localeconv>:
10004e38:	00840074 	movhi	r2,4097
10004e3c:	10804304 	addi	r2,r2,268
10004e40:	f800283a 	ret

10004e44 <__smakebuf_r>:
10004e44:	2880030b 	ldhu	r2,12(r5)
10004e48:	10c0008c 	andi	r3,r2,2
10004e4c:	1800411e 	bne	r3,zero,10004f54 <__smakebuf_r+0x110>
10004e50:	deffec04 	addi	sp,sp,-80
10004e54:	dc000f15 	stw	r16,60(sp)
10004e58:	2821883a 	mov	r16,r5
10004e5c:	2940038f 	ldh	r5,14(r5)
10004e60:	dc401015 	stw	r17,64(sp)
10004e64:	dfc01315 	stw	ra,76(sp)
10004e68:	dcc01215 	stw	r19,72(sp)
10004e6c:	dc801115 	stw	r18,68(sp)
10004e70:	2023883a 	mov	r17,r4
10004e74:	28001c16 	blt	r5,zero,10004ee8 <__smakebuf_r+0xa4>
10004e78:	d80d883a 	mov	r6,sp
10004e7c:	0008de40 	call	10008de4 <_fstat_r>
10004e80:	10001816 	blt	r2,zero,10004ee4 <__smakebuf_r+0xa0>
10004e84:	d8800117 	ldw	r2,4(sp)
10004e88:	00e00014 	movui	r3,32768
10004e8c:	10bc000c 	andi	r2,r2,61440
10004e90:	14c80020 	cmpeqi	r19,r2,8192
10004e94:	10c03726 	beq	r2,r3,10004f74 <__smakebuf_r+0x130>
10004e98:	80c0030b 	ldhu	r3,12(r16)
10004e9c:	18c20014 	ori	r3,r3,2048
10004ea0:	80c0030d 	sth	r3,12(r16)
10004ea4:	00c80004 	movi	r3,8192
10004ea8:	10c0521e 	bne	r2,r3,10004ff4 <__smakebuf_r+0x1b0>
10004eac:	8140038f 	ldh	r5,14(r16)
10004eb0:	8809883a 	mov	r4,r17
10004eb4:	00093080 	call	10009308 <_isatty_r>
10004eb8:	10004c26 	beq	r2,zero,10004fec <__smakebuf_r+0x1a8>
10004ebc:	8080030b 	ldhu	r2,12(r16)
10004ec0:	80c010c4 	addi	r3,r16,67
10004ec4:	80c00015 	stw	r3,0(r16)
10004ec8:	10800054 	ori	r2,r2,1
10004ecc:	8080030d 	sth	r2,12(r16)
10004ed0:	00800044 	movi	r2,1
10004ed4:	80c00415 	stw	r3,16(r16)
10004ed8:	80800515 	stw	r2,20(r16)
10004edc:	04810004 	movi	r18,1024
10004ee0:	00000706 	br	10004f00 <__smakebuf_r+0xbc>
10004ee4:	8080030b 	ldhu	r2,12(r16)
10004ee8:	10c0200c 	andi	r3,r2,128
10004eec:	18001f1e 	bne	r3,zero,10004f6c <__smakebuf_r+0x128>
10004ef0:	04810004 	movi	r18,1024
10004ef4:	10820014 	ori	r2,r2,2048
10004ef8:	8080030d 	sth	r2,12(r16)
10004efc:	0027883a 	mov	r19,zero
10004f00:	900b883a 	mov	r5,r18
10004f04:	8809883a 	mov	r4,r17
10004f08:	00050000 	call	10005000 <_malloc_r>
10004f0c:	10002c26 	beq	r2,zero,10004fc0 <__smakebuf_r+0x17c>
10004f10:	80c0030b 	ldhu	r3,12(r16)
10004f14:	01040034 	movhi	r4,4096
10004f18:	21110104 	addi	r4,r4,17412
10004f1c:	89000f15 	stw	r4,60(r17)
10004f20:	18c02014 	ori	r3,r3,128
10004f24:	80c0030d 	sth	r3,12(r16)
10004f28:	80800015 	stw	r2,0(r16)
10004f2c:	80800415 	stw	r2,16(r16)
10004f30:	84800515 	stw	r18,20(r16)
10004f34:	98001a1e 	bne	r19,zero,10004fa0 <__smakebuf_r+0x15c>
10004f38:	dfc01317 	ldw	ra,76(sp)
10004f3c:	dcc01217 	ldw	r19,72(sp)
10004f40:	dc801117 	ldw	r18,68(sp)
10004f44:	dc401017 	ldw	r17,64(sp)
10004f48:	dc000f17 	ldw	r16,60(sp)
10004f4c:	dec01404 	addi	sp,sp,80
10004f50:	f800283a 	ret
10004f54:	288010c4 	addi	r2,r5,67
10004f58:	28800015 	stw	r2,0(r5)
10004f5c:	28800415 	stw	r2,16(r5)
10004f60:	00800044 	movi	r2,1
10004f64:	28800515 	stw	r2,20(r5)
10004f68:	f800283a 	ret
10004f6c:	04801004 	movi	r18,64
10004f70:	003fe006 	br	10004ef4 <__alt_data_end+0xf8004ef4>
10004f74:	81000a17 	ldw	r4,40(r16)
10004f78:	00c40034 	movhi	r3,4096
10004f7c:	18dbc804 	addi	r3,r3,28448
10004f80:	20ffc51e 	bne	r4,r3,10004e98 <__alt_data_end+0xf8004e98>
10004f84:	8080030b 	ldhu	r2,12(r16)
10004f88:	04810004 	movi	r18,1024
10004f8c:	84801315 	stw	r18,76(r16)
10004f90:	1484b03a 	or	r2,r2,r18
10004f94:	8080030d 	sth	r2,12(r16)
10004f98:	0027883a 	mov	r19,zero
10004f9c:	003fd806 	br	10004f00 <__alt_data_end+0xf8004f00>
10004fa0:	8140038f 	ldh	r5,14(r16)
10004fa4:	8809883a 	mov	r4,r17
10004fa8:	00093080 	call	10009308 <_isatty_r>
10004fac:	103fe226 	beq	r2,zero,10004f38 <__alt_data_end+0xf8004f38>
10004fb0:	8080030b 	ldhu	r2,12(r16)
10004fb4:	10800054 	ori	r2,r2,1
10004fb8:	8080030d 	sth	r2,12(r16)
10004fbc:	003fde06 	br	10004f38 <__alt_data_end+0xf8004f38>
10004fc0:	8080030b 	ldhu	r2,12(r16)
10004fc4:	10c0800c 	andi	r3,r2,512
10004fc8:	183fdb1e 	bne	r3,zero,10004f38 <__alt_data_end+0xf8004f38>
10004fcc:	10800094 	ori	r2,r2,2
10004fd0:	80c010c4 	addi	r3,r16,67
10004fd4:	8080030d 	sth	r2,12(r16)
10004fd8:	00800044 	movi	r2,1
10004fdc:	80c00015 	stw	r3,0(r16)
10004fe0:	80c00415 	stw	r3,16(r16)
10004fe4:	80800515 	stw	r2,20(r16)
10004fe8:	003fd306 	br	10004f38 <__alt_data_end+0xf8004f38>
10004fec:	04810004 	movi	r18,1024
10004ff0:	003fc306 	br	10004f00 <__alt_data_end+0xf8004f00>
10004ff4:	0027883a 	mov	r19,zero
10004ff8:	04810004 	movi	r18,1024
10004ffc:	003fc006 	br	10004f00 <__alt_data_end+0xf8004f00>

10005000 <_malloc_r>:
10005000:	defff504 	addi	sp,sp,-44
10005004:	dc800315 	stw	r18,12(sp)
10005008:	dfc00a15 	stw	ra,40(sp)
1000500c:	df000915 	stw	fp,36(sp)
10005010:	ddc00815 	stw	r23,32(sp)
10005014:	dd800715 	stw	r22,28(sp)
10005018:	dd400615 	stw	r21,24(sp)
1000501c:	dd000515 	stw	r20,20(sp)
10005020:	dcc00415 	stw	r19,16(sp)
10005024:	dc400215 	stw	r17,8(sp)
10005028:	dc000115 	stw	r16,4(sp)
1000502c:	288002c4 	addi	r2,r5,11
10005030:	00c00584 	movi	r3,22
10005034:	2025883a 	mov	r18,r4
10005038:	18807f2e 	bgeu	r3,r2,10005238 <_malloc_r+0x238>
1000503c:	047ffe04 	movi	r17,-8
10005040:	1462703a 	and	r17,r2,r17
10005044:	8800a316 	blt	r17,zero,100052d4 <_malloc_r+0x2d4>
10005048:	8940a236 	bltu	r17,r5,100052d4 <_malloc_r+0x2d4>
1000504c:	000d8a00 	call	1000d8a0 <__malloc_lock>
10005050:	00807dc4 	movi	r2,503
10005054:	1441e92e 	bgeu	r2,r17,100057fc <_malloc_r+0x7fc>
10005058:	8804d27a 	srli	r2,r17,9
1000505c:	1000a126 	beq	r2,zero,100052e4 <_malloc_r+0x2e4>
10005060:	00c00104 	movi	r3,4
10005064:	18811e36 	bltu	r3,r2,100054e0 <_malloc_r+0x4e0>
10005068:	8804d1ba 	srli	r2,r17,6
1000506c:	12000e44 	addi	r8,r2,57
10005070:	11c00e04 	addi	r7,r2,56
10005074:	4209883a 	add	r4,r8,r8
10005078:	04c40074 	movhi	r19,4097
1000507c:	2109883a 	add	r4,r4,r4
10005080:	9cc05104 	addi	r19,r19,324
10005084:	2109883a 	add	r4,r4,r4
10005088:	9909883a 	add	r4,r19,r4
1000508c:	24000117 	ldw	r16,4(r4)
10005090:	213ffe04 	addi	r4,r4,-8
10005094:	24009726 	beq	r4,r16,100052f4 <_malloc_r+0x2f4>
10005098:	80800117 	ldw	r2,4(r16)
1000509c:	01bfff04 	movi	r6,-4
100050a0:	014003c4 	movi	r5,15
100050a4:	1184703a 	and	r2,r2,r6
100050a8:	1447c83a 	sub	r3,r2,r17
100050ac:	28c00716 	blt	r5,r3,100050cc <_malloc_r+0xcc>
100050b0:	1800920e 	bge	r3,zero,100052fc <_malloc_r+0x2fc>
100050b4:	84000317 	ldw	r16,12(r16)
100050b8:	24008e26 	beq	r4,r16,100052f4 <_malloc_r+0x2f4>
100050bc:	80800117 	ldw	r2,4(r16)
100050c0:	1184703a 	and	r2,r2,r6
100050c4:	1447c83a 	sub	r3,r2,r17
100050c8:	28fff90e 	bge	r5,r3,100050b0 <__alt_data_end+0xf80050b0>
100050cc:	3809883a 	mov	r4,r7
100050d0:	01840074 	movhi	r6,4097
100050d4:	9c000417 	ldw	r16,16(r19)
100050d8:	31805104 	addi	r6,r6,324
100050dc:	32000204 	addi	r8,r6,8
100050e0:	82013426 	beq	r16,r8,100055b4 <_malloc_r+0x5b4>
100050e4:	80c00117 	ldw	r3,4(r16)
100050e8:	00bfff04 	movi	r2,-4
100050ec:	188e703a 	and	r7,r3,r2
100050f0:	3c45c83a 	sub	r2,r7,r17
100050f4:	00c003c4 	movi	r3,15
100050f8:	18811f16 	blt	r3,r2,10005578 <_malloc_r+0x578>
100050fc:	32000515 	stw	r8,20(r6)
10005100:	32000415 	stw	r8,16(r6)
10005104:	10007f0e 	bge	r2,zero,10005304 <_malloc_r+0x304>
10005108:	00807fc4 	movi	r2,511
1000510c:	11c0fd36 	bltu	r2,r7,10005504 <_malloc_r+0x504>
10005110:	3806d0fa 	srli	r3,r7,3
10005114:	01c00044 	movi	r7,1
10005118:	30800117 	ldw	r2,4(r6)
1000511c:	19400044 	addi	r5,r3,1
10005120:	294b883a 	add	r5,r5,r5
10005124:	1807d0ba 	srai	r3,r3,2
10005128:	294b883a 	add	r5,r5,r5
1000512c:	294b883a 	add	r5,r5,r5
10005130:	298b883a 	add	r5,r5,r6
10005134:	38c6983a 	sll	r3,r7,r3
10005138:	29c00017 	ldw	r7,0(r5)
1000513c:	2a7ffe04 	addi	r9,r5,-8
10005140:	1886b03a 	or	r3,r3,r2
10005144:	82400315 	stw	r9,12(r16)
10005148:	81c00215 	stw	r7,8(r16)
1000514c:	30c00115 	stw	r3,4(r6)
10005150:	2c000015 	stw	r16,0(r5)
10005154:	3c000315 	stw	r16,12(r7)
10005158:	2005d0ba 	srai	r2,r4,2
1000515c:	01400044 	movi	r5,1
10005160:	288a983a 	sll	r5,r5,r2
10005164:	19406f36 	bltu	r3,r5,10005324 <_malloc_r+0x324>
10005168:	28c4703a 	and	r2,r5,r3
1000516c:	10000a1e 	bne	r2,zero,10005198 <_malloc_r+0x198>
10005170:	00bfff04 	movi	r2,-4
10005174:	294b883a 	add	r5,r5,r5
10005178:	2088703a 	and	r4,r4,r2
1000517c:	28c4703a 	and	r2,r5,r3
10005180:	21000104 	addi	r4,r4,4
10005184:	1000041e 	bne	r2,zero,10005198 <_malloc_r+0x198>
10005188:	294b883a 	add	r5,r5,r5
1000518c:	28c4703a 	and	r2,r5,r3
10005190:	21000104 	addi	r4,r4,4
10005194:	103ffc26 	beq	r2,zero,10005188 <__alt_data_end+0xf8005188>
10005198:	02bfff04 	movi	r10,-4
1000519c:	024003c4 	movi	r9,15
100051a0:	21800044 	addi	r6,r4,1
100051a4:	318d883a 	add	r6,r6,r6
100051a8:	318d883a 	add	r6,r6,r6
100051ac:	318d883a 	add	r6,r6,r6
100051b0:	998d883a 	add	r6,r19,r6
100051b4:	333ffe04 	addi	r12,r6,-8
100051b8:	2017883a 	mov	r11,r4
100051bc:	31800104 	addi	r6,r6,4
100051c0:	34000017 	ldw	r16,0(r6)
100051c4:	31fffd04 	addi	r7,r6,-12
100051c8:	81c0041e 	bne	r16,r7,100051dc <_malloc_r+0x1dc>
100051cc:	0000fb06 	br	100055bc <_malloc_r+0x5bc>
100051d0:	1801030e 	bge	r3,zero,100055e0 <_malloc_r+0x5e0>
100051d4:	84000317 	ldw	r16,12(r16)
100051d8:	81c0f826 	beq	r16,r7,100055bc <_malloc_r+0x5bc>
100051dc:	80800117 	ldw	r2,4(r16)
100051e0:	1284703a 	and	r2,r2,r10
100051e4:	1447c83a 	sub	r3,r2,r17
100051e8:	48fff90e 	bge	r9,r3,100051d0 <__alt_data_end+0xf80051d0>
100051ec:	80800317 	ldw	r2,12(r16)
100051f0:	81000217 	ldw	r4,8(r16)
100051f4:	89400054 	ori	r5,r17,1
100051f8:	81400115 	stw	r5,4(r16)
100051fc:	20800315 	stw	r2,12(r4)
10005200:	11000215 	stw	r4,8(r2)
10005204:	8463883a 	add	r17,r16,r17
10005208:	9c400515 	stw	r17,20(r19)
1000520c:	9c400415 	stw	r17,16(r19)
10005210:	18800054 	ori	r2,r3,1
10005214:	88800115 	stw	r2,4(r17)
10005218:	8a000315 	stw	r8,12(r17)
1000521c:	8a000215 	stw	r8,8(r17)
10005220:	88e3883a 	add	r17,r17,r3
10005224:	88c00015 	stw	r3,0(r17)
10005228:	9009883a 	mov	r4,r18
1000522c:	000d8c40 	call	1000d8c4 <__malloc_unlock>
10005230:	80800204 	addi	r2,r16,8
10005234:	00001b06 	br	100052a4 <_malloc_r+0x2a4>
10005238:	04400404 	movi	r17,16
1000523c:	89402536 	bltu	r17,r5,100052d4 <_malloc_r+0x2d4>
10005240:	000d8a00 	call	1000d8a0 <__malloc_lock>
10005244:	00800184 	movi	r2,6
10005248:	01000084 	movi	r4,2
1000524c:	04c40074 	movhi	r19,4097
10005250:	1085883a 	add	r2,r2,r2
10005254:	9cc05104 	addi	r19,r19,324
10005258:	1085883a 	add	r2,r2,r2
1000525c:	9885883a 	add	r2,r19,r2
10005260:	14000117 	ldw	r16,4(r2)
10005264:	10fffe04 	addi	r3,r2,-8
10005268:	80c0d926 	beq	r16,r3,100055d0 <_malloc_r+0x5d0>
1000526c:	80c00117 	ldw	r3,4(r16)
10005270:	81000317 	ldw	r4,12(r16)
10005274:	00bfff04 	movi	r2,-4
10005278:	1884703a 	and	r2,r3,r2
1000527c:	81400217 	ldw	r5,8(r16)
10005280:	8085883a 	add	r2,r16,r2
10005284:	10c00117 	ldw	r3,4(r2)
10005288:	29000315 	stw	r4,12(r5)
1000528c:	21400215 	stw	r5,8(r4)
10005290:	18c00054 	ori	r3,r3,1
10005294:	10c00115 	stw	r3,4(r2)
10005298:	9009883a 	mov	r4,r18
1000529c:	000d8c40 	call	1000d8c4 <__malloc_unlock>
100052a0:	80800204 	addi	r2,r16,8
100052a4:	dfc00a17 	ldw	ra,40(sp)
100052a8:	df000917 	ldw	fp,36(sp)
100052ac:	ddc00817 	ldw	r23,32(sp)
100052b0:	dd800717 	ldw	r22,28(sp)
100052b4:	dd400617 	ldw	r21,24(sp)
100052b8:	dd000517 	ldw	r20,20(sp)
100052bc:	dcc00417 	ldw	r19,16(sp)
100052c0:	dc800317 	ldw	r18,12(sp)
100052c4:	dc400217 	ldw	r17,8(sp)
100052c8:	dc000117 	ldw	r16,4(sp)
100052cc:	dec00b04 	addi	sp,sp,44
100052d0:	f800283a 	ret
100052d4:	00800304 	movi	r2,12
100052d8:	90800015 	stw	r2,0(r18)
100052dc:	0005883a 	mov	r2,zero
100052e0:	003ff006 	br	100052a4 <__alt_data_end+0xf80052a4>
100052e4:	01002004 	movi	r4,128
100052e8:	02001004 	movi	r8,64
100052ec:	01c00fc4 	movi	r7,63
100052f0:	003f6106 	br	10005078 <__alt_data_end+0xf8005078>
100052f4:	4009883a 	mov	r4,r8
100052f8:	003f7506 	br	100050d0 <__alt_data_end+0xf80050d0>
100052fc:	81000317 	ldw	r4,12(r16)
10005300:	003fde06 	br	1000527c <__alt_data_end+0xf800527c>
10005304:	81c5883a 	add	r2,r16,r7
10005308:	11400117 	ldw	r5,4(r2)
1000530c:	9009883a 	mov	r4,r18
10005310:	29400054 	ori	r5,r5,1
10005314:	11400115 	stw	r5,4(r2)
10005318:	000d8c40 	call	1000d8c4 <__malloc_unlock>
1000531c:	80800204 	addi	r2,r16,8
10005320:	003fe006 	br	100052a4 <__alt_data_end+0xf80052a4>
10005324:	9c000217 	ldw	r16,8(r19)
10005328:	00bfff04 	movi	r2,-4
1000532c:	85800117 	ldw	r22,4(r16)
10005330:	b0ac703a 	and	r22,r22,r2
10005334:	b4400336 	bltu	r22,r17,10005344 <_malloc_r+0x344>
10005338:	b445c83a 	sub	r2,r22,r17
1000533c:	00c003c4 	movi	r3,15
10005340:	18805d16 	blt	r3,r2,100054b8 <_malloc_r+0x4b8>
10005344:	05c40074 	movhi	r23,4097
10005348:	00840074 	movhi	r2,4097
1000534c:	108ca704 	addi	r2,r2,12956
10005350:	bdc5d904 	addi	r23,r23,5988
10005354:	15400017 	ldw	r21,0(r2)
10005358:	b8c00017 	ldw	r3,0(r23)
1000535c:	00bfffc4 	movi	r2,-1
10005360:	858d883a 	add	r6,r16,r22
10005364:	8d6b883a 	add	r21,r17,r21
10005368:	1880ea26 	beq	r3,r2,10005714 <_malloc_r+0x714>
1000536c:	ad4403c4 	addi	r21,r21,4111
10005370:	00bc0004 	movi	r2,-4096
10005374:	a8aa703a 	and	r21,r21,r2
10005378:	a80b883a 	mov	r5,r21
1000537c:	9009883a 	mov	r4,r18
10005380:	d9800015 	stw	r6,0(sp)
10005384:	0006df40 	call	10006df4 <_sbrk_r>
10005388:	1029883a 	mov	r20,r2
1000538c:	00bfffc4 	movi	r2,-1
10005390:	d9800017 	ldw	r6,0(sp)
10005394:	a080e826 	beq	r20,r2,10005738 <_malloc_r+0x738>
10005398:	a180a636 	bltu	r20,r6,10005634 <_malloc_r+0x634>
1000539c:	07040074 	movhi	fp,4097
100053a0:	e70cb004 	addi	fp,fp,12992
100053a4:	e0800017 	ldw	r2,0(fp)
100053a8:	a887883a 	add	r3,r21,r2
100053ac:	e0c00015 	stw	r3,0(fp)
100053b0:	3500e626 	beq	r6,r20,1000574c <_malloc_r+0x74c>
100053b4:	b9000017 	ldw	r4,0(r23)
100053b8:	00bfffc4 	movi	r2,-1
100053bc:	2080ee26 	beq	r4,r2,10005778 <_malloc_r+0x778>
100053c0:	a185c83a 	sub	r2,r20,r6
100053c4:	10c5883a 	add	r2,r2,r3
100053c8:	e0800015 	stw	r2,0(fp)
100053cc:	a0c001cc 	andi	r3,r20,7
100053d0:	1800bc26 	beq	r3,zero,100056c4 <_malloc_r+0x6c4>
100053d4:	a0e9c83a 	sub	r20,r20,r3
100053d8:	00840204 	movi	r2,4104
100053dc:	a5000204 	addi	r20,r20,8
100053e0:	10c7c83a 	sub	r3,r2,r3
100053e4:	a545883a 	add	r2,r20,r21
100053e8:	1083ffcc 	andi	r2,r2,4095
100053ec:	18abc83a 	sub	r21,r3,r2
100053f0:	a80b883a 	mov	r5,r21
100053f4:	9009883a 	mov	r4,r18
100053f8:	0006df40 	call	10006df4 <_sbrk_r>
100053fc:	00ffffc4 	movi	r3,-1
10005400:	10c0e126 	beq	r2,r3,10005788 <_malloc_r+0x788>
10005404:	1505c83a 	sub	r2,r2,r20
10005408:	1545883a 	add	r2,r2,r21
1000540c:	10800054 	ori	r2,r2,1
10005410:	e0c00017 	ldw	r3,0(fp)
10005414:	9d000215 	stw	r20,8(r19)
10005418:	a0800115 	stw	r2,4(r20)
1000541c:	a8c7883a 	add	r3,r21,r3
10005420:	e0c00015 	stw	r3,0(fp)
10005424:	84c00e26 	beq	r16,r19,10005460 <_malloc_r+0x460>
10005428:	018003c4 	movi	r6,15
1000542c:	3580a72e 	bgeu	r6,r22,100056cc <_malloc_r+0x6cc>
10005430:	81400117 	ldw	r5,4(r16)
10005434:	013ffe04 	movi	r4,-8
10005438:	b0bffd04 	addi	r2,r22,-12
1000543c:	1104703a 	and	r2,r2,r4
10005440:	2900004c 	andi	r4,r5,1
10005444:	2088b03a 	or	r4,r4,r2
10005448:	81000115 	stw	r4,4(r16)
1000544c:	01400144 	movi	r5,5
10005450:	8089883a 	add	r4,r16,r2
10005454:	21400115 	stw	r5,4(r4)
10005458:	21400215 	stw	r5,8(r4)
1000545c:	3080cd36 	bltu	r6,r2,10005794 <_malloc_r+0x794>
10005460:	00840074 	movhi	r2,4097
10005464:	108ca604 	addi	r2,r2,12952
10005468:	11000017 	ldw	r4,0(r2)
1000546c:	20c0012e 	bgeu	r4,r3,10005474 <_malloc_r+0x474>
10005470:	10c00015 	stw	r3,0(r2)
10005474:	00840074 	movhi	r2,4097
10005478:	108ca504 	addi	r2,r2,12948
1000547c:	11000017 	ldw	r4,0(r2)
10005480:	9c000217 	ldw	r16,8(r19)
10005484:	20c0012e 	bgeu	r4,r3,1000548c <_malloc_r+0x48c>
10005488:	10c00015 	stw	r3,0(r2)
1000548c:	80c00117 	ldw	r3,4(r16)
10005490:	00bfff04 	movi	r2,-4
10005494:	1886703a 	and	r3,r3,r2
10005498:	1c45c83a 	sub	r2,r3,r17
1000549c:	1c400236 	bltu	r3,r17,100054a8 <_malloc_r+0x4a8>
100054a0:	00c003c4 	movi	r3,15
100054a4:	18800416 	blt	r3,r2,100054b8 <_malloc_r+0x4b8>
100054a8:	9009883a 	mov	r4,r18
100054ac:	000d8c40 	call	1000d8c4 <__malloc_unlock>
100054b0:	0005883a 	mov	r2,zero
100054b4:	003f7b06 	br	100052a4 <__alt_data_end+0xf80052a4>
100054b8:	88c00054 	ori	r3,r17,1
100054bc:	80c00115 	stw	r3,4(r16)
100054c0:	8463883a 	add	r17,r16,r17
100054c4:	10800054 	ori	r2,r2,1
100054c8:	9c400215 	stw	r17,8(r19)
100054cc:	88800115 	stw	r2,4(r17)
100054d0:	9009883a 	mov	r4,r18
100054d4:	000d8c40 	call	1000d8c4 <__malloc_unlock>
100054d8:	80800204 	addi	r2,r16,8
100054dc:	003f7106 	br	100052a4 <__alt_data_end+0xf80052a4>
100054e0:	00c00504 	movi	r3,20
100054e4:	18804a2e 	bgeu	r3,r2,10005610 <_malloc_r+0x610>
100054e8:	00c01504 	movi	r3,84
100054ec:	18806e36 	bltu	r3,r2,100056a8 <_malloc_r+0x6a8>
100054f0:	8804d33a 	srli	r2,r17,12
100054f4:	12001bc4 	addi	r8,r2,111
100054f8:	11c01b84 	addi	r7,r2,110
100054fc:	4209883a 	add	r4,r8,r8
10005500:	003edd06 	br	10005078 <__alt_data_end+0xf8005078>
10005504:	3804d27a 	srli	r2,r7,9
10005508:	00c00104 	movi	r3,4
1000550c:	1880442e 	bgeu	r3,r2,10005620 <_malloc_r+0x620>
10005510:	00c00504 	movi	r3,20
10005514:	18808136 	bltu	r3,r2,1000571c <_malloc_r+0x71c>
10005518:	11401704 	addi	r5,r2,92
1000551c:	10c016c4 	addi	r3,r2,91
10005520:	294b883a 	add	r5,r5,r5
10005524:	294b883a 	add	r5,r5,r5
10005528:	294b883a 	add	r5,r5,r5
1000552c:	994b883a 	add	r5,r19,r5
10005530:	28800017 	ldw	r2,0(r5)
10005534:	01840074 	movhi	r6,4097
10005538:	297ffe04 	addi	r5,r5,-8
1000553c:	31805104 	addi	r6,r6,324
10005540:	28806526 	beq	r5,r2,100056d8 <_malloc_r+0x6d8>
10005544:	01bfff04 	movi	r6,-4
10005548:	10c00117 	ldw	r3,4(r2)
1000554c:	1986703a 	and	r3,r3,r6
10005550:	38c0022e 	bgeu	r7,r3,1000555c <_malloc_r+0x55c>
10005554:	10800217 	ldw	r2,8(r2)
10005558:	28bffb1e 	bne	r5,r2,10005548 <__alt_data_end+0xf8005548>
1000555c:	11400317 	ldw	r5,12(r2)
10005560:	98c00117 	ldw	r3,4(r19)
10005564:	81400315 	stw	r5,12(r16)
10005568:	80800215 	stw	r2,8(r16)
1000556c:	2c000215 	stw	r16,8(r5)
10005570:	14000315 	stw	r16,12(r2)
10005574:	003ef806 	br	10005158 <__alt_data_end+0xf8005158>
10005578:	88c00054 	ori	r3,r17,1
1000557c:	80c00115 	stw	r3,4(r16)
10005580:	8463883a 	add	r17,r16,r17
10005584:	34400515 	stw	r17,20(r6)
10005588:	34400415 	stw	r17,16(r6)
1000558c:	10c00054 	ori	r3,r2,1
10005590:	8a000315 	stw	r8,12(r17)
10005594:	8a000215 	stw	r8,8(r17)
10005598:	88c00115 	stw	r3,4(r17)
1000559c:	88a3883a 	add	r17,r17,r2
100055a0:	88800015 	stw	r2,0(r17)
100055a4:	9009883a 	mov	r4,r18
100055a8:	000d8c40 	call	1000d8c4 <__malloc_unlock>
100055ac:	80800204 	addi	r2,r16,8
100055b0:	003f3c06 	br	100052a4 <__alt_data_end+0xf80052a4>
100055b4:	30c00117 	ldw	r3,4(r6)
100055b8:	003ee706 	br	10005158 <__alt_data_end+0xf8005158>
100055bc:	5ac00044 	addi	r11,r11,1
100055c0:	588000cc 	andi	r2,r11,3
100055c4:	31800204 	addi	r6,r6,8
100055c8:	103efd1e 	bne	r2,zero,100051c0 <__alt_data_end+0xf80051c0>
100055cc:	00002406 	br	10005660 <_malloc_r+0x660>
100055d0:	14000317 	ldw	r16,12(r2)
100055d4:	143f251e 	bne	r2,r16,1000526c <__alt_data_end+0xf800526c>
100055d8:	21000084 	addi	r4,r4,2
100055dc:	003ebc06 	br	100050d0 <__alt_data_end+0xf80050d0>
100055e0:	8085883a 	add	r2,r16,r2
100055e4:	10c00117 	ldw	r3,4(r2)
100055e8:	81000317 	ldw	r4,12(r16)
100055ec:	81400217 	ldw	r5,8(r16)
100055f0:	18c00054 	ori	r3,r3,1
100055f4:	10c00115 	stw	r3,4(r2)
100055f8:	29000315 	stw	r4,12(r5)
100055fc:	21400215 	stw	r5,8(r4)
10005600:	9009883a 	mov	r4,r18
10005604:	000d8c40 	call	1000d8c4 <__malloc_unlock>
10005608:	80800204 	addi	r2,r16,8
1000560c:	003f2506 	br	100052a4 <__alt_data_end+0xf80052a4>
10005610:	12001704 	addi	r8,r2,92
10005614:	11c016c4 	addi	r7,r2,91
10005618:	4209883a 	add	r4,r8,r8
1000561c:	003e9606 	br	10005078 <__alt_data_end+0xf8005078>
10005620:	3804d1ba 	srli	r2,r7,6
10005624:	11400e44 	addi	r5,r2,57
10005628:	10c00e04 	addi	r3,r2,56
1000562c:	294b883a 	add	r5,r5,r5
10005630:	003fbc06 	br	10005524 <__alt_data_end+0xf8005524>
10005634:	84ff5926 	beq	r16,r19,1000539c <__alt_data_end+0xf800539c>
10005638:	00840074 	movhi	r2,4097
1000563c:	10805104 	addi	r2,r2,324
10005640:	14000217 	ldw	r16,8(r2)
10005644:	00bfff04 	movi	r2,-4
10005648:	80c00117 	ldw	r3,4(r16)
1000564c:	1886703a 	and	r3,r3,r2
10005650:	003f9106 	br	10005498 <__alt_data_end+0xf8005498>
10005654:	60800217 	ldw	r2,8(r12)
10005658:	213fffc4 	addi	r4,r4,-1
1000565c:	1300651e 	bne	r2,r12,100057f4 <_malloc_r+0x7f4>
10005660:	208000cc 	andi	r2,r4,3
10005664:	633ffe04 	addi	r12,r12,-8
10005668:	103ffa1e 	bne	r2,zero,10005654 <__alt_data_end+0xf8005654>
1000566c:	98800117 	ldw	r2,4(r19)
10005670:	0146303a 	nor	r3,zero,r5
10005674:	1884703a 	and	r2,r3,r2
10005678:	98800115 	stw	r2,4(r19)
1000567c:	294b883a 	add	r5,r5,r5
10005680:	117f2836 	bltu	r2,r5,10005324 <__alt_data_end+0xf8005324>
10005684:	283f2726 	beq	r5,zero,10005324 <__alt_data_end+0xf8005324>
10005688:	2886703a 	and	r3,r5,r2
1000568c:	5809883a 	mov	r4,r11
10005690:	183ec31e 	bne	r3,zero,100051a0 <__alt_data_end+0xf80051a0>
10005694:	294b883a 	add	r5,r5,r5
10005698:	2886703a 	and	r3,r5,r2
1000569c:	21000104 	addi	r4,r4,4
100056a0:	183ffc26 	beq	r3,zero,10005694 <__alt_data_end+0xf8005694>
100056a4:	003ebe06 	br	100051a0 <__alt_data_end+0xf80051a0>
100056a8:	00c05504 	movi	r3,340
100056ac:	18801236 	bltu	r3,r2,100056f8 <_malloc_r+0x6f8>
100056b0:	8804d3fa 	srli	r2,r17,15
100056b4:	12001e04 	addi	r8,r2,120
100056b8:	11c01dc4 	addi	r7,r2,119
100056bc:	4209883a 	add	r4,r8,r8
100056c0:	003e6d06 	br	10005078 <__alt_data_end+0xf8005078>
100056c4:	00c40004 	movi	r3,4096
100056c8:	003f4606 	br	100053e4 <__alt_data_end+0xf80053e4>
100056cc:	00800044 	movi	r2,1
100056d0:	a0800115 	stw	r2,4(r20)
100056d4:	003f7406 	br	100054a8 <__alt_data_end+0xf80054a8>
100056d8:	1805d0ba 	srai	r2,r3,2
100056dc:	01c00044 	movi	r7,1
100056e0:	30c00117 	ldw	r3,4(r6)
100056e4:	388e983a 	sll	r7,r7,r2
100056e8:	2805883a 	mov	r2,r5
100056ec:	38c6b03a 	or	r3,r7,r3
100056f0:	30c00115 	stw	r3,4(r6)
100056f4:	003f9b06 	br	10005564 <__alt_data_end+0xf8005564>
100056f8:	00c15504 	movi	r3,1364
100056fc:	18801a36 	bltu	r3,r2,10005768 <_malloc_r+0x768>
10005700:	8804d4ba 	srli	r2,r17,18
10005704:	12001f44 	addi	r8,r2,125
10005708:	11c01f04 	addi	r7,r2,124
1000570c:	4209883a 	add	r4,r8,r8
10005710:	003e5906 	br	10005078 <__alt_data_end+0xf8005078>
10005714:	ad400404 	addi	r21,r21,16
10005718:	003f1706 	br	10005378 <__alt_data_end+0xf8005378>
1000571c:	00c01504 	movi	r3,84
10005720:	18802336 	bltu	r3,r2,100057b0 <_malloc_r+0x7b0>
10005724:	3804d33a 	srli	r2,r7,12
10005728:	11401bc4 	addi	r5,r2,111
1000572c:	10c01b84 	addi	r3,r2,110
10005730:	294b883a 	add	r5,r5,r5
10005734:	003f7b06 	br	10005524 <__alt_data_end+0xf8005524>
10005738:	9c000217 	ldw	r16,8(r19)
1000573c:	00bfff04 	movi	r2,-4
10005740:	80c00117 	ldw	r3,4(r16)
10005744:	1886703a 	and	r3,r3,r2
10005748:	003f5306 	br	10005498 <__alt_data_end+0xf8005498>
1000574c:	3083ffcc 	andi	r2,r6,4095
10005750:	103f181e 	bne	r2,zero,100053b4 <__alt_data_end+0xf80053b4>
10005754:	99000217 	ldw	r4,8(r19)
10005758:	b545883a 	add	r2,r22,r21
1000575c:	10800054 	ori	r2,r2,1
10005760:	20800115 	stw	r2,4(r4)
10005764:	003f3e06 	br	10005460 <__alt_data_end+0xf8005460>
10005768:	01003f84 	movi	r4,254
1000576c:	02001fc4 	movi	r8,127
10005770:	01c01f84 	movi	r7,126
10005774:	003e4006 	br	10005078 <__alt_data_end+0xf8005078>
10005778:	00840074 	movhi	r2,4097
1000577c:	1085d904 	addi	r2,r2,5988
10005780:	15000015 	stw	r20,0(r2)
10005784:	003f1106 	br	100053cc <__alt_data_end+0xf80053cc>
10005788:	00800044 	movi	r2,1
1000578c:	002b883a 	mov	r21,zero
10005790:	003f1f06 	br	10005410 <__alt_data_end+0xf8005410>
10005794:	81400204 	addi	r5,r16,8
10005798:	9009883a 	mov	r4,r18
1000579c:	00048d00 	call	100048d0 <_free_r>
100057a0:	00840074 	movhi	r2,4097
100057a4:	108cb004 	addi	r2,r2,12992
100057a8:	10c00017 	ldw	r3,0(r2)
100057ac:	003f2c06 	br	10005460 <__alt_data_end+0xf8005460>
100057b0:	00c05504 	movi	r3,340
100057b4:	18800536 	bltu	r3,r2,100057cc <_malloc_r+0x7cc>
100057b8:	3804d3fa 	srli	r2,r7,15
100057bc:	11401e04 	addi	r5,r2,120
100057c0:	10c01dc4 	addi	r3,r2,119
100057c4:	294b883a 	add	r5,r5,r5
100057c8:	003f5606 	br	10005524 <__alt_data_end+0xf8005524>
100057cc:	00c15504 	movi	r3,1364
100057d0:	18800536 	bltu	r3,r2,100057e8 <_malloc_r+0x7e8>
100057d4:	3804d4ba 	srli	r2,r7,18
100057d8:	11401f44 	addi	r5,r2,125
100057dc:	10c01f04 	addi	r3,r2,124
100057e0:	294b883a 	add	r5,r5,r5
100057e4:	003f4f06 	br	10005524 <__alt_data_end+0xf8005524>
100057e8:	01403f84 	movi	r5,254
100057ec:	00c01f84 	movi	r3,126
100057f0:	003f4c06 	br	10005524 <__alt_data_end+0xf8005524>
100057f4:	98800117 	ldw	r2,4(r19)
100057f8:	003fa006 	br	1000567c <__alt_data_end+0xf800567c>
100057fc:	8808d0fa 	srli	r4,r17,3
10005800:	20800044 	addi	r2,r4,1
10005804:	1085883a 	add	r2,r2,r2
10005808:	003e9006 	br	1000524c <__alt_data_end+0xf800524c>

1000580c <memchr>:
1000580c:	208000cc 	andi	r2,r4,3
10005810:	280f883a 	mov	r7,r5
10005814:	10003426 	beq	r2,zero,100058e8 <memchr+0xdc>
10005818:	30bfffc4 	addi	r2,r6,-1
1000581c:	30001a26 	beq	r6,zero,10005888 <memchr+0x7c>
10005820:	20c00003 	ldbu	r3,0(r4)
10005824:	29803fcc 	andi	r6,r5,255
10005828:	30c0051e 	bne	r6,r3,10005840 <memchr+0x34>
1000582c:	00001806 	br	10005890 <memchr+0x84>
10005830:	10001526 	beq	r2,zero,10005888 <memchr+0x7c>
10005834:	20c00003 	ldbu	r3,0(r4)
10005838:	10bfffc4 	addi	r2,r2,-1
1000583c:	30c01426 	beq	r6,r3,10005890 <memchr+0x84>
10005840:	21000044 	addi	r4,r4,1
10005844:	20c000cc 	andi	r3,r4,3
10005848:	183ff91e 	bne	r3,zero,10005830 <__alt_data_end+0xf8005830>
1000584c:	020000c4 	movi	r8,3
10005850:	40801136 	bltu	r8,r2,10005898 <memchr+0x8c>
10005854:	10000c26 	beq	r2,zero,10005888 <memchr+0x7c>
10005858:	20c00003 	ldbu	r3,0(r4)
1000585c:	29403fcc 	andi	r5,r5,255
10005860:	28c00b26 	beq	r5,r3,10005890 <memchr+0x84>
10005864:	20c00044 	addi	r3,r4,1
10005868:	39803fcc 	andi	r6,r7,255
1000586c:	2089883a 	add	r4,r4,r2
10005870:	00000306 	br	10005880 <memchr+0x74>
10005874:	18c00044 	addi	r3,r3,1
10005878:	197fffc3 	ldbu	r5,-1(r3)
1000587c:	31400526 	beq	r6,r5,10005894 <memchr+0x88>
10005880:	1805883a 	mov	r2,r3
10005884:	20fffb1e 	bne	r4,r3,10005874 <__alt_data_end+0xf8005874>
10005888:	0005883a 	mov	r2,zero
1000588c:	f800283a 	ret
10005890:	2005883a 	mov	r2,r4
10005894:	f800283a 	ret
10005898:	28c03fcc 	andi	r3,r5,255
1000589c:	1812923a 	slli	r9,r3,8
100058a0:	02ffbff4 	movhi	r11,65279
100058a4:	02a02074 	movhi	r10,32897
100058a8:	48d2b03a 	or	r9,r9,r3
100058ac:	4806943a 	slli	r3,r9,16
100058b0:	5affbfc4 	addi	r11,r11,-257
100058b4:	52a02004 	addi	r10,r10,-32640
100058b8:	48d2b03a 	or	r9,r9,r3
100058bc:	20c00017 	ldw	r3,0(r4)
100058c0:	48c6f03a 	xor	r3,r9,r3
100058c4:	1acd883a 	add	r6,r3,r11
100058c8:	00c6303a 	nor	r3,zero,r3
100058cc:	30c6703a 	and	r3,r6,r3
100058d0:	1a86703a 	and	r3,r3,r10
100058d4:	183fe01e 	bne	r3,zero,10005858 <__alt_data_end+0xf8005858>
100058d8:	10bfff04 	addi	r2,r2,-4
100058dc:	21000104 	addi	r4,r4,4
100058e0:	40bff636 	bltu	r8,r2,100058bc <__alt_data_end+0xf80058bc>
100058e4:	003fdb06 	br	10005854 <__alt_data_end+0xf8005854>
100058e8:	3005883a 	mov	r2,r6
100058ec:	003fd706 	br	1000584c <__alt_data_end+0xf800584c>

100058f0 <memcpy>:
100058f0:	defffd04 	addi	sp,sp,-12
100058f4:	dfc00215 	stw	ra,8(sp)
100058f8:	dc400115 	stw	r17,4(sp)
100058fc:	dc000015 	stw	r16,0(sp)
10005900:	00c003c4 	movi	r3,15
10005904:	2005883a 	mov	r2,r4
10005908:	1980452e 	bgeu	r3,r6,10005a20 <memcpy+0x130>
1000590c:	2906b03a 	or	r3,r5,r4
10005910:	18c000cc 	andi	r3,r3,3
10005914:	1800441e 	bne	r3,zero,10005a28 <memcpy+0x138>
10005918:	347ffc04 	addi	r17,r6,-16
1000591c:	8822d13a 	srli	r17,r17,4
10005920:	28c00104 	addi	r3,r5,4
10005924:	23400104 	addi	r13,r4,4
10005928:	8820913a 	slli	r16,r17,4
1000592c:	2b000204 	addi	r12,r5,8
10005930:	22c00204 	addi	r11,r4,8
10005934:	84000504 	addi	r16,r16,20
10005938:	2a800304 	addi	r10,r5,12
1000593c:	22400304 	addi	r9,r4,12
10005940:	2c21883a 	add	r16,r5,r16
10005944:	2811883a 	mov	r8,r5
10005948:	200f883a 	mov	r7,r4
1000594c:	41000017 	ldw	r4,0(r8)
10005950:	1fc00017 	ldw	ra,0(r3)
10005954:	63c00017 	ldw	r15,0(r12)
10005958:	39000015 	stw	r4,0(r7)
1000595c:	53800017 	ldw	r14,0(r10)
10005960:	6fc00015 	stw	ra,0(r13)
10005964:	5bc00015 	stw	r15,0(r11)
10005968:	4b800015 	stw	r14,0(r9)
1000596c:	18c00404 	addi	r3,r3,16
10005970:	39c00404 	addi	r7,r7,16
10005974:	42000404 	addi	r8,r8,16
10005978:	6b400404 	addi	r13,r13,16
1000597c:	63000404 	addi	r12,r12,16
10005980:	5ac00404 	addi	r11,r11,16
10005984:	52800404 	addi	r10,r10,16
10005988:	4a400404 	addi	r9,r9,16
1000598c:	1c3fef1e 	bne	r3,r16,1000594c <__alt_data_end+0xf800594c>
10005990:	89c00044 	addi	r7,r17,1
10005994:	380e913a 	slli	r7,r7,4
10005998:	310003cc 	andi	r4,r6,15
1000599c:	02c000c4 	movi	r11,3
100059a0:	11c7883a 	add	r3,r2,r7
100059a4:	29cb883a 	add	r5,r5,r7
100059a8:	5900212e 	bgeu	r11,r4,10005a30 <memcpy+0x140>
100059ac:	1813883a 	mov	r9,r3
100059b0:	2811883a 	mov	r8,r5
100059b4:	200f883a 	mov	r7,r4
100059b8:	42800017 	ldw	r10,0(r8)
100059bc:	4a400104 	addi	r9,r9,4
100059c0:	39ffff04 	addi	r7,r7,-4
100059c4:	4abfff15 	stw	r10,-4(r9)
100059c8:	42000104 	addi	r8,r8,4
100059cc:	59fffa36 	bltu	r11,r7,100059b8 <__alt_data_end+0xf80059b8>
100059d0:	213fff04 	addi	r4,r4,-4
100059d4:	2008d0ba 	srli	r4,r4,2
100059d8:	318000cc 	andi	r6,r6,3
100059dc:	21000044 	addi	r4,r4,1
100059e0:	2109883a 	add	r4,r4,r4
100059e4:	2109883a 	add	r4,r4,r4
100059e8:	1907883a 	add	r3,r3,r4
100059ec:	290b883a 	add	r5,r5,r4
100059f0:	30000626 	beq	r6,zero,10005a0c <memcpy+0x11c>
100059f4:	198d883a 	add	r6,r3,r6
100059f8:	29c00003 	ldbu	r7,0(r5)
100059fc:	18c00044 	addi	r3,r3,1
10005a00:	29400044 	addi	r5,r5,1
10005a04:	19ffffc5 	stb	r7,-1(r3)
10005a08:	19bffb1e 	bne	r3,r6,100059f8 <__alt_data_end+0xf80059f8>
10005a0c:	dfc00217 	ldw	ra,8(sp)
10005a10:	dc400117 	ldw	r17,4(sp)
10005a14:	dc000017 	ldw	r16,0(sp)
10005a18:	dec00304 	addi	sp,sp,12
10005a1c:	f800283a 	ret
10005a20:	2007883a 	mov	r3,r4
10005a24:	003ff206 	br	100059f0 <__alt_data_end+0xf80059f0>
10005a28:	2007883a 	mov	r3,r4
10005a2c:	003ff106 	br	100059f4 <__alt_data_end+0xf80059f4>
10005a30:	200d883a 	mov	r6,r4
10005a34:	003fee06 	br	100059f0 <__alt_data_end+0xf80059f0>

10005a38 <memset>:
10005a38:	20c000cc 	andi	r3,r4,3
10005a3c:	2005883a 	mov	r2,r4
10005a40:	18004426 	beq	r3,zero,10005b54 <memset+0x11c>
10005a44:	31ffffc4 	addi	r7,r6,-1
10005a48:	30004026 	beq	r6,zero,10005b4c <memset+0x114>
10005a4c:	2813883a 	mov	r9,r5
10005a50:	200d883a 	mov	r6,r4
10005a54:	2007883a 	mov	r3,r4
10005a58:	00000406 	br	10005a6c <memset+0x34>
10005a5c:	3a3fffc4 	addi	r8,r7,-1
10005a60:	31800044 	addi	r6,r6,1
10005a64:	38003926 	beq	r7,zero,10005b4c <memset+0x114>
10005a68:	400f883a 	mov	r7,r8
10005a6c:	18c00044 	addi	r3,r3,1
10005a70:	32400005 	stb	r9,0(r6)
10005a74:	1a0000cc 	andi	r8,r3,3
10005a78:	403ff81e 	bne	r8,zero,10005a5c <__alt_data_end+0xf8005a5c>
10005a7c:	010000c4 	movi	r4,3
10005a80:	21c02d2e 	bgeu	r4,r7,10005b38 <memset+0x100>
10005a84:	29003fcc 	andi	r4,r5,255
10005a88:	200c923a 	slli	r6,r4,8
10005a8c:	3108b03a 	or	r4,r6,r4
10005a90:	200c943a 	slli	r6,r4,16
10005a94:	218cb03a 	or	r6,r4,r6
10005a98:	010003c4 	movi	r4,15
10005a9c:	21c0182e 	bgeu	r4,r7,10005b00 <memset+0xc8>
10005aa0:	3b3ffc04 	addi	r12,r7,-16
10005aa4:	6018d13a 	srli	r12,r12,4
10005aa8:	1a000104 	addi	r8,r3,4
10005aac:	1ac00204 	addi	r11,r3,8
10005ab0:	6008913a 	slli	r4,r12,4
10005ab4:	1a800304 	addi	r10,r3,12
10005ab8:	1813883a 	mov	r9,r3
10005abc:	21000504 	addi	r4,r4,20
10005ac0:	1909883a 	add	r4,r3,r4
10005ac4:	49800015 	stw	r6,0(r9)
10005ac8:	41800015 	stw	r6,0(r8)
10005acc:	59800015 	stw	r6,0(r11)
10005ad0:	51800015 	stw	r6,0(r10)
10005ad4:	42000404 	addi	r8,r8,16
10005ad8:	4a400404 	addi	r9,r9,16
10005adc:	5ac00404 	addi	r11,r11,16
10005ae0:	52800404 	addi	r10,r10,16
10005ae4:	413ff71e 	bne	r8,r4,10005ac4 <__alt_data_end+0xf8005ac4>
10005ae8:	63000044 	addi	r12,r12,1
10005aec:	6018913a 	slli	r12,r12,4
10005af0:	39c003cc 	andi	r7,r7,15
10005af4:	010000c4 	movi	r4,3
10005af8:	1b07883a 	add	r3,r3,r12
10005afc:	21c00e2e 	bgeu	r4,r7,10005b38 <memset+0x100>
10005b00:	1813883a 	mov	r9,r3
10005b04:	3811883a 	mov	r8,r7
10005b08:	010000c4 	movi	r4,3
10005b0c:	49800015 	stw	r6,0(r9)
10005b10:	423fff04 	addi	r8,r8,-4
10005b14:	4a400104 	addi	r9,r9,4
10005b18:	223ffc36 	bltu	r4,r8,10005b0c <__alt_data_end+0xf8005b0c>
10005b1c:	393fff04 	addi	r4,r7,-4
10005b20:	2008d0ba 	srli	r4,r4,2
10005b24:	39c000cc 	andi	r7,r7,3
10005b28:	21000044 	addi	r4,r4,1
10005b2c:	2109883a 	add	r4,r4,r4
10005b30:	2109883a 	add	r4,r4,r4
10005b34:	1907883a 	add	r3,r3,r4
10005b38:	38000526 	beq	r7,zero,10005b50 <memset+0x118>
10005b3c:	19cf883a 	add	r7,r3,r7
10005b40:	19400005 	stb	r5,0(r3)
10005b44:	18c00044 	addi	r3,r3,1
10005b48:	38fffd1e 	bne	r7,r3,10005b40 <__alt_data_end+0xf8005b40>
10005b4c:	f800283a 	ret
10005b50:	f800283a 	ret
10005b54:	2007883a 	mov	r3,r4
10005b58:	300f883a 	mov	r7,r6
10005b5c:	003fc706 	br	10005a7c <__alt_data_end+0xf8005a7c>

10005b60 <_Balloc>:
10005b60:	20801317 	ldw	r2,76(r4)
10005b64:	defffc04 	addi	sp,sp,-16
10005b68:	dc400115 	stw	r17,4(sp)
10005b6c:	dc000015 	stw	r16,0(sp)
10005b70:	dfc00315 	stw	ra,12(sp)
10005b74:	dc800215 	stw	r18,8(sp)
10005b78:	2023883a 	mov	r17,r4
10005b7c:	2821883a 	mov	r16,r5
10005b80:	10000f26 	beq	r2,zero,10005bc0 <_Balloc+0x60>
10005b84:	8407883a 	add	r3,r16,r16
10005b88:	18c7883a 	add	r3,r3,r3
10005b8c:	10c7883a 	add	r3,r2,r3
10005b90:	18800017 	ldw	r2,0(r3)
10005b94:	10001126 	beq	r2,zero,10005bdc <_Balloc+0x7c>
10005b98:	11000017 	ldw	r4,0(r2)
10005b9c:	19000015 	stw	r4,0(r3)
10005ba0:	10000415 	stw	zero,16(r2)
10005ba4:	10000315 	stw	zero,12(r2)
10005ba8:	dfc00317 	ldw	ra,12(sp)
10005bac:	dc800217 	ldw	r18,8(sp)
10005bb0:	dc400117 	ldw	r17,4(sp)
10005bb4:	dc000017 	ldw	r16,0(sp)
10005bb8:	dec00404 	addi	sp,sp,16
10005bbc:	f800283a 	ret
10005bc0:	01800844 	movi	r6,33
10005bc4:	01400104 	movi	r5,4
10005bc8:	00089fc0 	call	100089fc <_calloc_r>
10005bcc:	88801315 	stw	r2,76(r17)
10005bd0:	103fec1e 	bne	r2,zero,10005b84 <__alt_data_end+0xf8005b84>
10005bd4:	0005883a 	mov	r2,zero
10005bd8:	003ff306 	br	10005ba8 <__alt_data_end+0xf8005ba8>
10005bdc:	01400044 	movi	r5,1
10005be0:	2c24983a 	sll	r18,r5,r16
10005be4:	8809883a 	mov	r4,r17
10005be8:	91800144 	addi	r6,r18,5
10005bec:	318d883a 	add	r6,r6,r6
10005bf0:	318d883a 	add	r6,r6,r6
10005bf4:	00089fc0 	call	100089fc <_calloc_r>
10005bf8:	103ff626 	beq	r2,zero,10005bd4 <__alt_data_end+0xf8005bd4>
10005bfc:	14000115 	stw	r16,4(r2)
10005c00:	14800215 	stw	r18,8(r2)
10005c04:	003fe606 	br	10005ba0 <__alt_data_end+0xf8005ba0>

10005c08 <_Bfree>:
10005c08:	28000826 	beq	r5,zero,10005c2c <_Bfree+0x24>
10005c0c:	28c00117 	ldw	r3,4(r5)
10005c10:	20801317 	ldw	r2,76(r4)
10005c14:	18c7883a 	add	r3,r3,r3
10005c18:	18c7883a 	add	r3,r3,r3
10005c1c:	10c5883a 	add	r2,r2,r3
10005c20:	10c00017 	ldw	r3,0(r2)
10005c24:	28c00015 	stw	r3,0(r5)
10005c28:	11400015 	stw	r5,0(r2)
10005c2c:	f800283a 	ret

10005c30 <__multadd>:
10005c30:	defff704 	addi	sp,sp,-36
10005c34:	dc800215 	stw	r18,8(sp)
10005c38:	2c800417 	ldw	r18,16(r5)
10005c3c:	dd800615 	stw	r22,24(sp)
10005c40:	dd400515 	stw	r21,20(sp)
10005c44:	dd000415 	stw	r20,16(sp)
10005c48:	dcc00315 	stw	r19,12(sp)
10005c4c:	dc400115 	stw	r17,4(sp)
10005c50:	dc000015 	stw	r16,0(sp)
10005c54:	dfc00815 	stw	ra,32(sp)
10005c58:	ddc00715 	stw	r23,28(sp)
10005c5c:	2827883a 	mov	r19,r5
10005c60:	2029883a 	mov	r20,r4
10005c64:	3023883a 	mov	r17,r6
10005c68:	3821883a 	mov	r16,r7
10005c6c:	2d400504 	addi	r21,r5,20
10005c70:	002d883a 	mov	r22,zero
10005c74:	adc00017 	ldw	r23,0(r21)
10005c78:	880b883a 	mov	r5,r17
10005c7c:	ad400104 	addi	r21,r21,4
10005c80:	b93fffcc 	andi	r4,r23,65535
10005c84:	000aa380 	call	1000aa38 <__mulsi3>
10005c88:	b808d43a 	srli	r4,r23,16
10005c8c:	880b883a 	mov	r5,r17
10005c90:	1421883a 	add	r16,r2,r16
10005c94:	000aa380 	call	1000aa38 <__mulsi3>
10005c98:	800ed43a 	srli	r7,r16,16
10005c9c:	80ffffcc 	andi	r3,r16,65535
10005ca0:	b5800044 	addi	r22,r22,1
10005ca4:	11c5883a 	add	r2,r2,r7
10005ca8:	100e943a 	slli	r7,r2,16
10005cac:	1020d43a 	srli	r16,r2,16
10005cb0:	38c7883a 	add	r3,r7,r3
10005cb4:	a8ffff15 	stw	r3,-4(r21)
10005cb8:	b4bfee16 	blt	r22,r18,10005c74 <__alt_data_end+0xf8005c74>
10005cbc:	80000926 	beq	r16,zero,10005ce4 <__multadd+0xb4>
10005cc0:	98800217 	ldw	r2,8(r19)
10005cc4:	9080130e 	bge	r18,r2,10005d14 <__multadd+0xe4>
10005cc8:	90800144 	addi	r2,r18,5
10005ccc:	1085883a 	add	r2,r2,r2
10005cd0:	1085883a 	add	r2,r2,r2
10005cd4:	9885883a 	add	r2,r19,r2
10005cd8:	14000015 	stw	r16,0(r2)
10005cdc:	94800044 	addi	r18,r18,1
10005ce0:	9c800415 	stw	r18,16(r19)
10005ce4:	9805883a 	mov	r2,r19
10005ce8:	dfc00817 	ldw	ra,32(sp)
10005cec:	ddc00717 	ldw	r23,28(sp)
10005cf0:	dd800617 	ldw	r22,24(sp)
10005cf4:	dd400517 	ldw	r21,20(sp)
10005cf8:	dd000417 	ldw	r20,16(sp)
10005cfc:	dcc00317 	ldw	r19,12(sp)
10005d00:	dc800217 	ldw	r18,8(sp)
10005d04:	dc400117 	ldw	r17,4(sp)
10005d08:	dc000017 	ldw	r16,0(sp)
10005d0c:	dec00904 	addi	sp,sp,36
10005d10:	f800283a 	ret
10005d14:	99400117 	ldw	r5,4(r19)
10005d18:	a009883a 	mov	r4,r20
10005d1c:	29400044 	addi	r5,r5,1
10005d20:	0005b600 	call	10005b60 <_Balloc>
10005d24:	99800417 	ldw	r6,16(r19)
10005d28:	99400304 	addi	r5,r19,12
10005d2c:	11000304 	addi	r4,r2,12
10005d30:	31800084 	addi	r6,r6,2
10005d34:	318d883a 	add	r6,r6,r6
10005d38:	318d883a 	add	r6,r6,r6
10005d3c:	1023883a 	mov	r17,r2
10005d40:	00058f00 	call	100058f0 <memcpy>
10005d44:	98000a26 	beq	r19,zero,10005d70 <__multadd+0x140>
10005d48:	98c00117 	ldw	r3,4(r19)
10005d4c:	a0801317 	ldw	r2,76(r20)
10005d50:	18c7883a 	add	r3,r3,r3
10005d54:	18c7883a 	add	r3,r3,r3
10005d58:	10c5883a 	add	r2,r2,r3
10005d5c:	10c00017 	ldw	r3,0(r2)
10005d60:	98c00015 	stw	r3,0(r19)
10005d64:	14c00015 	stw	r19,0(r2)
10005d68:	8827883a 	mov	r19,r17
10005d6c:	003fd606 	br	10005cc8 <__alt_data_end+0xf8005cc8>
10005d70:	8827883a 	mov	r19,r17
10005d74:	003fd406 	br	10005cc8 <__alt_data_end+0xf8005cc8>

10005d78 <__s2b>:
10005d78:	defff904 	addi	sp,sp,-28
10005d7c:	dc400115 	stw	r17,4(sp)
10005d80:	dc000015 	stw	r16,0(sp)
10005d84:	2023883a 	mov	r17,r4
10005d88:	2821883a 	mov	r16,r5
10005d8c:	39000204 	addi	r4,r7,8
10005d90:	01400244 	movi	r5,9
10005d94:	dcc00315 	stw	r19,12(sp)
10005d98:	dc800215 	stw	r18,8(sp)
10005d9c:	dfc00615 	stw	ra,24(sp)
10005da0:	dd400515 	stw	r21,20(sp)
10005da4:	dd000415 	stw	r20,16(sp)
10005da8:	3825883a 	mov	r18,r7
10005dac:	3027883a 	mov	r19,r6
10005db0:	000a8840 	call	1000a884 <__divsi3>
10005db4:	00c00044 	movi	r3,1
10005db8:	000b883a 	mov	r5,zero
10005dbc:	1880030e 	bge	r3,r2,10005dcc <__s2b+0x54>
10005dc0:	18c7883a 	add	r3,r3,r3
10005dc4:	29400044 	addi	r5,r5,1
10005dc8:	18bffd16 	blt	r3,r2,10005dc0 <__alt_data_end+0xf8005dc0>
10005dcc:	8809883a 	mov	r4,r17
10005dd0:	0005b600 	call	10005b60 <_Balloc>
10005dd4:	d8c00717 	ldw	r3,28(sp)
10005dd8:	10c00515 	stw	r3,20(r2)
10005ddc:	00c00044 	movi	r3,1
10005de0:	10c00415 	stw	r3,16(r2)
10005de4:	00c00244 	movi	r3,9
10005de8:	1cc0210e 	bge	r3,r19,10005e70 <__s2b+0xf8>
10005dec:	80eb883a 	add	r21,r16,r3
10005df0:	a829883a 	mov	r20,r21
10005df4:	84e1883a 	add	r16,r16,r19
10005df8:	a1c00007 	ldb	r7,0(r20)
10005dfc:	01800284 	movi	r6,10
10005e00:	a5000044 	addi	r20,r20,1
10005e04:	100b883a 	mov	r5,r2
10005e08:	39fff404 	addi	r7,r7,-48
10005e0c:	8809883a 	mov	r4,r17
10005e10:	0005c300 	call	10005c30 <__multadd>
10005e14:	a43ff81e 	bne	r20,r16,10005df8 <__alt_data_end+0xf8005df8>
10005e18:	ace1883a 	add	r16,r21,r19
10005e1c:	843ffe04 	addi	r16,r16,-8
10005e20:	9c800a0e 	bge	r19,r18,10005e4c <__s2b+0xd4>
10005e24:	94e5c83a 	sub	r18,r18,r19
10005e28:	84a5883a 	add	r18,r16,r18
10005e2c:	81c00007 	ldb	r7,0(r16)
10005e30:	01800284 	movi	r6,10
10005e34:	84000044 	addi	r16,r16,1
10005e38:	100b883a 	mov	r5,r2
10005e3c:	39fff404 	addi	r7,r7,-48
10005e40:	8809883a 	mov	r4,r17
10005e44:	0005c300 	call	10005c30 <__multadd>
10005e48:	84bff81e 	bne	r16,r18,10005e2c <__alt_data_end+0xf8005e2c>
10005e4c:	dfc00617 	ldw	ra,24(sp)
10005e50:	dd400517 	ldw	r21,20(sp)
10005e54:	dd000417 	ldw	r20,16(sp)
10005e58:	dcc00317 	ldw	r19,12(sp)
10005e5c:	dc800217 	ldw	r18,8(sp)
10005e60:	dc400117 	ldw	r17,4(sp)
10005e64:	dc000017 	ldw	r16,0(sp)
10005e68:	dec00704 	addi	sp,sp,28
10005e6c:	f800283a 	ret
10005e70:	84000284 	addi	r16,r16,10
10005e74:	1827883a 	mov	r19,r3
10005e78:	003fe906 	br	10005e20 <__alt_data_end+0xf8005e20>

10005e7c <__hi0bits>:
10005e7c:	20bfffec 	andhi	r2,r4,65535
10005e80:	1000141e 	bne	r2,zero,10005ed4 <__hi0bits+0x58>
10005e84:	2008943a 	slli	r4,r4,16
10005e88:	00800404 	movi	r2,16
10005e8c:	20ffc02c 	andhi	r3,r4,65280
10005e90:	1800021e 	bne	r3,zero,10005e9c <__hi0bits+0x20>
10005e94:	2008923a 	slli	r4,r4,8
10005e98:	10800204 	addi	r2,r2,8
10005e9c:	20fc002c 	andhi	r3,r4,61440
10005ea0:	1800021e 	bne	r3,zero,10005eac <__hi0bits+0x30>
10005ea4:	2008913a 	slli	r4,r4,4
10005ea8:	10800104 	addi	r2,r2,4
10005eac:	20f0002c 	andhi	r3,r4,49152
10005eb0:	1800031e 	bne	r3,zero,10005ec0 <__hi0bits+0x44>
10005eb4:	2109883a 	add	r4,r4,r4
10005eb8:	10800084 	addi	r2,r2,2
10005ebc:	2109883a 	add	r4,r4,r4
10005ec0:	20000316 	blt	r4,zero,10005ed0 <__hi0bits+0x54>
10005ec4:	2110002c 	andhi	r4,r4,16384
10005ec8:	2000041e 	bne	r4,zero,10005edc <__hi0bits+0x60>
10005ecc:	00800804 	movi	r2,32
10005ed0:	f800283a 	ret
10005ed4:	0005883a 	mov	r2,zero
10005ed8:	003fec06 	br	10005e8c <__alt_data_end+0xf8005e8c>
10005edc:	10800044 	addi	r2,r2,1
10005ee0:	f800283a 	ret

10005ee4 <__lo0bits>:
10005ee4:	20c00017 	ldw	r3,0(r4)
10005ee8:	188001cc 	andi	r2,r3,7
10005eec:	10000826 	beq	r2,zero,10005f10 <__lo0bits+0x2c>
10005ef0:	1880004c 	andi	r2,r3,1
10005ef4:	1000211e 	bne	r2,zero,10005f7c <__lo0bits+0x98>
10005ef8:	1880008c 	andi	r2,r3,2
10005efc:	1000211e 	bne	r2,zero,10005f84 <__lo0bits+0xa0>
10005f00:	1806d0ba 	srli	r3,r3,2
10005f04:	00800084 	movi	r2,2
10005f08:	20c00015 	stw	r3,0(r4)
10005f0c:	f800283a 	ret
10005f10:	18bfffcc 	andi	r2,r3,65535
10005f14:	10001326 	beq	r2,zero,10005f64 <__lo0bits+0x80>
10005f18:	0005883a 	mov	r2,zero
10005f1c:	19403fcc 	andi	r5,r3,255
10005f20:	2800021e 	bne	r5,zero,10005f2c <__lo0bits+0x48>
10005f24:	1806d23a 	srli	r3,r3,8
10005f28:	10800204 	addi	r2,r2,8
10005f2c:	194003cc 	andi	r5,r3,15
10005f30:	2800021e 	bne	r5,zero,10005f3c <__lo0bits+0x58>
10005f34:	1806d13a 	srli	r3,r3,4
10005f38:	10800104 	addi	r2,r2,4
10005f3c:	194000cc 	andi	r5,r3,3
10005f40:	2800021e 	bne	r5,zero,10005f4c <__lo0bits+0x68>
10005f44:	1806d0ba 	srli	r3,r3,2
10005f48:	10800084 	addi	r2,r2,2
10005f4c:	1940004c 	andi	r5,r3,1
10005f50:	2800081e 	bne	r5,zero,10005f74 <__lo0bits+0x90>
10005f54:	1806d07a 	srli	r3,r3,1
10005f58:	1800051e 	bne	r3,zero,10005f70 <__lo0bits+0x8c>
10005f5c:	00800804 	movi	r2,32
10005f60:	f800283a 	ret
10005f64:	1806d43a 	srli	r3,r3,16
10005f68:	00800404 	movi	r2,16
10005f6c:	003feb06 	br	10005f1c <__alt_data_end+0xf8005f1c>
10005f70:	10800044 	addi	r2,r2,1
10005f74:	20c00015 	stw	r3,0(r4)
10005f78:	f800283a 	ret
10005f7c:	0005883a 	mov	r2,zero
10005f80:	f800283a 	ret
10005f84:	1806d07a 	srli	r3,r3,1
10005f88:	00800044 	movi	r2,1
10005f8c:	20c00015 	stw	r3,0(r4)
10005f90:	f800283a 	ret

10005f94 <__i2b>:
10005f94:	defffd04 	addi	sp,sp,-12
10005f98:	dc000015 	stw	r16,0(sp)
10005f9c:	04000044 	movi	r16,1
10005fa0:	dc400115 	stw	r17,4(sp)
10005fa4:	2823883a 	mov	r17,r5
10005fa8:	800b883a 	mov	r5,r16
10005fac:	dfc00215 	stw	ra,8(sp)
10005fb0:	0005b600 	call	10005b60 <_Balloc>
10005fb4:	14400515 	stw	r17,20(r2)
10005fb8:	14000415 	stw	r16,16(r2)
10005fbc:	dfc00217 	ldw	ra,8(sp)
10005fc0:	dc400117 	ldw	r17,4(sp)
10005fc4:	dc000017 	ldw	r16,0(sp)
10005fc8:	dec00304 	addi	sp,sp,12
10005fcc:	f800283a 	ret

10005fd0 <__multiply>:
10005fd0:	deffef04 	addi	sp,sp,-68
10005fd4:	dc400815 	stw	r17,32(sp)
10005fd8:	dc000715 	stw	r16,28(sp)
10005fdc:	34400417 	ldw	r17,16(r6)
10005fe0:	2c000417 	ldw	r16,16(r5)
10005fe4:	dd800d15 	stw	r22,52(sp)
10005fe8:	dc800915 	stw	r18,36(sp)
10005fec:	dfc01015 	stw	ra,64(sp)
10005ff0:	df000f15 	stw	fp,60(sp)
10005ff4:	ddc00e15 	stw	r23,56(sp)
10005ff8:	dd400c15 	stw	r21,48(sp)
10005ffc:	dd000b15 	stw	r20,44(sp)
10006000:	dcc00a15 	stw	r19,40(sp)
10006004:	2825883a 	mov	r18,r5
10006008:	302d883a 	mov	r22,r6
1000600c:	8440050e 	bge	r16,r17,10006024 <__multiply+0x54>
10006010:	8007883a 	mov	r3,r16
10006014:	3025883a 	mov	r18,r6
10006018:	8821883a 	mov	r16,r17
1000601c:	282d883a 	mov	r22,r5
10006020:	1823883a 	mov	r17,r3
10006024:	90800217 	ldw	r2,8(r18)
10006028:	8447883a 	add	r3,r16,r17
1000602c:	d8c00215 	stw	r3,8(sp)
10006030:	91400117 	ldw	r5,4(r18)
10006034:	10c0010e 	bge	r2,r3,1000603c <__multiply+0x6c>
10006038:	29400044 	addi	r5,r5,1
1000603c:	0005b600 	call	10005b60 <_Balloc>
10006040:	d8c00217 	ldw	r3,8(sp)
10006044:	d8800615 	stw	r2,24(sp)
10006048:	18eb883a 	add	r21,r3,r3
1000604c:	ad6b883a 	add	r21,r21,r21
10006050:	10c00504 	addi	r3,r2,20
10006054:	1d6b883a 	add	r21,r3,r21
10006058:	d8c00115 	stw	r3,4(sp)
1000605c:	dd400315 	stw	r21,12(sp)
10006060:	1805883a 	mov	r2,r3
10006064:	1d40042e 	bgeu	r3,r21,10006078 <__multiply+0xa8>
10006068:	d8c00317 	ldw	r3,12(sp)
1000606c:	10000015 	stw	zero,0(r2)
10006070:	10800104 	addi	r2,r2,4
10006074:	10fffc36 	bltu	r2,r3,10006068 <__alt_data_end+0xf8006068>
10006078:	8c63883a 	add	r17,r17,r17
1000607c:	b5800504 	addi	r22,r22,20
10006080:	8c63883a 	add	r17,r17,r17
10006084:	94800504 	addi	r18,r18,20
10006088:	8421883a 	add	r16,r16,r16
1000608c:	b463883a 	add	r17,r22,r17
10006090:	8421883a 	add	r16,r16,r16
10006094:	dd800015 	stw	r22,0(sp)
10006098:	dc800415 	stw	r18,16(sp)
1000609c:	dc400515 	stw	r17,20(sp)
100060a0:	9429883a 	add	r20,r18,r16
100060a4:	b4404f2e 	bgeu	r22,r17,100061e4 <__multiply+0x214>
100060a8:	d8c00017 	ldw	r3,0(sp)
100060ac:	1c800017 	ldw	r18,0(r3)
100060b0:	947fffcc 	andi	r17,r18,65535
100060b4:	88001e26 	beq	r17,zero,10006130 <__multiply+0x160>
100060b8:	dd800117 	ldw	r22,4(sp)
100060bc:	dd400417 	ldw	r21,16(sp)
100060c0:	0027883a 	mov	r19,zero
100060c4:	ac800017 	ldw	r18,0(r21)
100060c8:	b4000017 	ldw	r16,0(r22)
100060cc:	880b883a 	mov	r5,r17
100060d0:	913fffcc 	andi	r4,r18,65535
100060d4:	000aa380 	call	1000aa38 <__mulsi3>
100060d8:	9008d43a 	srli	r4,r18,16
100060dc:	84bfffcc 	andi	r18,r16,65535
100060e0:	1485883a 	add	r2,r2,r18
100060e4:	14e5883a 	add	r18,r2,r19
100060e8:	8020d43a 	srli	r16,r16,16
100060ec:	9026d43a 	srli	r19,r18,16
100060f0:	880b883a 	mov	r5,r17
100060f4:	000aa380 	call	1000aa38 <__mulsi3>
100060f8:	1405883a 	add	r2,r2,r16
100060fc:	14e1883a 	add	r16,r2,r19
10006100:	90ffffcc 	andi	r3,r18,65535
10006104:	8024943a 	slli	r18,r16,16
10006108:	ad400104 	addi	r21,r21,4
1000610c:	b005883a 	mov	r2,r22
10006110:	90c6b03a 	or	r3,r18,r3
10006114:	b0c00015 	stw	r3,0(r22)
10006118:	8026d43a 	srli	r19,r16,16
1000611c:	b5800104 	addi	r22,r22,4
10006120:	ad3fe836 	bltu	r21,r20,100060c4 <__alt_data_end+0xf80060c4>
10006124:	d8c00017 	ldw	r3,0(sp)
10006128:	14c00115 	stw	r19,4(r2)
1000612c:	1c800017 	ldw	r18,0(r3)
10006130:	9024d43a 	srli	r18,r18,16
10006134:	90002226 	beq	r18,zero,100061c0 <__multiply+0x1f0>
10006138:	d8c00117 	ldw	r3,4(sp)
1000613c:	dd800417 	ldw	r22,16(sp)
10006140:	002f883a 	mov	r23,zero
10006144:	1f000017 	ldw	fp,0(r3)
10006148:	1823883a 	mov	r17,r3
1000614c:	182b883a 	mov	r21,r3
10006150:	e021883a 	mov	r16,fp
10006154:	00000106 	br	1000615c <__multiply+0x18c>
10006158:	982b883a 	mov	r21,r19
1000615c:	b100000b 	ldhu	r4,0(r22)
10006160:	8020d43a 	srli	r16,r16,16
10006164:	900b883a 	mov	r5,r18
10006168:	000aa380 	call	1000aa38 <__mulsi3>
1000616c:	1405883a 	add	r2,r2,r16
10006170:	15ef883a 	add	r23,r2,r23
10006174:	b804943a 	slli	r2,r23,16
10006178:	e0ffffcc 	andi	r3,fp,65535
1000617c:	8c400104 	addi	r17,r17,4
10006180:	10c6b03a 	or	r3,r2,r3
10006184:	88ffff15 	stw	r3,-4(r17)
10006188:	b5800104 	addi	r22,r22,4
1000618c:	b13fff17 	ldw	r4,-4(r22)
10006190:	acc00104 	addi	r19,r21,4
10006194:	900b883a 	mov	r5,r18
10006198:	2008d43a 	srli	r4,r4,16
1000619c:	9c000017 	ldw	r16,0(r19)
100061a0:	000aa380 	call	1000aa38 <__mulsi3>
100061a4:	b806d43a 	srli	r3,r23,16
100061a8:	813fffcc 	andi	r4,r16,65535
100061ac:	1105883a 	add	r2,r2,r4
100061b0:	10f9883a 	add	fp,r2,r3
100061b4:	e02ed43a 	srli	r23,fp,16
100061b8:	b53fe736 	bltu	r22,r20,10006158 <__alt_data_end+0xf8006158>
100061bc:	af000115 	stw	fp,4(r21)
100061c0:	d8c00017 	ldw	r3,0(sp)
100061c4:	d9000517 	ldw	r4,20(sp)
100061c8:	18c00104 	addi	r3,r3,4
100061cc:	d8c00015 	stw	r3,0(sp)
100061d0:	d8c00117 	ldw	r3,4(sp)
100061d4:	18c00104 	addi	r3,r3,4
100061d8:	d8c00115 	stw	r3,4(sp)
100061dc:	d8c00017 	ldw	r3,0(sp)
100061e0:	193fb136 	bltu	r3,r4,100060a8 <__alt_data_end+0xf80060a8>
100061e4:	d8c00217 	ldw	r3,8(sp)
100061e8:	00c00c0e 	bge	zero,r3,1000621c <__multiply+0x24c>
100061ec:	d8c00317 	ldw	r3,12(sp)
100061f0:	18bfff17 	ldw	r2,-4(r3)
100061f4:	1d7fff04 	addi	r21,r3,-4
100061f8:	10000326 	beq	r2,zero,10006208 <__multiply+0x238>
100061fc:	00000706 	br	1000621c <__multiply+0x24c>
10006200:	a8800017 	ldw	r2,0(r21)
10006204:	1000051e 	bne	r2,zero,1000621c <__multiply+0x24c>
10006208:	d8c00217 	ldw	r3,8(sp)
1000620c:	ad7fff04 	addi	r21,r21,-4
10006210:	18ffffc4 	addi	r3,r3,-1
10006214:	d8c00215 	stw	r3,8(sp)
10006218:	183ff91e 	bne	r3,zero,10006200 <__alt_data_end+0xf8006200>
1000621c:	d8c00617 	ldw	r3,24(sp)
10006220:	d9000217 	ldw	r4,8(sp)
10006224:	1805883a 	mov	r2,r3
10006228:	19000415 	stw	r4,16(r3)
1000622c:	dfc01017 	ldw	ra,64(sp)
10006230:	df000f17 	ldw	fp,60(sp)
10006234:	ddc00e17 	ldw	r23,56(sp)
10006238:	dd800d17 	ldw	r22,52(sp)
1000623c:	dd400c17 	ldw	r21,48(sp)
10006240:	dd000b17 	ldw	r20,44(sp)
10006244:	dcc00a17 	ldw	r19,40(sp)
10006248:	dc800917 	ldw	r18,36(sp)
1000624c:	dc400817 	ldw	r17,32(sp)
10006250:	dc000717 	ldw	r16,28(sp)
10006254:	dec01104 	addi	sp,sp,68
10006258:	f800283a 	ret

1000625c <__pow5mult>:
1000625c:	defffa04 	addi	sp,sp,-24
10006260:	dcc00315 	stw	r19,12(sp)
10006264:	dc000015 	stw	r16,0(sp)
10006268:	dfc00515 	stw	ra,20(sp)
1000626c:	dd000415 	stw	r20,16(sp)
10006270:	dc800215 	stw	r18,8(sp)
10006274:	dc400115 	stw	r17,4(sp)
10006278:	308000cc 	andi	r2,r6,3
1000627c:	3021883a 	mov	r16,r6
10006280:	2027883a 	mov	r19,r4
10006284:	10002f1e 	bne	r2,zero,10006344 <__pow5mult+0xe8>
10006288:	2825883a 	mov	r18,r5
1000628c:	8021d0ba 	srai	r16,r16,2
10006290:	80001a26 	beq	r16,zero,100062fc <__pow5mult+0xa0>
10006294:	9c401217 	ldw	r17,72(r19)
10006298:	8800061e 	bne	r17,zero,100062b4 <__pow5mult+0x58>
1000629c:	00003406 	br	10006370 <__pow5mult+0x114>
100062a0:	8021d07a 	srai	r16,r16,1
100062a4:	80001526 	beq	r16,zero,100062fc <__pow5mult+0xa0>
100062a8:	88800017 	ldw	r2,0(r17)
100062ac:	10001c26 	beq	r2,zero,10006320 <__pow5mult+0xc4>
100062b0:	1023883a 	mov	r17,r2
100062b4:	8080004c 	andi	r2,r16,1
100062b8:	103ff926 	beq	r2,zero,100062a0 <__alt_data_end+0xf80062a0>
100062bc:	880d883a 	mov	r6,r17
100062c0:	900b883a 	mov	r5,r18
100062c4:	9809883a 	mov	r4,r19
100062c8:	0005fd00 	call	10005fd0 <__multiply>
100062cc:	90001b26 	beq	r18,zero,1000633c <__pow5mult+0xe0>
100062d0:	91000117 	ldw	r4,4(r18)
100062d4:	98c01317 	ldw	r3,76(r19)
100062d8:	8021d07a 	srai	r16,r16,1
100062dc:	2109883a 	add	r4,r4,r4
100062e0:	2109883a 	add	r4,r4,r4
100062e4:	1907883a 	add	r3,r3,r4
100062e8:	19000017 	ldw	r4,0(r3)
100062ec:	91000015 	stw	r4,0(r18)
100062f0:	1c800015 	stw	r18,0(r3)
100062f4:	1025883a 	mov	r18,r2
100062f8:	803feb1e 	bne	r16,zero,100062a8 <__alt_data_end+0xf80062a8>
100062fc:	9005883a 	mov	r2,r18
10006300:	dfc00517 	ldw	ra,20(sp)
10006304:	dd000417 	ldw	r20,16(sp)
10006308:	dcc00317 	ldw	r19,12(sp)
1000630c:	dc800217 	ldw	r18,8(sp)
10006310:	dc400117 	ldw	r17,4(sp)
10006314:	dc000017 	ldw	r16,0(sp)
10006318:	dec00604 	addi	sp,sp,24
1000631c:	f800283a 	ret
10006320:	880d883a 	mov	r6,r17
10006324:	880b883a 	mov	r5,r17
10006328:	9809883a 	mov	r4,r19
1000632c:	0005fd00 	call	10005fd0 <__multiply>
10006330:	88800015 	stw	r2,0(r17)
10006334:	10000015 	stw	zero,0(r2)
10006338:	003fdd06 	br	100062b0 <__alt_data_end+0xf80062b0>
1000633c:	1025883a 	mov	r18,r2
10006340:	003fd706 	br	100062a0 <__alt_data_end+0xf80062a0>
10006344:	10bfffc4 	addi	r2,r2,-1
10006348:	1085883a 	add	r2,r2,r2
1000634c:	00c40074 	movhi	r3,4097
10006350:	18fe8c04 	addi	r3,r3,-1488
10006354:	1085883a 	add	r2,r2,r2
10006358:	1885883a 	add	r2,r3,r2
1000635c:	11800017 	ldw	r6,0(r2)
10006360:	000f883a 	mov	r7,zero
10006364:	0005c300 	call	10005c30 <__multadd>
10006368:	1025883a 	mov	r18,r2
1000636c:	003fc706 	br	1000628c <__alt_data_end+0xf800628c>
10006370:	05000044 	movi	r20,1
10006374:	a00b883a 	mov	r5,r20
10006378:	9809883a 	mov	r4,r19
1000637c:	0005b600 	call	10005b60 <_Balloc>
10006380:	1023883a 	mov	r17,r2
10006384:	00809c44 	movi	r2,625
10006388:	88800515 	stw	r2,20(r17)
1000638c:	8d000415 	stw	r20,16(r17)
10006390:	9c401215 	stw	r17,72(r19)
10006394:	88000015 	stw	zero,0(r17)
10006398:	003fc606 	br	100062b4 <__alt_data_end+0xf80062b4>

1000639c <__lshift>:
1000639c:	defff904 	addi	sp,sp,-28
100063a0:	dd400515 	stw	r21,20(sp)
100063a4:	dcc00315 	stw	r19,12(sp)
100063a8:	302bd17a 	srai	r21,r6,5
100063ac:	2cc00417 	ldw	r19,16(r5)
100063b0:	28800217 	ldw	r2,8(r5)
100063b4:	dd000415 	stw	r20,16(sp)
100063b8:	ace7883a 	add	r19,r21,r19
100063bc:	dc800215 	stw	r18,8(sp)
100063c0:	dc400115 	stw	r17,4(sp)
100063c4:	dc000015 	stw	r16,0(sp)
100063c8:	dfc00615 	stw	ra,24(sp)
100063cc:	9c000044 	addi	r16,r19,1
100063d0:	2823883a 	mov	r17,r5
100063d4:	3029883a 	mov	r20,r6
100063d8:	2025883a 	mov	r18,r4
100063dc:	29400117 	ldw	r5,4(r5)
100063e0:	1400030e 	bge	r2,r16,100063f0 <__lshift+0x54>
100063e4:	1085883a 	add	r2,r2,r2
100063e8:	29400044 	addi	r5,r5,1
100063ec:	143ffd16 	blt	r2,r16,100063e4 <__alt_data_end+0xf80063e4>
100063f0:	9009883a 	mov	r4,r18
100063f4:	0005b600 	call	10005b60 <_Balloc>
100063f8:	10c00504 	addi	r3,r2,20
100063fc:	0540070e 	bge	zero,r21,1000641c <__lshift+0x80>
10006400:	ad6b883a 	add	r21,r21,r21
10006404:	ad6b883a 	add	r21,r21,r21
10006408:	1809883a 	mov	r4,r3
1000640c:	1d47883a 	add	r3,r3,r21
10006410:	20000015 	stw	zero,0(r4)
10006414:	21000104 	addi	r4,r4,4
10006418:	193ffd1e 	bne	r3,r4,10006410 <__alt_data_end+0xf8006410>
1000641c:	8a000417 	ldw	r8,16(r17)
10006420:	89000504 	addi	r4,r17,20
10006424:	a18007cc 	andi	r6,r20,31
10006428:	4211883a 	add	r8,r8,r8
1000642c:	4211883a 	add	r8,r8,r8
10006430:	2211883a 	add	r8,r4,r8
10006434:	30002326 	beq	r6,zero,100064c4 <__lshift+0x128>
10006438:	02400804 	movi	r9,32
1000643c:	4993c83a 	sub	r9,r9,r6
10006440:	000b883a 	mov	r5,zero
10006444:	21c00017 	ldw	r7,0(r4)
10006448:	1815883a 	mov	r10,r3
1000644c:	18c00104 	addi	r3,r3,4
10006450:	398e983a 	sll	r7,r7,r6
10006454:	21000104 	addi	r4,r4,4
10006458:	394ab03a 	or	r5,r7,r5
1000645c:	197fff15 	stw	r5,-4(r3)
10006460:	217fff17 	ldw	r5,-4(r4)
10006464:	2a4ad83a 	srl	r5,r5,r9
10006468:	223ff636 	bltu	r4,r8,10006444 <__alt_data_end+0xf8006444>
1000646c:	51400115 	stw	r5,4(r10)
10006470:	28001a1e 	bne	r5,zero,100064dc <__lshift+0x140>
10006474:	843fffc4 	addi	r16,r16,-1
10006478:	14000415 	stw	r16,16(r2)
1000647c:	88000826 	beq	r17,zero,100064a0 <__lshift+0x104>
10006480:	89000117 	ldw	r4,4(r17)
10006484:	90c01317 	ldw	r3,76(r18)
10006488:	2109883a 	add	r4,r4,r4
1000648c:	2109883a 	add	r4,r4,r4
10006490:	1907883a 	add	r3,r3,r4
10006494:	19000017 	ldw	r4,0(r3)
10006498:	89000015 	stw	r4,0(r17)
1000649c:	1c400015 	stw	r17,0(r3)
100064a0:	dfc00617 	ldw	ra,24(sp)
100064a4:	dd400517 	ldw	r21,20(sp)
100064a8:	dd000417 	ldw	r20,16(sp)
100064ac:	dcc00317 	ldw	r19,12(sp)
100064b0:	dc800217 	ldw	r18,8(sp)
100064b4:	dc400117 	ldw	r17,4(sp)
100064b8:	dc000017 	ldw	r16,0(sp)
100064bc:	dec00704 	addi	sp,sp,28
100064c0:	f800283a 	ret
100064c4:	21400017 	ldw	r5,0(r4)
100064c8:	18c00104 	addi	r3,r3,4
100064cc:	21000104 	addi	r4,r4,4
100064d0:	197fff15 	stw	r5,-4(r3)
100064d4:	223ffb36 	bltu	r4,r8,100064c4 <__alt_data_end+0xf80064c4>
100064d8:	003fe606 	br	10006474 <__alt_data_end+0xf8006474>
100064dc:	9c000084 	addi	r16,r19,2
100064e0:	003fe406 	br	10006474 <__alt_data_end+0xf8006474>

100064e4 <__mcmp>:
100064e4:	20800417 	ldw	r2,16(r4)
100064e8:	28c00417 	ldw	r3,16(r5)
100064ec:	10c5c83a 	sub	r2,r2,r3
100064f0:	1000111e 	bne	r2,zero,10006538 <__mcmp+0x54>
100064f4:	18c7883a 	add	r3,r3,r3
100064f8:	18c7883a 	add	r3,r3,r3
100064fc:	21000504 	addi	r4,r4,20
10006500:	29400504 	addi	r5,r5,20
10006504:	20c5883a 	add	r2,r4,r3
10006508:	28cb883a 	add	r5,r5,r3
1000650c:	00000106 	br	10006514 <__mcmp+0x30>
10006510:	20800a2e 	bgeu	r4,r2,1000653c <__mcmp+0x58>
10006514:	10bfff04 	addi	r2,r2,-4
10006518:	297fff04 	addi	r5,r5,-4
1000651c:	11800017 	ldw	r6,0(r2)
10006520:	28c00017 	ldw	r3,0(r5)
10006524:	30fffa26 	beq	r6,r3,10006510 <__alt_data_end+0xf8006510>
10006528:	30c00236 	bltu	r6,r3,10006534 <__mcmp+0x50>
1000652c:	00800044 	movi	r2,1
10006530:	f800283a 	ret
10006534:	00bfffc4 	movi	r2,-1
10006538:	f800283a 	ret
1000653c:	0005883a 	mov	r2,zero
10006540:	f800283a 	ret

10006544 <__mdiff>:
10006544:	28c00417 	ldw	r3,16(r5)
10006548:	30800417 	ldw	r2,16(r6)
1000654c:	defffa04 	addi	sp,sp,-24
10006550:	dcc00315 	stw	r19,12(sp)
10006554:	dc800215 	stw	r18,8(sp)
10006558:	dfc00515 	stw	ra,20(sp)
1000655c:	dd000415 	stw	r20,16(sp)
10006560:	dc400115 	stw	r17,4(sp)
10006564:	dc000015 	stw	r16,0(sp)
10006568:	1887c83a 	sub	r3,r3,r2
1000656c:	2825883a 	mov	r18,r5
10006570:	3027883a 	mov	r19,r6
10006574:	1800141e 	bne	r3,zero,100065c8 <__mdiff+0x84>
10006578:	1085883a 	add	r2,r2,r2
1000657c:	1085883a 	add	r2,r2,r2
10006580:	2a000504 	addi	r8,r5,20
10006584:	34000504 	addi	r16,r6,20
10006588:	4087883a 	add	r3,r8,r2
1000658c:	8085883a 	add	r2,r16,r2
10006590:	00000106 	br	10006598 <__mdiff+0x54>
10006594:	40c0592e 	bgeu	r8,r3,100066fc <__mdiff+0x1b8>
10006598:	18ffff04 	addi	r3,r3,-4
1000659c:	10bfff04 	addi	r2,r2,-4
100065a0:	19c00017 	ldw	r7,0(r3)
100065a4:	11400017 	ldw	r5,0(r2)
100065a8:	397ffa26 	beq	r7,r5,10006594 <__alt_data_end+0xf8006594>
100065ac:	3940592e 	bgeu	r7,r5,10006714 <__mdiff+0x1d0>
100065b0:	9005883a 	mov	r2,r18
100065b4:	4023883a 	mov	r17,r8
100065b8:	9825883a 	mov	r18,r19
100065bc:	05000044 	movi	r20,1
100065c0:	1027883a 	mov	r19,r2
100065c4:	00000406 	br	100065d8 <__mdiff+0x94>
100065c8:	18005616 	blt	r3,zero,10006724 <__mdiff+0x1e0>
100065cc:	34400504 	addi	r17,r6,20
100065d0:	2c000504 	addi	r16,r5,20
100065d4:	0029883a 	mov	r20,zero
100065d8:	91400117 	ldw	r5,4(r18)
100065dc:	0005b600 	call	10005b60 <_Balloc>
100065e0:	92400417 	ldw	r9,16(r18)
100065e4:	9b000417 	ldw	r12,16(r19)
100065e8:	12c00504 	addi	r11,r2,20
100065ec:	4a51883a 	add	r8,r9,r9
100065f0:	6319883a 	add	r12,r12,r12
100065f4:	4211883a 	add	r8,r8,r8
100065f8:	6319883a 	add	r12,r12,r12
100065fc:	15000315 	stw	r20,12(r2)
10006600:	8211883a 	add	r8,r16,r8
10006604:	8b19883a 	add	r12,r17,r12
10006608:	0007883a 	mov	r3,zero
1000660c:	81400017 	ldw	r5,0(r16)
10006610:	89c00017 	ldw	r7,0(r17)
10006614:	59800104 	addi	r6,r11,4
10006618:	293fffcc 	andi	r4,r5,65535
1000661c:	20c7883a 	add	r3,r4,r3
10006620:	393fffcc 	andi	r4,r7,65535
10006624:	1909c83a 	sub	r4,r3,r4
10006628:	280ad43a 	srli	r5,r5,16
1000662c:	380ed43a 	srli	r7,r7,16
10006630:	2007d43a 	srai	r3,r4,16
10006634:	213fffcc 	andi	r4,r4,65535
10006638:	29cbc83a 	sub	r5,r5,r7
1000663c:	28c7883a 	add	r3,r5,r3
10006640:	180a943a 	slli	r5,r3,16
10006644:	8c400104 	addi	r17,r17,4
10006648:	84000104 	addi	r16,r16,4
1000664c:	2908b03a 	or	r4,r5,r4
10006650:	59000015 	stw	r4,0(r11)
10006654:	1807d43a 	srai	r3,r3,16
10006658:	3015883a 	mov	r10,r6
1000665c:	3017883a 	mov	r11,r6
10006660:	8b3fea36 	bltu	r17,r12,1000660c <__alt_data_end+0xf800660c>
10006664:	8200162e 	bgeu	r16,r8,100066c0 <__mdiff+0x17c>
10006668:	8017883a 	mov	r11,r16
1000666c:	59400017 	ldw	r5,0(r11)
10006670:	31800104 	addi	r6,r6,4
10006674:	5ac00104 	addi	r11,r11,4
10006678:	293fffcc 	andi	r4,r5,65535
1000667c:	20c7883a 	add	r3,r4,r3
10006680:	280ed43a 	srli	r7,r5,16
10006684:	180bd43a 	srai	r5,r3,16
10006688:	193fffcc 	andi	r4,r3,65535
1000668c:	3947883a 	add	r3,r7,r5
10006690:	180a943a 	slli	r5,r3,16
10006694:	1807d43a 	srai	r3,r3,16
10006698:	2908b03a 	or	r4,r5,r4
1000669c:	313fff15 	stw	r4,-4(r6)
100066a0:	5a3ff236 	bltu	r11,r8,1000666c <__alt_data_end+0xf800666c>
100066a4:	0406303a 	nor	r3,zero,r16
100066a8:	1a07883a 	add	r3,r3,r8
100066ac:	1806d0ba 	srli	r3,r3,2
100066b0:	18c00044 	addi	r3,r3,1
100066b4:	18c7883a 	add	r3,r3,r3
100066b8:	18c7883a 	add	r3,r3,r3
100066bc:	50d5883a 	add	r10,r10,r3
100066c0:	50ffff04 	addi	r3,r10,-4
100066c4:	2000041e 	bne	r4,zero,100066d8 <__mdiff+0x194>
100066c8:	18ffff04 	addi	r3,r3,-4
100066cc:	19000017 	ldw	r4,0(r3)
100066d0:	4a7fffc4 	addi	r9,r9,-1
100066d4:	203ffc26 	beq	r4,zero,100066c8 <__alt_data_end+0xf80066c8>
100066d8:	12400415 	stw	r9,16(r2)
100066dc:	dfc00517 	ldw	ra,20(sp)
100066e0:	dd000417 	ldw	r20,16(sp)
100066e4:	dcc00317 	ldw	r19,12(sp)
100066e8:	dc800217 	ldw	r18,8(sp)
100066ec:	dc400117 	ldw	r17,4(sp)
100066f0:	dc000017 	ldw	r16,0(sp)
100066f4:	dec00604 	addi	sp,sp,24
100066f8:	f800283a 	ret
100066fc:	000b883a 	mov	r5,zero
10006700:	0005b600 	call	10005b60 <_Balloc>
10006704:	00c00044 	movi	r3,1
10006708:	10c00415 	stw	r3,16(r2)
1000670c:	10000515 	stw	zero,20(r2)
10006710:	003ff206 	br	100066dc <__alt_data_end+0xf80066dc>
10006714:	8023883a 	mov	r17,r16
10006718:	0029883a 	mov	r20,zero
1000671c:	4021883a 	mov	r16,r8
10006720:	003fad06 	br	100065d8 <__alt_data_end+0xf80065d8>
10006724:	9005883a 	mov	r2,r18
10006728:	94400504 	addi	r17,r18,20
1000672c:	9c000504 	addi	r16,r19,20
10006730:	9825883a 	mov	r18,r19
10006734:	05000044 	movi	r20,1
10006738:	1027883a 	mov	r19,r2
1000673c:	003fa606 	br	100065d8 <__alt_data_end+0xf80065d8>

10006740 <__ulp>:
10006740:	295ffc2c 	andhi	r5,r5,32752
10006744:	00bf3034 	movhi	r2,64704
10006748:	2887883a 	add	r3,r5,r2
1000674c:	00c0020e 	bge	zero,r3,10006758 <__ulp+0x18>
10006750:	0005883a 	mov	r2,zero
10006754:	f800283a 	ret
10006758:	00c7c83a 	sub	r3,zero,r3
1000675c:	1807d53a 	srai	r3,r3,20
10006760:	008004c4 	movi	r2,19
10006764:	10c00b0e 	bge	r2,r3,10006794 <__ulp+0x54>
10006768:	18bffb04 	addi	r2,r3,-20
1000676c:	01000784 	movi	r4,30
10006770:	0007883a 	mov	r3,zero
10006774:	20800516 	blt	r4,r2,1000678c <__ulp+0x4c>
10006778:	010007c4 	movi	r4,31
1000677c:	2089c83a 	sub	r4,r4,r2
10006780:	00800044 	movi	r2,1
10006784:	1104983a 	sll	r2,r2,r4
10006788:	f800283a 	ret
1000678c:	00800044 	movi	r2,1
10006790:	f800283a 	ret
10006794:	01400234 	movhi	r5,8
10006798:	28c7d83a 	sra	r3,r5,r3
1000679c:	0005883a 	mov	r2,zero
100067a0:	f800283a 	ret

100067a4 <__b2d>:
100067a4:	defffa04 	addi	sp,sp,-24
100067a8:	dc000015 	stw	r16,0(sp)
100067ac:	24000417 	ldw	r16,16(r4)
100067b0:	dc400115 	stw	r17,4(sp)
100067b4:	24400504 	addi	r17,r4,20
100067b8:	8421883a 	add	r16,r16,r16
100067bc:	8421883a 	add	r16,r16,r16
100067c0:	8c21883a 	add	r16,r17,r16
100067c4:	dc800215 	stw	r18,8(sp)
100067c8:	84bfff17 	ldw	r18,-4(r16)
100067cc:	dd000415 	stw	r20,16(sp)
100067d0:	dcc00315 	stw	r19,12(sp)
100067d4:	9009883a 	mov	r4,r18
100067d8:	2829883a 	mov	r20,r5
100067dc:	dfc00515 	stw	ra,20(sp)
100067e0:	0005e7c0 	call	10005e7c <__hi0bits>
100067e4:	00c00804 	movi	r3,32
100067e8:	1889c83a 	sub	r4,r3,r2
100067ec:	a1000015 	stw	r4,0(r20)
100067f0:	01000284 	movi	r4,10
100067f4:	84ffff04 	addi	r19,r16,-4
100067f8:	20801216 	blt	r4,r2,10006844 <__b2d+0xa0>
100067fc:	018002c4 	movi	r6,11
10006800:	308dc83a 	sub	r6,r6,r2
10006804:	9186d83a 	srl	r3,r18,r6
10006808:	18cffc34 	orhi	r3,r3,16368
1000680c:	8cc0212e 	bgeu	r17,r19,10006894 <__b2d+0xf0>
10006810:	813ffe17 	ldw	r4,-8(r16)
10006814:	218cd83a 	srl	r6,r4,r6
10006818:	10800544 	addi	r2,r2,21
1000681c:	9084983a 	sll	r2,r18,r2
10006820:	1184b03a 	or	r2,r2,r6
10006824:	dfc00517 	ldw	ra,20(sp)
10006828:	dd000417 	ldw	r20,16(sp)
1000682c:	dcc00317 	ldw	r19,12(sp)
10006830:	dc800217 	ldw	r18,8(sp)
10006834:	dc400117 	ldw	r17,4(sp)
10006838:	dc000017 	ldw	r16,0(sp)
1000683c:	dec00604 	addi	sp,sp,24
10006840:	f800283a 	ret
10006844:	8cc00f2e 	bgeu	r17,r19,10006884 <__b2d+0xe0>
10006848:	117ffd44 	addi	r5,r2,-11
1000684c:	80bffe17 	ldw	r2,-8(r16)
10006850:	28000e26 	beq	r5,zero,1000688c <__b2d+0xe8>
10006854:	1949c83a 	sub	r4,r3,r5
10006858:	9164983a 	sll	r18,r18,r5
1000685c:	1106d83a 	srl	r3,r2,r4
10006860:	81bffe04 	addi	r6,r16,-8
10006864:	948ffc34 	orhi	r18,r18,16368
10006868:	90c6b03a 	or	r3,r18,r3
1000686c:	89800e2e 	bgeu	r17,r6,100068a8 <__b2d+0x104>
10006870:	81bffd17 	ldw	r6,-12(r16)
10006874:	1144983a 	sll	r2,r2,r5
10006878:	310ad83a 	srl	r5,r6,r4
1000687c:	2884b03a 	or	r2,r5,r2
10006880:	003fe806 	br	10006824 <__alt_data_end+0xf8006824>
10006884:	10bffd44 	addi	r2,r2,-11
10006888:	1000041e 	bne	r2,zero,1000689c <__b2d+0xf8>
1000688c:	90cffc34 	orhi	r3,r18,16368
10006890:	003fe406 	br	10006824 <__alt_data_end+0xf8006824>
10006894:	000d883a 	mov	r6,zero
10006898:	003fdf06 	br	10006818 <__alt_data_end+0xf8006818>
1000689c:	90a4983a 	sll	r18,r18,r2
100068a0:	0005883a 	mov	r2,zero
100068a4:	003ff906 	br	1000688c <__alt_data_end+0xf800688c>
100068a8:	1144983a 	sll	r2,r2,r5
100068ac:	003fdd06 	br	10006824 <__alt_data_end+0xf8006824>

100068b0 <__d2b>:
100068b0:	defff804 	addi	sp,sp,-32
100068b4:	dc000215 	stw	r16,8(sp)
100068b8:	3021883a 	mov	r16,r6
100068bc:	dc400315 	stw	r17,12(sp)
100068c0:	8022907a 	slli	r17,r16,1
100068c4:	dd000615 	stw	r20,24(sp)
100068c8:	2829883a 	mov	r20,r5
100068cc:	01400044 	movi	r5,1
100068d0:	dcc00515 	stw	r19,20(sp)
100068d4:	dc800415 	stw	r18,16(sp)
100068d8:	dfc00715 	stw	ra,28(sp)
100068dc:	3825883a 	mov	r18,r7
100068e0:	8822d57a 	srli	r17,r17,21
100068e4:	0005b600 	call	10005b60 <_Balloc>
100068e8:	1027883a 	mov	r19,r2
100068ec:	00800434 	movhi	r2,16
100068f0:	10bfffc4 	addi	r2,r2,-1
100068f4:	808c703a 	and	r6,r16,r2
100068f8:	88000126 	beq	r17,zero,10006900 <__d2b+0x50>
100068fc:	31800434 	orhi	r6,r6,16
10006900:	d9800015 	stw	r6,0(sp)
10006904:	a0002426 	beq	r20,zero,10006998 <__d2b+0xe8>
10006908:	d9000104 	addi	r4,sp,4
1000690c:	dd000115 	stw	r20,4(sp)
10006910:	0005ee40 	call	10005ee4 <__lo0bits>
10006914:	d8c00017 	ldw	r3,0(sp)
10006918:	10002f1e 	bne	r2,zero,100069d8 <__d2b+0x128>
1000691c:	d9000117 	ldw	r4,4(sp)
10006920:	99000515 	stw	r4,20(r19)
10006924:	1821003a 	cmpeq	r16,r3,zero
10006928:	01000084 	movi	r4,2
1000692c:	2421c83a 	sub	r16,r4,r16
10006930:	98c00615 	stw	r3,24(r19)
10006934:	9c000415 	stw	r16,16(r19)
10006938:	88001f1e 	bne	r17,zero,100069b8 <__d2b+0x108>
1000693c:	10bef384 	addi	r2,r2,-1074
10006940:	90800015 	stw	r2,0(r18)
10006944:	00900034 	movhi	r2,16384
10006948:	10bfffc4 	addi	r2,r2,-1
1000694c:	8085883a 	add	r2,r16,r2
10006950:	1085883a 	add	r2,r2,r2
10006954:	1085883a 	add	r2,r2,r2
10006958:	9885883a 	add	r2,r19,r2
1000695c:	11000517 	ldw	r4,20(r2)
10006960:	8020917a 	slli	r16,r16,5
10006964:	0005e7c0 	call	10005e7c <__hi0bits>
10006968:	d8c00817 	ldw	r3,32(sp)
1000696c:	8085c83a 	sub	r2,r16,r2
10006970:	18800015 	stw	r2,0(r3)
10006974:	9805883a 	mov	r2,r19
10006978:	dfc00717 	ldw	ra,28(sp)
1000697c:	dd000617 	ldw	r20,24(sp)
10006980:	dcc00517 	ldw	r19,20(sp)
10006984:	dc800417 	ldw	r18,16(sp)
10006988:	dc400317 	ldw	r17,12(sp)
1000698c:	dc000217 	ldw	r16,8(sp)
10006990:	dec00804 	addi	sp,sp,32
10006994:	f800283a 	ret
10006998:	d809883a 	mov	r4,sp
1000699c:	0005ee40 	call	10005ee4 <__lo0bits>
100069a0:	d8c00017 	ldw	r3,0(sp)
100069a4:	04000044 	movi	r16,1
100069a8:	9c000415 	stw	r16,16(r19)
100069ac:	98c00515 	stw	r3,20(r19)
100069b0:	10800804 	addi	r2,r2,32
100069b4:	883fe126 	beq	r17,zero,1000693c <__alt_data_end+0xf800693c>
100069b8:	00c00d44 	movi	r3,53
100069bc:	8c7ef344 	addi	r17,r17,-1075
100069c0:	88a3883a 	add	r17,r17,r2
100069c4:	1885c83a 	sub	r2,r3,r2
100069c8:	d8c00817 	ldw	r3,32(sp)
100069cc:	94400015 	stw	r17,0(r18)
100069d0:	18800015 	stw	r2,0(r3)
100069d4:	003fe706 	br	10006974 <__alt_data_end+0xf8006974>
100069d8:	01000804 	movi	r4,32
100069dc:	2089c83a 	sub	r4,r4,r2
100069e0:	1908983a 	sll	r4,r3,r4
100069e4:	d9400117 	ldw	r5,4(sp)
100069e8:	1886d83a 	srl	r3,r3,r2
100069ec:	2148b03a 	or	r4,r4,r5
100069f0:	99000515 	stw	r4,20(r19)
100069f4:	d8c00015 	stw	r3,0(sp)
100069f8:	003fca06 	br	10006924 <__alt_data_end+0xf8006924>

100069fc <__ratio>:
100069fc:	defff904 	addi	sp,sp,-28
10006a00:	dc400315 	stw	r17,12(sp)
10006a04:	2823883a 	mov	r17,r5
10006a08:	d9400104 	addi	r5,sp,4
10006a0c:	dfc00615 	stw	ra,24(sp)
10006a10:	dcc00515 	stw	r19,20(sp)
10006a14:	dc800415 	stw	r18,16(sp)
10006a18:	2027883a 	mov	r19,r4
10006a1c:	dc000215 	stw	r16,8(sp)
10006a20:	00067a40 	call	100067a4 <__b2d>
10006a24:	d80b883a 	mov	r5,sp
10006a28:	8809883a 	mov	r4,r17
10006a2c:	1025883a 	mov	r18,r2
10006a30:	1821883a 	mov	r16,r3
10006a34:	00067a40 	call	100067a4 <__b2d>
10006a38:	8a000417 	ldw	r8,16(r17)
10006a3c:	99000417 	ldw	r4,16(r19)
10006a40:	d9400117 	ldw	r5,4(sp)
10006a44:	2209c83a 	sub	r4,r4,r8
10006a48:	2010917a 	slli	r8,r4,5
10006a4c:	d9000017 	ldw	r4,0(sp)
10006a50:	2909c83a 	sub	r4,r5,r4
10006a54:	4109883a 	add	r4,r8,r4
10006a58:	01000e0e 	bge	zero,r4,10006a94 <__ratio+0x98>
10006a5c:	2008953a 	slli	r4,r4,20
10006a60:	2421883a 	add	r16,r4,r16
10006a64:	100d883a 	mov	r6,r2
10006a68:	180f883a 	mov	r7,r3
10006a6c:	9009883a 	mov	r4,r18
10006a70:	800b883a 	mov	r5,r16
10006a74:	000b30c0 	call	1000b30c <__divdf3>
10006a78:	dfc00617 	ldw	ra,24(sp)
10006a7c:	dcc00517 	ldw	r19,20(sp)
10006a80:	dc800417 	ldw	r18,16(sp)
10006a84:	dc400317 	ldw	r17,12(sp)
10006a88:	dc000217 	ldw	r16,8(sp)
10006a8c:	dec00704 	addi	sp,sp,28
10006a90:	f800283a 	ret
10006a94:	2008953a 	slli	r4,r4,20
10006a98:	1907c83a 	sub	r3,r3,r4
10006a9c:	003ff106 	br	10006a64 <__alt_data_end+0xf8006a64>

10006aa0 <_mprec_log10>:
10006aa0:	defffe04 	addi	sp,sp,-8
10006aa4:	dc000015 	stw	r16,0(sp)
10006aa8:	dfc00115 	stw	ra,4(sp)
10006aac:	008005c4 	movi	r2,23
10006ab0:	2021883a 	mov	r16,r4
10006ab4:	11000d0e 	bge	r2,r4,10006aec <_mprec_log10+0x4c>
10006ab8:	0005883a 	mov	r2,zero
10006abc:	00cffc34 	movhi	r3,16368
10006ac0:	843fffc4 	addi	r16,r16,-1
10006ac4:	000d883a 	mov	r6,zero
10006ac8:	01d00934 	movhi	r7,16420
10006acc:	1009883a 	mov	r4,r2
10006ad0:	180b883a 	mov	r5,r3
10006ad4:	000bf340 	call	1000bf34 <__muldf3>
10006ad8:	803ff91e 	bne	r16,zero,10006ac0 <__alt_data_end+0xf8006ac0>
10006adc:	dfc00117 	ldw	ra,4(sp)
10006ae0:	dc000017 	ldw	r16,0(sp)
10006ae4:	dec00204 	addi	sp,sp,8
10006ae8:	f800283a 	ret
10006aec:	202090fa 	slli	r16,r4,3
10006af0:	00840074 	movhi	r2,4097
10006af4:	10bea304 	addi	r2,r2,-1396
10006af8:	1421883a 	add	r16,r2,r16
10006afc:	80800017 	ldw	r2,0(r16)
10006b00:	80c00117 	ldw	r3,4(r16)
10006b04:	dfc00117 	ldw	ra,4(sp)
10006b08:	dc000017 	ldw	r16,0(sp)
10006b0c:	dec00204 	addi	sp,sp,8
10006b10:	f800283a 	ret

10006b14 <__copybits>:
10006b14:	297fffc4 	addi	r5,r5,-1
10006b18:	280fd17a 	srai	r7,r5,5
10006b1c:	30c00417 	ldw	r3,16(r6)
10006b20:	30800504 	addi	r2,r6,20
10006b24:	39c00044 	addi	r7,r7,1
10006b28:	18c7883a 	add	r3,r3,r3
10006b2c:	39cf883a 	add	r7,r7,r7
10006b30:	18c7883a 	add	r3,r3,r3
10006b34:	39cf883a 	add	r7,r7,r7
10006b38:	10c7883a 	add	r3,r2,r3
10006b3c:	21cf883a 	add	r7,r4,r7
10006b40:	10c00d2e 	bgeu	r2,r3,10006b78 <__copybits+0x64>
10006b44:	200b883a 	mov	r5,r4
10006b48:	12000017 	ldw	r8,0(r2)
10006b4c:	29400104 	addi	r5,r5,4
10006b50:	10800104 	addi	r2,r2,4
10006b54:	2a3fff15 	stw	r8,-4(r5)
10006b58:	10fffb36 	bltu	r2,r3,10006b48 <__alt_data_end+0xf8006b48>
10006b5c:	1985c83a 	sub	r2,r3,r6
10006b60:	10bffac4 	addi	r2,r2,-21
10006b64:	1004d0ba 	srli	r2,r2,2
10006b68:	10800044 	addi	r2,r2,1
10006b6c:	1085883a 	add	r2,r2,r2
10006b70:	1085883a 	add	r2,r2,r2
10006b74:	2089883a 	add	r4,r4,r2
10006b78:	21c0032e 	bgeu	r4,r7,10006b88 <__copybits+0x74>
10006b7c:	20000015 	stw	zero,0(r4)
10006b80:	21000104 	addi	r4,r4,4
10006b84:	21fffd36 	bltu	r4,r7,10006b7c <__alt_data_end+0xf8006b7c>
10006b88:	f800283a 	ret

10006b8c <__any_on>:
10006b8c:	20c00417 	ldw	r3,16(r4)
10006b90:	2805d17a 	srai	r2,r5,5
10006b94:	21000504 	addi	r4,r4,20
10006b98:	18800d0e 	bge	r3,r2,10006bd0 <__any_on+0x44>
10006b9c:	18c7883a 	add	r3,r3,r3
10006ba0:	18c7883a 	add	r3,r3,r3
10006ba4:	20c7883a 	add	r3,r4,r3
10006ba8:	20c0192e 	bgeu	r4,r3,10006c10 <__any_on+0x84>
10006bac:	18bfff17 	ldw	r2,-4(r3)
10006bb0:	18ffff04 	addi	r3,r3,-4
10006bb4:	1000041e 	bne	r2,zero,10006bc8 <__any_on+0x3c>
10006bb8:	20c0142e 	bgeu	r4,r3,10006c0c <__any_on+0x80>
10006bbc:	18ffff04 	addi	r3,r3,-4
10006bc0:	19400017 	ldw	r5,0(r3)
10006bc4:	283ffc26 	beq	r5,zero,10006bb8 <__alt_data_end+0xf8006bb8>
10006bc8:	00800044 	movi	r2,1
10006bcc:	f800283a 	ret
10006bd0:	10c00a0e 	bge	r2,r3,10006bfc <__any_on+0x70>
10006bd4:	1085883a 	add	r2,r2,r2
10006bd8:	1085883a 	add	r2,r2,r2
10006bdc:	294007cc 	andi	r5,r5,31
10006be0:	2087883a 	add	r3,r4,r2
10006be4:	283ff026 	beq	r5,zero,10006ba8 <__alt_data_end+0xf8006ba8>
10006be8:	19800017 	ldw	r6,0(r3)
10006bec:	3144d83a 	srl	r2,r6,r5
10006bf0:	114a983a 	sll	r5,r2,r5
10006bf4:	317ff41e 	bne	r6,r5,10006bc8 <__alt_data_end+0xf8006bc8>
10006bf8:	003feb06 	br	10006ba8 <__alt_data_end+0xf8006ba8>
10006bfc:	1085883a 	add	r2,r2,r2
10006c00:	1085883a 	add	r2,r2,r2
10006c04:	2087883a 	add	r3,r4,r2
10006c08:	003fe706 	br	10006ba8 <__alt_data_end+0xf8006ba8>
10006c0c:	f800283a 	ret
10006c10:	0005883a 	mov	r2,zero
10006c14:	f800283a 	ret

10006c18 <_putc_r>:
10006c18:	defffc04 	addi	sp,sp,-16
10006c1c:	dc000215 	stw	r16,8(sp)
10006c20:	dfc00315 	stw	ra,12(sp)
10006c24:	2021883a 	mov	r16,r4
10006c28:	20000226 	beq	r4,zero,10006c34 <_putc_r+0x1c>
10006c2c:	20800e17 	ldw	r2,56(r4)
10006c30:	10001b26 	beq	r2,zero,10006ca0 <_putc_r+0x88>
10006c34:	30800217 	ldw	r2,8(r6)
10006c38:	10bfffc4 	addi	r2,r2,-1
10006c3c:	30800215 	stw	r2,8(r6)
10006c40:	10000a16 	blt	r2,zero,10006c6c <_putc_r+0x54>
10006c44:	30800017 	ldw	r2,0(r6)
10006c48:	11400005 	stb	r5,0(r2)
10006c4c:	30800017 	ldw	r2,0(r6)
10006c50:	10c00044 	addi	r3,r2,1
10006c54:	30c00015 	stw	r3,0(r6)
10006c58:	10800003 	ldbu	r2,0(r2)
10006c5c:	dfc00317 	ldw	ra,12(sp)
10006c60:	dc000217 	ldw	r16,8(sp)
10006c64:	dec00404 	addi	sp,sp,16
10006c68:	f800283a 	ret
10006c6c:	30c00617 	ldw	r3,24(r6)
10006c70:	10c00616 	blt	r2,r3,10006c8c <_putc_r+0x74>
10006c74:	30800017 	ldw	r2,0(r6)
10006c78:	00c00284 	movi	r3,10
10006c7c:	11400005 	stb	r5,0(r2)
10006c80:	30800017 	ldw	r2,0(r6)
10006c84:	11400003 	ldbu	r5,0(r2)
10006c88:	28fff11e 	bne	r5,r3,10006c50 <__alt_data_end+0xf8006c50>
10006c8c:	8009883a 	mov	r4,r16
10006c90:	dfc00317 	ldw	ra,12(sp)
10006c94:	dc000217 	ldw	r16,8(sp)
10006c98:	dec00404 	addi	sp,sp,16
10006c9c:	00087f01 	jmpi	100087f0 <__swbuf_r>
10006ca0:	d9400015 	stw	r5,0(sp)
10006ca4:	d9800115 	stw	r6,4(sp)
10006ca8:	000475c0 	call	1000475c <__sinit>
10006cac:	d9800117 	ldw	r6,4(sp)
10006cb0:	d9400017 	ldw	r5,0(sp)
10006cb4:	003fdf06 	br	10006c34 <__alt_data_end+0xf8006c34>

10006cb8 <putc>:
10006cb8:	00840074 	movhi	r2,4097
10006cbc:	defffc04 	addi	sp,sp,-16
10006cc0:	1085d704 	addi	r2,r2,5980
10006cc4:	dc000115 	stw	r16,4(sp)
10006cc8:	14000017 	ldw	r16,0(r2)
10006ccc:	dc400215 	stw	r17,8(sp)
10006cd0:	dfc00315 	stw	ra,12(sp)
10006cd4:	2023883a 	mov	r17,r4
10006cd8:	80000226 	beq	r16,zero,10006ce4 <putc+0x2c>
10006cdc:	80800e17 	ldw	r2,56(r16)
10006ce0:	10001a26 	beq	r2,zero,10006d4c <putc+0x94>
10006ce4:	28800217 	ldw	r2,8(r5)
10006ce8:	10bfffc4 	addi	r2,r2,-1
10006cec:	28800215 	stw	r2,8(r5)
10006cf0:	10000b16 	blt	r2,zero,10006d20 <putc+0x68>
10006cf4:	28800017 	ldw	r2,0(r5)
10006cf8:	14400005 	stb	r17,0(r2)
10006cfc:	28800017 	ldw	r2,0(r5)
10006d00:	10c00044 	addi	r3,r2,1
10006d04:	28c00015 	stw	r3,0(r5)
10006d08:	10800003 	ldbu	r2,0(r2)
10006d0c:	dfc00317 	ldw	ra,12(sp)
10006d10:	dc400217 	ldw	r17,8(sp)
10006d14:	dc000117 	ldw	r16,4(sp)
10006d18:	dec00404 	addi	sp,sp,16
10006d1c:	f800283a 	ret
10006d20:	28c00617 	ldw	r3,24(r5)
10006d24:	10c00e16 	blt	r2,r3,10006d60 <putc+0xa8>
10006d28:	28800017 	ldw	r2,0(r5)
10006d2c:	01000284 	movi	r4,10
10006d30:	14400005 	stb	r17,0(r2)
10006d34:	28800017 	ldw	r2,0(r5)
10006d38:	10c00003 	ldbu	r3,0(r2)
10006d3c:	193ff01e 	bne	r3,r4,10006d00 <__alt_data_end+0xf8006d00>
10006d40:	280d883a 	mov	r6,r5
10006d44:	180b883a 	mov	r5,r3
10006d48:	00000706 	br	10006d68 <putc+0xb0>
10006d4c:	8009883a 	mov	r4,r16
10006d50:	d9400015 	stw	r5,0(sp)
10006d54:	000475c0 	call	1000475c <__sinit>
10006d58:	d9400017 	ldw	r5,0(sp)
10006d5c:	003fe106 	br	10006ce4 <__alt_data_end+0xf8006ce4>
10006d60:	280d883a 	mov	r6,r5
10006d64:	880b883a 	mov	r5,r17
10006d68:	8009883a 	mov	r4,r16
10006d6c:	dfc00317 	ldw	ra,12(sp)
10006d70:	dc400217 	ldw	r17,8(sp)
10006d74:	dc000117 	ldw	r16,4(sp)
10006d78:	dec00404 	addi	sp,sp,16
10006d7c:	00087f01 	jmpi	100087f0 <__swbuf_r>

10006d80 <__fpclassifyd>:
10006d80:	00a00034 	movhi	r2,32768
10006d84:	10bfffc4 	addi	r2,r2,-1
10006d88:	2884703a 	and	r2,r5,r2
10006d8c:	10000726 	beq	r2,zero,10006dac <__fpclassifyd+0x2c>
10006d90:	00fffc34 	movhi	r3,65520
10006d94:	019ff834 	movhi	r6,32736
10006d98:	28c7883a 	add	r3,r5,r3
10006d9c:	31bfffc4 	addi	r6,r6,-1
10006da0:	30c00536 	bltu	r6,r3,10006db8 <__fpclassifyd+0x38>
10006da4:	00800104 	movi	r2,4
10006da8:	f800283a 	ret
10006dac:	2000021e 	bne	r4,zero,10006db8 <__fpclassifyd+0x38>
10006db0:	00800084 	movi	r2,2
10006db4:	f800283a 	ret
10006db8:	00dffc34 	movhi	r3,32752
10006dbc:	019ff834 	movhi	r6,32736
10006dc0:	28cb883a 	add	r5,r5,r3
10006dc4:	31bfffc4 	addi	r6,r6,-1
10006dc8:	317ff62e 	bgeu	r6,r5,10006da4 <__alt_data_end+0xf8006da4>
10006dcc:	01400434 	movhi	r5,16
10006dd0:	297fffc4 	addi	r5,r5,-1
10006dd4:	28800236 	bltu	r5,r2,10006de0 <__fpclassifyd+0x60>
10006dd8:	008000c4 	movi	r2,3
10006ddc:	f800283a 	ret
10006de0:	10c00226 	beq	r2,r3,10006dec <__fpclassifyd+0x6c>
10006de4:	0005883a 	mov	r2,zero
10006de8:	f800283a 	ret
10006dec:	2005003a 	cmpeq	r2,r4,zero
10006df0:	f800283a 	ret

10006df4 <_sbrk_r>:
10006df4:	defffd04 	addi	sp,sp,-12
10006df8:	dc000015 	stw	r16,0(sp)
10006dfc:	04040074 	movhi	r16,4097
10006e00:	dc400115 	stw	r17,4(sp)
10006e04:	840ca804 	addi	r16,r16,12960
10006e08:	2023883a 	mov	r17,r4
10006e0c:	2809883a 	mov	r4,r5
10006e10:	dfc00215 	stw	ra,8(sp)
10006e14:	80000015 	stw	zero,0(r16)
10006e18:	000daac0 	call	1000daac <sbrk>
10006e1c:	00ffffc4 	movi	r3,-1
10006e20:	10c00526 	beq	r2,r3,10006e38 <_sbrk_r+0x44>
10006e24:	dfc00217 	ldw	ra,8(sp)
10006e28:	dc400117 	ldw	r17,4(sp)
10006e2c:	dc000017 	ldw	r16,0(sp)
10006e30:	dec00304 	addi	sp,sp,12
10006e34:	f800283a 	ret
10006e38:	80c00017 	ldw	r3,0(r16)
10006e3c:	183ff926 	beq	r3,zero,10006e24 <__alt_data_end+0xf8006e24>
10006e40:	88c00015 	stw	r3,0(r17)
10006e44:	003ff706 	br	10006e24 <__alt_data_end+0xf8006e24>

10006e48 <__sread>:
10006e48:	defffe04 	addi	sp,sp,-8
10006e4c:	dc000015 	stw	r16,0(sp)
10006e50:	2821883a 	mov	r16,r5
10006e54:	2940038f 	ldh	r5,14(r5)
10006e58:	dfc00115 	stw	ra,4(sp)
10006e5c:	00095180 	call	10009518 <_read_r>
10006e60:	10000716 	blt	r2,zero,10006e80 <__sread+0x38>
10006e64:	80c01417 	ldw	r3,80(r16)
10006e68:	1887883a 	add	r3,r3,r2
10006e6c:	80c01415 	stw	r3,80(r16)
10006e70:	dfc00117 	ldw	ra,4(sp)
10006e74:	dc000017 	ldw	r16,0(sp)
10006e78:	dec00204 	addi	sp,sp,8
10006e7c:	f800283a 	ret
10006e80:	80c0030b 	ldhu	r3,12(r16)
10006e84:	18fbffcc 	andi	r3,r3,61439
10006e88:	80c0030d 	sth	r3,12(r16)
10006e8c:	dfc00117 	ldw	ra,4(sp)
10006e90:	dc000017 	ldw	r16,0(sp)
10006e94:	dec00204 	addi	sp,sp,8
10006e98:	f800283a 	ret

10006e9c <__seofread>:
10006e9c:	0005883a 	mov	r2,zero
10006ea0:	f800283a 	ret

10006ea4 <__swrite>:
10006ea4:	2880030b 	ldhu	r2,12(r5)
10006ea8:	defffb04 	addi	sp,sp,-20
10006eac:	dcc00315 	stw	r19,12(sp)
10006eb0:	dc800215 	stw	r18,8(sp)
10006eb4:	dc400115 	stw	r17,4(sp)
10006eb8:	dc000015 	stw	r16,0(sp)
10006ebc:	dfc00415 	stw	ra,16(sp)
10006ec0:	10c0400c 	andi	r3,r2,256
10006ec4:	2821883a 	mov	r16,r5
10006ec8:	2023883a 	mov	r17,r4
10006ecc:	3025883a 	mov	r18,r6
10006ed0:	3827883a 	mov	r19,r7
10006ed4:	18000526 	beq	r3,zero,10006eec <__swrite+0x48>
10006ed8:	2940038f 	ldh	r5,14(r5)
10006edc:	01c00084 	movi	r7,2
10006ee0:	000d883a 	mov	r6,zero
10006ee4:	000935c0 	call	1000935c <_lseek_r>
10006ee8:	8080030b 	ldhu	r2,12(r16)
10006eec:	8140038f 	ldh	r5,14(r16)
10006ef0:	10bbffcc 	andi	r2,r2,61439
10006ef4:	980f883a 	mov	r7,r19
10006ef8:	900d883a 	mov	r6,r18
10006efc:	8809883a 	mov	r4,r17
10006f00:	8080030d 	sth	r2,12(r16)
10006f04:	dfc00417 	ldw	ra,16(sp)
10006f08:	dcc00317 	ldw	r19,12(sp)
10006f0c:	dc800217 	ldw	r18,8(sp)
10006f10:	dc400117 	ldw	r17,4(sp)
10006f14:	dc000017 	ldw	r16,0(sp)
10006f18:	dec00504 	addi	sp,sp,20
10006f1c:	00089481 	jmpi	10008948 <_write_r>

10006f20 <__sseek>:
10006f20:	defffe04 	addi	sp,sp,-8
10006f24:	dc000015 	stw	r16,0(sp)
10006f28:	2821883a 	mov	r16,r5
10006f2c:	2940038f 	ldh	r5,14(r5)
10006f30:	dfc00115 	stw	ra,4(sp)
10006f34:	000935c0 	call	1000935c <_lseek_r>
10006f38:	00ffffc4 	movi	r3,-1
10006f3c:	10c00826 	beq	r2,r3,10006f60 <__sseek+0x40>
10006f40:	80c0030b 	ldhu	r3,12(r16)
10006f44:	80801415 	stw	r2,80(r16)
10006f48:	18c40014 	ori	r3,r3,4096
10006f4c:	80c0030d 	sth	r3,12(r16)
10006f50:	dfc00117 	ldw	ra,4(sp)
10006f54:	dc000017 	ldw	r16,0(sp)
10006f58:	dec00204 	addi	sp,sp,8
10006f5c:	f800283a 	ret
10006f60:	80c0030b 	ldhu	r3,12(r16)
10006f64:	18fbffcc 	andi	r3,r3,61439
10006f68:	80c0030d 	sth	r3,12(r16)
10006f6c:	dfc00117 	ldw	ra,4(sp)
10006f70:	dc000017 	ldw	r16,0(sp)
10006f74:	dec00204 	addi	sp,sp,8
10006f78:	f800283a 	ret

10006f7c <__sclose>:
10006f7c:	2940038f 	ldh	r5,14(r5)
10006f80:	00089a81 	jmpi	100089a8 <_close_r>

10006f84 <strcmp>:
10006f84:	2144b03a 	or	r2,r4,r5
10006f88:	108000cc 	andi	r2,r2,3
10006f8c:	1000171e 	bne	r2,zero,10006fec <strcmp+0x68>
10006f90:	20800017 	ldw	r2,0(r4)
10006f94:	28c00017 	ldw	r3,0(r5)
10006f98:	10c0141e 	bne	r2,r3,10006fec <strcmp+0x68>
10006f9c:	027fbff4 	movhi	r9,65279
10006fa0:	4a7fbfc4 	addi	r9,r9,-257
10006fa4:	0086303a 	nor	r3,zero,r2
10006fa8:	02202074 	movhi	r8,32897
10006fac:	1245883a 	add	r2,r2,r9
10006fb0:	42202004 	addi	r8,r8,-32640
10006fb4:	10c4703a 	and	r2,r2,r3
10006fb8:	1204703a 	and	r2,r2,r8
10006fbc:	10000226 	beq	r2,zero,10006fc8 <strcmp+0x44>
10006fc0:	00002306 	br	10007050 <strcmp+0xcc>
10006fc4:	1000221e 	bne	r2,zero,10007050 <strcmp+0xcc>
10006fc8:	21000104 	addi	r4,r4,4
10006fcc:	20c00017 	ldw	r3,0(r4)
10006fd0:	29400104 	addi	r5,r5,4
10006fd4:	29800017 	ldw	r6,0(r5)
10006fd8:	1a4f883a 	add	r7,r3,r9
10006fdc:	00c4303a 	nor	r2,zero,r3
10006fe0:	3884703a 	and	r2,r7,r2
10006fe4:	1204703a 	and	r2,r2,r8
10006fe8:	19bff626 	beq	r3,r6,10006fc4 <__alt_data_end+0xf8006fc4>
10006fec:	20800003 	ldbu	r2,0(r4)
10006ff0:	10c03fcc 	andi	r3,r2,255
10006ff4:	18c0201c 	xori	r3,r3,128
10006ff8:	18ffe004 	addi	r3,r3,-128
10006ffc:	18000c26 	beq	r3,zero,10007030 <strcmp+0xac>
10007000:	29800007 	ldb	r6,0(r5)
10007004:	19800326 	beq	r3,r6,10007014 <strcmp+0x90>
10007008:	00001306 	br	10007058 <strcmp+0xd4>
1000700c:	29800007 	ldb	r6,0(r5)
10007010:	11800b1e 	bne	r2,r6,10007040 <strcmp+0xbc>
10007014:	21000044 	addi	r4,r4,1
10007018:	20c00003 	ldbu	r3,0(r4)
1000701c:	29400044 	addi	r5,r5,1
10007020:	18803fcc 	andi	r2,r3,255
10007024:	1080201c 	xori	r2,r2,128
10007028:	10bfe004 	addi	r2,r2,-128
1000702c:	103ff71e 	bne	r2,zero,1000700c <__alt_data_end+0xf800700c>
10007030:	0007883a 	mov	r3,zero
10007034:	28800003 	ldbu	r2,0(r5)
10007038:	1885c83a 	sub	r2,r3,r2
1000703c:	f800283a 	ret
10007040:	28800003 	ldbu	r2,0(r5)
10007044:	18c03fcc 	andi	r3,r3,255
10007048:	1885c83a 	sub	r2,r3,r2
1000704c:	f800283a 	ret
10007050:	0005883a 	mov	r2,zero
10007054:	f800283a 	ret
10007058:	10c03fcc 	andi	r3,r2,255
1000705c:	003ff506 	br	10007034 <__alt_data_end+0xf8007034>

10007060 <strlen>:
10007060:	208000cc 	andi	r2,r4,3
10007064:	10002026 	beq	r2,zero,100070e8 <strlen+0x88>
10007068:	20800007 	ldb	r2,0(r4)
1000706c:	10002026 	beq	r2,zero,100070f0 <strlen+0x90>
10007070:	2005883a 	mov	r2,r4
10007074:	00000206 	br	10007080 <strlen+0x20>
10007078:	10c00007 	ldb	r3,0(r2)
1000707c:	18001826 	beq	r3,zero,100070e0 <strlen+0x80>
10007080:	10800044 	addi	r2,r2,1
10007084:	10c000cc 	andi	r3,r2,3
10007088:	183ffb1e 	bne	r3,zero,10007078 <__alt_data_end+0xf8007078>
1000708c:	10c00017 	ldw	r3,0(r2)
10007090:	01ffbff4 	movhi	r7,65279
10007094:	39ffbfc4 	addi	r7,r7,-257
10007098:	00ca303a 	nor	r5,zero,r3
1000709c:	01a02074 	movhi	r6,32897
100070a0:	19c7883a 	add	r3,r3,r7
100070a4:	31a02004 	addi	r6,r6,-32640
100070a8:	1946703a 	and	r3,r3,r5
100070ac:	1986703a 	and	r3,r3,r6
100070b0:	1800091e 	bne	r3,zero,100070d8 <strlen+0x78>
100070b4:	10800104 	addi	r2,r2,4
100070b8:	10c00017 	ldw	r3,0(r2)
100070bc:	19cb883a 	add	r5,r3,r7
100070c0:	00c6303a 	nor	r3,zero,r3
100070c4:	28c6703a 	and	r3,r5,r3
100070c8:	1986703a 	and	r3,r3,r6
100070cc:	183ff926 	beq	r3,zero,100070b4 <__alt_data_end+0xf80070b4>
100070d0:	00000106 	br	100070d8 <strlen+0x78>
100070d4:	10800044 	addi	r2,r2,1
100070d8:	10c00007 	ldb	r3,0(r2)
100070dc:	183ffd1e 	bne	r3,zero,100070d4 <__alt_data_end+0xf80070d4>
100070e0:	1105c83a 	sub	r2,r2,r4
100070e4:	f800283a 	ret
100070e8:	2005883a 	mov	r2,r4
100070ec:	003fe706 	br	1000708c <__alt_data_end+0xf800708c>
100070f0:	0005883a 	mov	r2,zero
100070f4:	f800283a 	ret

100070f8 <__sprint_r.part.0>:
100070f8:	28801917 	ldw	r2,100(r5)
100070fc:	defff604 	addi	sp,sp,-40
10007100:	dd400515 	stw	r21,20(sp)
10007104:	dfc00915 	stw	ra,36(sp)
10007108:	df000815 	stw	fp,32(sp)
1000710c:	ddc00715 	stw	r23,28(sp)
10007110:	dd800615 	stw	r22,24(sp)
10007114:	dd000415 	stw	r20,16(sp)
10007118:	dcc00315 	stw	r19,12(sp)
1000711c:	dc800215 	stw	r18,8(sp)
10007120:	dc400115 	stw	r17,4(sp)
10007124:	dc000015 	stw	r16,0(sp)
10007128:	1088000c 	andi	r2,r2,8192
1000712c:	302b883a 	mov	r21,r6
10007130:	10002e26 	beq	r2,zero,100071ec <__sprint_r.part.0+0xf4>
10007134:	30800217 	ldw	r2,8(r6)
10007138:	35800017 	ldw	r22,0(r6)
1000713c:	10002926 	beq	r2,zero,100071e4 <__sprint_r.part.0+0xec>
10007140:	2827883a 	mov	r19,r5
10007144:	2029883a 	mov	r20,r4
10007148:	b5c00104 	addi	r23,r22,4
1000714c:	04bfffc4 	movi	r18,-1
10007150:	bc400017 	ldw	r17,0(r23)
10007154:	b4000017 	ldw	r16,0(r22)
10007158:	0039883a 	mov	fp,zero
1000715c:	8822d0ba 	srli	r17,r17,2
10007160:	8800031e 	bne	r17,zero,10007170 <__sprint_r.part.0+0x78>
10007164:	00001806 	br	100071c8 <__sprint_r.part.0+0xd0>
10007168:	84000104 	addi	r16,r16,4
1000716c:	8f001526 	beq	r17,fp,100071c4 <__sprint_r.part.0+0xcc>
10007170:	81400017 	ldw	r5,0(r16)
10007174:	980d883a 	mov	r6,r19
10007178:	a009883a 	mov	r4,r20
1000717c:	0008d400 	call	10008d40 <_fputwc_r>
10007180:	e7000044 	addi	fp,fp,1
10007184:	14bff81e 	bne	r2,r18,10007168 <__alt_data_end+0xf8007168>
10007188:	9005883a 	mov	r2,r18
1000718c:	a8000215 	stw	zero,8(r21)
10007190:	a8000115 	stw	zero,4(r21)
10007194:	dfc00917 	ldw	ra,36(sp)
10007198:	df000817 	ldw	fp,32(sp)
1000719c:	ddc00717 	ldw	r23,28(sp)
100071a0:	dd800617 	ldw	r22,24(sp)
100071a4:	dd400517 	ldw	r21,20(sp)
100071a8:	dd000417 	ldw	r20,16(sp)
100071ac:	dcc00317 	ldw	r19,12(sp)
100071b0:	dc800217 	ldw	r18,8(sp)
100071b4:	dc400117 	ldw	r17,4(sp)
100071b8:	dc000017 	ldw	r16,0(sp)
100071bc:	dec00a04 	addi	sp,sp,40
100071c0:	f800283a 	ret
100071c4:	a8800217 	ldw	r2,8(r21)
100071c8:	8c63883a 	add	r17,r17,r17
100071cc:	8c63883a 	add	r17,r17,r17
100071d0:	1445c83a 	sub	r2,r2,r17
100071d4:	a8800215 	stw	r2,8(r21)
100071d8:	b5800204 	addi	r22,r22,8
100071dc:	bdc00204 	addi	r23,r23,8
100071e0:	103fdb1e 	bne	r2,zero,10007150 <__alt_data_end+0xf8007150>
100071e4:	0005883a 	mov	r2,zero
100071e8:	003fe806 	br	1000718c <__alt_data_end+0xf800718c>
100071ec:	0008e400 	call	10008e40 <__sfvwrite_r>
100071f0:	003fe606 	br	1000718c <__alt_data_end+0xf800718c>

100071f4 <__sprint_r>:
100071f4:	30c00217 	ldw	r3,8(r6)
100071f8:	18000126 	beq	r3,zero,10007200 <__sprint_r+0xc>
100071fc:	00070f81 	jmpi	100070f8 <__sprint_r.part.0>
10007200:	30000115 	stw	zero,4(r6)
10007204:	0005883a 	mov	r2,zero
10007208:	f800283a 	ret

1000720c <___vfiprintf_internal_r>:
1000720c:	deffca04 	addi	sp,sp,-216
10007210:	dd403115 	stw	r21,196(sp)
10007214:	dfc03515 	stw	ra,212(sp)
10007218:	df003415 	stw	fp,208(sp)
1000721c:	ddc03315 	stw	r23,204(sp)
10007220:	dd803215 	stw	r22,200(sp)
10007224:	dd003015 	stw	r20,192(sp)
10007228:	dcc02f15 	stw	r19,188(sp)
1000722c:	dc802e15 	stw	r18,184(sp)
10007230:	dc402d15 	stw	r17,180(sp)
10007234:	dc002c15 	stw	r16,176(sp)
10007238:	d9002115 	stw	r4,132(sp)
1000723c:	d9402015 	stw	r5,128(sp)
10007240:	d9c02215 	stw	r7,136(sp)
10007244:	302b883a 	mov	r21,r6
10007248:	20000226 	beq	r4,zero,10007254 <___vfiprintf_internal_r+0x48>
1000724c:	20800e17 	ldw	r2,56(r4)
10007250:	1000cf26 	beq	r2,zero,10007590 <___vfiprintf_internal_r+0x384>
10007254:	d8c02017 	ldw	r3,128(sp)
10007258:	1880030b 	ldhu	r2,12(r3)
1000725c:	10c8000c 	andi	r3,r2,8192
10007260:	1800071e 	bne	r3,zero,10007280 <___vfiprintf_internal_r+0x74>
10007264:	d9402017 	ldw	r5,128(sp)
10007268:	00f7ffc4 	movi	r3,-8193
1000726c:	10880014 	ori	r2,r2,8192
10007270:	29001917 	ldw	r4,100(r5)
10007274:	2880030d 	sth	r2,12(r5)
10007278:	20c6703a 	and	r3,r4,r3
1000727c:	28c01915 	stw	r3,100(r5)
10007280:	10c0020c 	andi	r3,r2,8
10007284:	1800a526 	beq	r3,zero,1000751c <___vfiprintf_internal_r+0x310>
10007288:	d9002017 	ldw	r4,128(sp)
1000728c:	20c00417 	ldw	r3,16(r4)
10007290:	1800a226 	beq	r3,zero,1000751c <___vfiprintf_internal_r+0x310>
10007294:	1080068c 	andi	r2,r2,26
10007298:	00c00284 	movi	r3,10
1000729c:	10c0a826 	beq	r2,r3,10007540 <___vfiprintf_internal_r+0x334>
100072a0:	d9001a04 	addi	r4,sp,104
100072a4:	d94019c4 	addi	r5,sp,103
100072a8:	04840074 	movhi	r18,4097
100072ac:	2145c83a 	sub	r2,r4,r5
100072b0:	94bed504 	addi	r18,r18,-1196
100072b4:	d9001e15 	stw	r4,120(sp)
100072b8:	d9401f15 	stw	r5,124(sp)
100072bc:	dec01a15 	stw	sp,104(sp)
100072c0:	d8001c15 	stw	zero,112(sp)
100072c4:	d8001b15 	stw	zero,108(sp)
100072c8:	d811883a 	mov	r8,sp
100072cc:	d8002615 	stw	zero,152(sp)
100072d0:	d8002415 	stw	zero,144(sp)
100072d4:	d8802815 	stw	r2,160(sp)
100072d8:	a82d883a 	mov	r22,r21
100072dc:	b0800007 	ldb	r2,0(r22)
100072e0:	10040d26 	beq	r2,zero,10008318 <___vfiprintf_internal_r+0x110c>
100072e4:	00c00944 	movi	r3,37
100072e8:	b029883a 	mov	r20,r22
100072ec:	10c0021e 	bne	r2,r3,100072f8 <___vfiprintf_internal_r+0xec>
100072f0:	00001606 	br	1000734c <___vfiprintf_internal_r+0x140>
100072f4:	10c00326 	beq	r2,r3,10007304 <___vfiprintf_internal_r+0xf8>
100072f8:	a5000044 	addi	r20,r20,1
100072fc:	a0800007 	ldb	r2,0(r20)
10007300:	103ffc1e 	bne	r2,zero,100072f4 <__alt_data_end+0xf80072f4>
10007304:	a5a1c83a 	sub	r16,r20,r22
10007308:	80001026 	beq	r16,zero,1000734c <___vfiprintf_internal_r+0x140>
1000730c:	d8c01c17 	ldw	r3,112(sp)
10007310:	d8801b17 	ldw	r2,108(sp)
10007314:	45800015 	stw	r22,0(r8)
10007318:	80c7883a 	add	r3,r16,r3
1000731c:	10800044 	addi	r2,r2,1
10007320:	44000115 	stw	r16,4(r8)
10007324:	d8c01c15 	stw	r3,112(sp)
10007328:	d8801b15 	stw	r2,108(sp)
1000732c:	010001c4 	movi	r4,7
10007330:	2080750e 	bge	r4,r2,10007508 <___vfiprintf_internal_r+0x2fc>
10007334:	1803951e 	bne	r3,zero,1000818c <___vfiprintf_internal_r+0xf80>
10007338:	d8c02417 	ldw	r3,144(sp)
1000733c:	d8001b15 	stw	zero,108(sp)
10007340:	d811883a 	mov	r8,sp
10007344:	1c07883a 	add	r3,r3,r16
10007348:	d8c02415 	stw	r3,144(sp)
1000734c:	a0800007 	ldb	r2,0(r20)
10007350:	1002e026 	beq	r2,zero,10007ed4 <___vfiprintf_internal_r+0xcc8>
10007354:	a5800044 	addi	r22,r20,1
10007358:	a0c00047 	ldb	r3,1(r20)
1000735c:	d8001d85 	stb	zero,118(sp)
10007360:	0027883a 	mov	r19,zero
10007364:	d8002305 	stb	zero,140(sp)
10007368:	043fffc4 	movi	r16,-1
1000736c:	d8002515 	stw	zero,148(sp)
10007370:	0023883a 	mov	r17,zero
10007374:	05001604 	movi	r20,88
10007378:	05400244 	movi	r21,9
1000737c:	402f883a 	mov	r23,r8
10007380:	b5800044 	addi	r22,r22,1
10007384:	18bff804 	addi	r2,r3,-32
10007388:	a0827736 	bltu	r20,r2,10007d68 <___vfiprintf_internal_r+0xb5c>
1000738c:	100490ba 	slli	r2,r2,2
10007390:	01040034 	movhi	r4,4096
10007394:	211ce904 	addi	r4,r4,29604
10007398:	1105883a 	add	r2,r2,r4
1000739c:	10800017 	ldw	r2,0(r2)
100073a0:	1000683a 	jmp	r2
100073a4:	10007a68 	cmpgeui	zero,r2,489
100073a8:	10007d68 	cmpgeui	zero,r2,501
100073ac:	10007d68 	cmpgeui	zero,r2,501
100073b0:	10007a84 	addi	zero,r2,490
100073b4:	10007d68 	cmpgeui	zero,r2,501
100073b8:	10007d68 	cmpgeui	zero,r2,501
100073bc:	10007d68 	cmpgeui	zero,r2,501
100073c0:	10007d68 	cmpgeui	zero,r2,501
100073c4:	10007d68 	cmpgeui	zero,r2,501
100073c8:	10007d68 	cmpgeui	zero,r2,501
100073cc:	10007c8c 	andi	zero,r2,498
100073d0:	10007cb0 	cmpltui	zero,r2,498
100073d4:	10007d68 	cmpgeui	zero,r2,501
100073d8:	100075a8 	cmpgeui	zero,r2,470
100073dc:	10007cc4 	addi	zero,r2,499
100073e0:	10007d68 	cmpgeui	zero,r2,501
100073e4:	10007a90 	cmplti	zero,r2,490
100073e8:	10007a9c 	xori	zero,r2,490
100073ec:	10007a9c 	xori	zero,r2,490
100073f0:	10007a9c 	xori	zero,r2,490
100073f4:	10007a9c 	xori	zero,r2,490
100073f8:	10007a9c 	xori	zero,r2,490
100073fc:	10007a9c 	xori	zero,r2,490
10007400:	10007a9c 	xori	zero,r2,490
10007404:	10007a9c 	xori	zero,r2,490
10007408:	10007a9c 	xori	zero,r2,490
1000740c:	10007d68 	cmpgeui	zero,r2,501
10007410:	10007d68 	cmpgeui	zero,r2,501
10007414:	10007d68 	cmpgeui	zero,r2,501
10007418:	10007d68 	cmpgeui	zero,r2,501
1000741c:	10007d68 	cmpgeui	zero,r2,501
10007420:	10007d68 	cmpgeui	zero,r2,501
10007424:	10007d68 	cmpgeui	zero,r2,501
10007428:	10007d68 	cmpgeui	zero,r2,501
1000742c:	10007d68 	cmpgeui	zero,r2,501
10007430:	10007d68 	cmpgeui	zero,r2,501
10007434:	10007adc 	xori	zero,r2,491
10007438:	10007d68 	cmpgeui	zero,r2,501
1000743c:	10007d68 	cmpgeui	zero,r2,501
10007440:	10007d68 	cmpgeui	zero,r2,501
10007444:	10007d68 	cmpgeui	zero,r2,501
10007448:	10007d68 	cmpgeui	zero,r2,501
1000744c:	10007d68 	cmpgeui	zero,r2,501
10007450:	10007d68 	cmpgeui	zero,r2,501
10007454:	10007d68 	cmpgeui	zero,r2,501
10007458:	10007d68 	cmpgeui	zero,r2,501
1000745c:	10007d68 	cmpgeui	zero,r2,501
10007460:	10007b18 	cmpnei	zero,r2,492
10007464:	10007d68 	cmpgeui	zero,r2,501
10007468:	10007d68 	cmpgeui	zero,r2,501
1000746c:	10007d68 	cmpgeui	zero,r2,501
10007470:	10007d68 	cmpgeui	zero,r2,501
10007474:	10007d68 	cmpgeui	zero,r2,501
10007478:	10007b74 	orhi	zero,r2,493
1000747c:	10007d68 	cmpgeui	zero,r2,501
10007480:	10007d68 	cmpgeui	zero,r2,501
10007484:	10007be8 	cmpgeui	zero,r2,495
10007488:	10007d68 	cmpgeui	zero,r2,501
1000748c:	10007d68 	cmpgeui	zero,r2,501
10007490:	10007d68 	cmpgeui	zero,r2,501
10007494:	10007d68 	cmpgeui	zero,r2,501
10007498:	10007d68 	cmpgeui	zero,r2,501
1000749c:	10007d68 	cmpgeui	zero,r2,501
100074a0:	10007d68 	cmpgeui	zero,r2,501
100074a4:	10007d68 	cmpgeui	zero,r2,501
100074a8:	10007d68 	cmpgeui	zero,r2,501
100074ac:	10007d68 	cmpgeui	zero,r2,501
100074b0:	10007990 	cmplti	zero,r2,486
100074b4:	100079c0 	call	1100079c <_gp+0xfe7048>
100074b8:	10007d68 	cmpgeui	zero,r2,501
100074bc:	10007d68 	cmpgeui	zero,r2,501
100074c0:	10007d68 	cmpgeui	zero,r2,501
100074c4:	10007d10 	cmplti	zero,r2,500
100074c8:	100079c0 	call	1100079c <_gp+0xfe7048>
100074cc:	10007d68 	cmpgeui	zero,r2,501
100074d0:	10007d68 	cmpgeui	zero,r2,501
100074d4:	10007868 	cmpgeui	zero,r2,481
100074d8:	10007d68 	cmpgeui	zero,r2,501
100074dc:	1000787c 	xorhi	zero,r2,481
100074e0:	100078b4 	orhi	zero,r2,482
100074e4:	100075b4 	orhi	zero,r2,470
100074e8:	1000785c 	xori	zero,r2,481
100074ec:	10007d68 	cmpgeui	zero,r2,501
100074f0:	10007c28 	cmpgeui	zero,r2,496
100074f4:	10007d68 	cmpgeui	zero,r2,501
100074f8:	10007c74 	orhi	zero,r2,497
100074fc:	10007d68 	cmpgeui	zero,r2,501
10007500:	10007d68 	cmpgeui	zero,r2,501
10007504:	10007938 	rdprs	zero,r2,484
10007508:	42000204 	addi	r8,r8,8
1000750c:	d8c02417 	ldw	r3,144(sp)
10007510:	1c07883a 	add	r3,r3,r16
10007514:	d8c02415 	stw	r3,144(sp)
10007518:	003f8c06 	br	1000734c <__alt_data_end+0xf800734c>
1000751c:	d9402017 	ldw	r5,128(sp)
10007520:	d9002117 	ldw	r4,132(sp)
10007524:	00027500 	call	10002750 <__swsetup_r>
10007528:	1003c11e 	bne	r2,zero,10008430 <___vfiprintf_internal_r+0x1224>
1000752c:	d9402017 	ldw	r5,128(sp)
10007530:	00c00284 	movi	r3,10
10007534:	2880030b 	ldhu	r2,12(r5)
10007538:	1080068c 	andi	r2,r2,26
1000753c:	10ff581e 	bne	r2,r3,100072a0 <__alt_data_end+0xf80072a0>
10007540:	d8c02017 	ldw	r3,128(sp)
10007544:	1880038f 	ldh	r2,14(r3)
10007548:	103f5516 	blt	r2,zero,100072a0 <__alt_data_end+0xf80072a0>
1000754c:	d9c02217 	ldw	r7,136(sp)
10007550:	d9002117 	ldw	r4,132(sp)
10007554:	a80d883a 	mov	r6,r21
10007558:	180b883a 	mov	r5,r3
1000755c:	00087340 	call	10008734 <__sbprintf>
10007560:	dfc03517 	ldw	ra,212(sp)
10007564:	df003417 	ldw	fp,208(sp)
10007568:	ddc03317 	ldw	r23,204(sp)
1000756c:	dd803217 	ldw	r22,200(sp)
10007570:	dd403117 	ldw	r21,196(sp)
10007574:	dd003017 	ldw	r20,192(sp)
10007578:	dcc02f17 	ldw	r19,188(sp)
1000757c:	dc802e17 	ldw	r18,184(sp)
10007580:	dc402d17 	ldw	r17,180(sp)
10007584:	dc002c17 	ldw	r16,176(sp)
10007588:	dec03604 	addi	sp,sp,216
1000758c:	f800283a 	ret
10007590:	000475c0 	call	1000475c <__sinit>
10007594:	003f2f06 	br	10007254 <__alt_data_end+0xf8007254>
10007598:	d8c02517 	ldw	r3,148(sp)
1000759c:	d8802215 	stw	r2,136(sp)
100075a0:	00c7c83a 	sub	r3,zero,r3
100075a4:	d8c02515 	stw	r3,148(sp)
100075a8:	8c400114 	ori	r17,r17,4
100075ac:	b0c00007 	ldb	r3,0(r22)
100075b0:	003f7306 	br	10007380 <__alt_data_end+0xf8007380>
100075b4:	00800c04 	movi	r2,48
100075b8:	d9402217 	ldw	r5,136(sp)
100075bc:	d8801d05 	stb	r2,116(sp)
100075c0:	00801e04 	movi	r2,120
100075c4:	d8801d45 	stb	r2,117(sp)
100075c8:	d8001d85 	stb	zero,118(sp)
100075cc:	b811883a 	mov	r8,r23
100075d0:	28c00104 	addi	r3,r5,4
100075d4:	2cc00017 	ldw	r19,0(r5)
100075d8:	0029883a 	mov	r20,zero
100075dc:	88800094 	ori	r2,r17,2
100075e0:	80032516 	blt	r16,zero,10008278 <___vfiprintf_internal_r+0x106c>
100075e4:	00bfdfc4 	movi	r2,-129
100075e8:	88a2703a 	and	r17,r17,r2
100075ec:	d8c02215 	stw	r3,136(sp)
100075f0:	8c400094 	ori	r17,r17,2
100075f4:	98032a1e 	bne	r19,zero,100082a0 <___vfiprintf_internal_r+0x1094>
100075f8:	00840074 	movhi	r2,4097
100075fc:	10be7404 	addi	r2,r2,-1584
10007600:	d8802615 	stw	r2,152(sp)
10007604:	002b883a 	mov	r21,zero
10007608:	8001741e 	bne	r16,zero,10007bdc <___vfiprintf_internal_r+0x9d0>
1000760c:	0021883a 	mov	r16,zero
10007610:	0029883a 	mov	r20,zero
10007614:	ddc01a04 	addi	r23,sp,104
10007618:	8027883a 	mov	r19,r16
1000761c:	8500010e 	bge	r16,r20,10007624 <___vfiprintf_internal_r+0x418>
10007620:	a027883a 	mov	r19,r20
10007624:	ad403fcc 	andi	r21,r21,255
10007628:	ad40201c 	xori	r21,r21,128
1000762c:	ad7fe004 	addi	r21,r21,-128
10007630:	a8000126 	beq	r21,zero,10007638 <___vfiprintf_internal_r+0x42c>
10007634:	9cc00044 	addi	r19,r19,1
10007638:	89c0008c 	andi	r7,r17,2
1000763c:	38000126 	beq	r7,zero,10007644 <___vfiprintf_internal_r+0x438>
10007640:	9cc00084 	addi	r19,r19,2
10007644:	88c0210c 	andi	r3,r17,132
10007648:	1801dd1e 	bne	r3,zero,10007dc0 <___vfiprintf_internal_r+0xbb4>
1000764c:	d9402517 	ldw	r5,148(sp)
10007650:	2cebc83a 	sub	r21,r5,r19
10007654:	0541da0e 	bge	zero,r21,10007dc0 <___vfiprintf_internal_r+0xbb4>
10007658:	07000404 	movi	fp,16
1000765c:	d8801c17 	ldw	r2,112(sp)
10007660:	e543be0e 	bge	fp,r21,1000855c <___vfiprintf_internal_r+0x1350>
10007664:	01440074 	movhi	r5,4097
10007668:	297ed904 	addi	r5,r5,-1180
1000766c:	dc002715 	stw	r16,156(sp)
10007670:	d9801b17 	ldw	r6,108(sp)
10007674:	a821883a 	mov	r16,r21
10007678:	d9402315 	stw	r5,140(sp)
1000767c:	028001c4 	movi	r10,7
10007680:	d9c02915 	stw	r7,164(sp)
10007684:	182b883a 	mov	r21,r3
10007688:	00000506 	br	100076a0 <___vfiprintf_internal_r+0x494>
1000768c:	31000084 	addi	r4,r6,2
10007690:	42000204 	addi	r8,r8,8
10007694:	180d883a 	mov	r6,r3
10007698:	843ffc04 	addi	r16,r16,-16
1000769c:	e4000f0e 	bge	fp,r16,100076dc <___vfiprintf_internal_r+0x4d0>
100076a0:	01040074 	movhi	r4,4097
100076a4:	10800404 	addi	r2,r2,16
100076a8:	30c00044 	addi	r3,r6,1
100076ac:	213ed904 	addi	r4,r4,-1180
100076b0:	41000015 	stw	r4,0(r8)
100076b4:	47000115 	stw	fp,4(r8)
100076b8:	d8801c15 	stw	r2,112(sp)
100076bc:	d8c01b15 	stw	r3,108(sp)
100076c0:	50fff20e 	bge	r10,r3,1000768c <__alt_data_end+0xf800768c>
100076c4:	1001b21e 	bne	r2,zero,10007d90 <___vfiprintf_internal_r+0xb84>
100076c8:	843ffc04 	addi	r16,r16,-16
100076cc:	000d883a 	mov	r6,zero
100076d0:	01000044 	movi	r4,1
100076d4:	d811883a 	mov	r8,sp
100076d8:	e43ff116 	blt	fp,r16,100076a0 <__alt_data_end+0xf80076a0>
100076dc:	a807883a 	mov	r3,r21
100076e0:	d9c02917 	ldw	r7,164(sp)
100076e4:	802b883a 	mov	r21,r16
100076e8:	dc002717 	ldw	r16,156(sp)
100076ec:	d9402317 	ldw	r5,140(sp)
100076f0:	a885883a 	add	r2,r21,r2
100076f4:	45400115 	stw	r21,4(r8)
100076f8:	41400015 	stw	r5,0(r8)
100076fc:	d8801c15 	stw	r2,112(sp)
10007700:	d9001b15 	stw	r4,108(sp)
10007704:	014001c4 	movi	r5,7
10007708:	29026216 	blt	r5,r4,10008094 <___vfiprintf_internal_r+0xe88>
1000770c:	d9801d87 	ldb	r6,118(sp)
10007710:	42000204 	addi	r8,r8,8
10007714:	21400044 	addi	r5,r4,1
10007718:	3001ae1e 	bne	r6,zero,10007dd4 <___vfiprintf_internal_r+0xbc8>
1000771c:	3801bb26 	beq	r7,zero,10007e0c <___vfiprintf_internal_r+0xc00>
10007720:	d9001d04 	addi	r4,sp,116
10007724:	10800084 	addi	r2,r2,2
10007728:	41000015 	stw	r4,0(r8)
1000772c:	01000084 	movi	r4,2
10007730:	41000115 	stw	r4,4(r8)
10007734:	d8801c15 	stw	r2,112(sp)
10007738:	d9401b15 	stw	r5,108(sp)
1000773c:	010001c4 	movi	r4,7
10007740:	2142680e 	bge	r4,r5,100080e4 <___vfiprintf_internal_r+0xed8>
10007744:	1002b11e 	bne	r2,zero,1000820c <___vfiprintf_internal_r+0x1000>
10007748:	01802004 	movi	r6,128
1000774c:	01400044 	movi	r5,1
10007750:	0009883a 	mov	r4,zero
10007754:	d811883a 	mov	r8,sp
10007758:	1981ae1e 	bne	r3,r6,10007e14 <___vfiprintf_internal_r+0xc08>
1000775c:	d8c02517 	ldw	r3,148(sp)
10007760:	1cf9c83a 	sub	fp,r3,r19
10007764:	0701ab0e 	bge	zero,fp,10007e14 <___vfiprintf_internal_r+0xc08>
10007768:	05400404 	movi	r21,16
1000776c:	af03a90e 	bge	r21,fp,10008614 <___vfiprintf_internal_r+0x1408>
10007770:	01440074 	movhi	r5,4097
10007774:	297ed504 	addi	r5,r5,-1196
10007778:	d9402315 	stw	r5,140(sp)
1000777c:	01c001c4 	movi	r7,7
10007780:	00000506 	br	10007798 <___vfiprintf_internal_r+0x58c>
10007784:	21800084 	addi	r6,r4,2
10007788:	42000204 	addi	r8,r8,8
1000778c:	1809883a 	mov	r4,r3
10007790:	e73ffc04 	addi	fp,fp,-16
10007794:	af000d0e 	bge	r21,fp,100077cc <___vfiprintf_internal_r+0x5c0>
10007798:	10800404 	addi	r2,r2,16
1000779c:	20c00044 	addi	r3,r4,1
100077a0:	44800015 	stw	r18,0(r8)
100077a4:	45400115 	stw	r21,4(r8)
100077a8:	d8801c15 	stw	r2,112(sp)
100077ac:	d8c01b15 	stw	r3,108(sp)
100077b0:	38fff40e 	bge	r7,r3,10007784 <__alt_data_end+0xf8007784>
100077b4:	10022b1e 	bne	r2,zero,10008064 <___vfiprintf_internal_r+0xe58>
100077b8:	e73ffc04 	addi	fp,fp,-16
100077bc:	01800044 	movi	r6,1
100077c0:	0009883a 	mov	r4,zero
100077c4:	d811883a 	mov	r8,sp
100077c8:	af3ff316 	blt	r21,fp,10007798 <__alt_data_end+0xf8007798>
100077cc:	d8c02317 	ldw	r3,140(sp)
100077d0:	1705883a 	add	r2,r2,fp
100077d4:	47000115 	stw	fp,4(r8)
100077d8:	40c00015 	stw	r3,0(r8)
100077dc:	d8801c15 	stw	r2,112(sp)
100077e0:	d9801b15 	stw	r6,108(sp)
100077e4:	00c001c4 	movi	r3,7
100077e8:	19829416 	blt	r3,r6,1000823c <___vfiprintf_internal_r+0x1030>
100077ec:	8521c83a 	sub	r16,r16,r20
100077f0:	42000204 	addi	r8,r8,8
100077f4:	31400044 	addi	r5,r6,1
100077f8:	3009883a 	mov	r4,r6
100077fc:	04018716 	blt	zero,r16,10007e1c <___vfiprintf_internal_r+0xc10>
10007800:	a085883a 	add	r2,r20,r2
10007804:	45c00015 	stw	r23,0(r8)
10007808:	45000115 	stw	r20,4(r8)
1000780c:	d8801c15 	stw	r2,112(sp)
10007810:	d9401b15 	stw	r5,108(sp)
10007814:	00c001c4 	movi	r3,7
10007818:	1941c20e 	bge	r3,r5,10007f24 <___vfiprintf_internal_r+0xd18>
1000781c:	1002531e 	bne	r2,zero,1000816c <___vfiprintf_internal_r+0xf60>
10007820:	d8001b15 	stw	zero,108(sp)
10007824:	8c40010c 	andi	r17,r17,4
10007828:	88023226 	beq	r17,zero,100080f4 <___vfiprintf_internal_r+0xee8>
1000782c:	d9002517 	ldw	r4,148(sp)
10007830:	24e3c83a 	sub	r17,r4,r19
10007834:	04432916 	blt	zero,r17,100084dc <___vfiprintf_internal_r+0x12d0>
10007838:	d8802517 	ldw	r2,148(sp)
1000783c:	14c0010e 	bge	r2,r19,10007844 <___vfiprintf_internal_r+0x638>
10007840:	9805883a 	mov	r2,r19
10007844:	d8c02417 	ldw	r3,144(sp)
10007848:	1887883a 	add	r3,r3,r2
1000784c:	d8c02415 	stw	r3,144(sp)
10007850:	d8001b15 	stw	zero,108(sp)
10007854:	d811883a 	mov	r8,sp
10007858:	003ea006 	br	100072dc <__alt_data_end+0xf80072dc>
1000785c:	8c400814 	ori	r17,r17,32
10007860:	b0c00007 	ldb	r3,0(r22)
10007864:	003ec606 	br	10007380 <__alt_data_end+0xf8007380>
10007868:	b0c00007 	ldb	r3,0(r22)
1000786c:	00801b04 	movi	r2,108
10007870:	18832026 	beq	r3,r2,100084f4 <___vfiprintf_internal_r+0x12e8>
10007874:	8c400414 	ori	r17,r17,16
10007878:	003ec106 	br	10007380 <__alt_data_end+0xf8007380>
1000787c:	9cc03fcc 	andi	r19,r19,255
10007880:	b811883a 	mov	r8,r23
10007884:	9803981e 	bne	r19,zero,100086e8 <___vfiprintf_internal_r+0x14dc>
10007888:	8880080c 	andi	r2,r17,32
1000788c:	1002be26 	beq	r2,zero,10008388 <___vfiprintf_internal_r+0x117c>
10007890:	d9002217 	ldw	r4,136(sp)
10007894:	d9402417 	ldw	r5,144(sp)
10007898:	20800017 	ldw	r2,0(r4)
1000789c:	2807d7fa 	srai	r3,r5,31
100078a0:	21000104 	addi	r4,r4,4
100078a4:	d9002215 	stw	r4,136(sp)
100078a8:	11400015 	stw	r5,0(r2)
100078ac:	10c00115 	stw	r3,4(r2)
100078b0:	003e8a06 	br	100072dc <__alt_data_end+0xf80072dc>
100078b4:	9cc03fcc 	andi	r19,r19,255
100078b8:	b811883a 	mov	r8,r23
100078bc:	9803871e 	bne	r19,zero,100086dc <___vfiprintf_internal_r+0x14d0>
100078c0:	8880080c 	andi	r2,r17,32
100078c4:	10009a26 	beq	r2,zero,10007b30 <___vfiprintf_internal_r+0x924>
100078c8:	d9002217 	ldw	r4,136(sp)
100078cc:	d8001d85 	stb	zero,118(sp)
100078d0:	20800204 	addi	r2,r4,8
100078d4:	24c00017 	ldw	r19,0(r4)
100078d8:	25000117 	ldw	r20,4(r4)
100078dc:	8002a416 	blt	r16,zero,10008370 <___vfiprintf_internal_r+0x1164>
100078e0:	013fdfc4 	movi	r4,-129
100078e4:	9d06b03a 	or	r3,r19,r20
100078e8:	d8802215 	stw	r2,136(sp)
100078ec:	8922703a 	and	r17,r17,r4
100078f0:	18009b26 	beq	r3,zero,10007b60 <___vfiprintf_internal_r+0x954>
100078f4:	002b883a 	mov	r21,zero
100078f8:	ddc01a04 	addi	r23,sp,104
100078fc:	9806d0fa 	srli	r3,r19,3
10007900:	a008977a 	slli	r4,r20,29
10007904:	a028d0fa 	srli	r20,r20,3
10007908:	9cc001cc 	andi	r19,r19,7
1000790c:	98800c04 	addi	r2,r19,48
10007910:	bdffffc4 	addi	r23,r23,-1
10007914:	20e6b03a 	or	r19,r4,r3
10007918:	b8800005 	stb	r2,0(r23)
1000791c:	9d06b03a 	or	r3,r19,r20
10007920:	183ff61e 	bne	r3,zero,100078fc <__alt_data_end+0xf80078fc>
10007924:	88c0004c 	andi	r3,r17,1
10007928:	18021f1e 	bne	r3,zero,100081a8 <___vfiprintf_internal_r+0xf9c>
1000792c:	d9401e17 	ldw	r5,120(sp)
10007930:	2de9c83a 	sub	r20,r5,r23
10007934:	003f3806 	br	10007618 <__alt_data_end+0xf8007618>
10007938:	9cc03fcc 	andi	r19,r19,255
1000793c:	b811883a 	mov	r8,r23
10007940:	98034f1e 	bne	r19,zero,10008680 <___vfiprintf_internal_r+0x1474>
10007944:	00840074 	movhi	r2,4097
10007948:	10be7404 	addi	r2,r2,-1584
1000794c:	d8802615 	stw	r2,152(sp)
10007950:	8880080c 	andi	r2,r17,32
10007954:	1000ac26 	beq	r2,zero,10007c08 <___vfiprintf_internal_r+0x9fc>
10007958:	d9002217 	ldw	r4,136(sp)
1000795c:	24c00017 	ldw	r19,0(r4)
10007960:	25000117 	ldw	r20,4(r4)
10007964:	21000204 	addi	r4,r4,8
10007968:	d9002215 	stw	r4,136(sp)
1000796c:	8880004c 	andi	r2,r17,1
10007970:	1001e726 	beq	r2,zero,10008110 <___vfiprintf_internal_r+0xf04>
10007974:	9d04b03a 	or	r2,r19,r20
10007978:	10025c1e 	bne	r2,zero,100082ec <___vfiprintf_internal_r+0x10e0>
1000797c:	d8001d85 	stb	zero,118(sp)
10007980:	80024416 	blt	r16,zero,10008294 <___vfiprintf_internal_r+0x1088>
10007984:	00bfdfc4 	movi	r2,-129
10007988:	88a2703a 	and	r17,r17,r2
1000798c:	003f1d06 	br	10007604 <__alt_data_end+0xf8007604>
10007990:	d8c02217 	ldw	r3,136(sp)
10007994:	04c00044 	movi	r19,1
10007998:	b811883a 	mov	r8,r23
1000799c:	18800017 	ldw	r2,0(r3)
100079a0:	18c00104 	addi	r3,r3,4
100079a4:	d8001d85 	stb	zero,118(sp)
100079a8:	d8801005 	stb	r2,64(sp)
100079ac:	d8c02215 	stw	r3,136(sp)
100079b0:	9829883a 	mov	r20,r19
100079b4:	ddc01004 	addi	r23,sp,64
100079b8:	0021883a 	mov	r16,zero
100079bc:	003f1e06 	br	10007638 <__alt_data_end+0xf8007638>
100079c0:	9cc03fcc 	andi	r19,r19,255
100079c4:	b811883a 	mov	r8,r23
100079c8:	9803331e 	bne	r19,zero,10008698 <___vfiprintf_internal_r+0x148c>
100079cc:	8880080c 	andi	r2,r17,32
100079d0:	10004826 	beq	r2,zero,10007af4 <___vfiprintf_internal_r+0x8e8>
100079d4:	d9002217 	ldw	r4,136(sp)
100079d8:	20800117 	ldw	r2,4(r4)
100079dc:	24c00017 	ldw	r19,0(r4)
100079e0:	21000204 	addi	r4,r4,8
100079e4:	d9002215 	stw	r4,136(sp)
100079e8:	1029883a 	mov	r20,r2
100079ec:	10024c16 	blt	r2,zero,10008320 <___vfiprintf_internal_r+0x1114>
100079f0:	dd401d83 	ldbu	r21,118(sp)
100079f4:	80007116 	blt	r16,zero,10007bbc <___vfiprintf_internal_r+0x9b0>
100079f8:	00ffdfc4 	movi	r3,-129
100079fc:	9d04b03a 	or	r2,r19,r20
10007a00:	88e2703a 	and	r17,r17,r3
10007a04:	1000d126 	beq	r2,zero,10007d4c <___vfiprintf_internal_r+0xb40>
10007a08:	a0023526 	beq	r20,zero,100082e0 <___vfiprintf_internal_r+0x10d4>
10007a0c:	ddc01a04 	addi	r23,sp,104
10007a10:	4039883a 	mov	fp,r8
10007a14:	9809883a 	mov	r4,r19
10007a18:	a00b883a 	mov	r5,r20
10007a1c:	01800284 	movi	r6,10
10007a20:	000f883a 	mov	r7,zero
10007a24:	000a2c00 	call	1000a2c0 <__umoddi3>
10007a28:	10800c04 	addi	r2,r2,48
10007a2c:	bdffffc4 	addi	r23,r23,-1
10007a30:	9809883a 	mov	r4,r19
10007a34:	a00b883a 	mov	r5,r20
10007a38:	b8800005 	stb	r2,0(r23)
10007a3c:	01800284 	movi	r6,10
10007a40:	000f883a 	mov	r7,zero
10007a44:	0009cc40 	call	10009cc4 <__udivdi3>
10007a48:	1027883a 	mov	r19,r2
10007a4c:	10c4b03a 	or	r2,r2,r3
10007a50:	1829883a 	mov	r20,r3
10007a54:	103fef1e 	bne	r2,zero,10007a14 <__alt_data_end+0xf8007a14>
10007a58:	d9001e17 	ldw	r4,120(sp)
10007a5c:	e011883a 	mov	r8,fp
10007a60:	25e9c83a 	sub	r20,r4,r23
10007a64:	003eec06 	br	10007618 <__alt_data_end+0xf8007618>
10007a68:	d8802307 	ldb	r2,140(sp)
10007a6c:	1002361e 	bne	r2,zero,10008348 <___vfiprintf_internal_r+0x113c>
10007a70:	00c00804 	movi	r3,32
10007a74:	d8c02305 	stb	r3,140(sp)
10007a78:	04c00044 	movi	r19,1
10007a7c:	b0c00007 	ldb	r3,0(r22)
10007a80:	003e3f06 	br	10007380 <__alt_data_end+0xf8007380>
10007a84:	8c400054 	ori	r17,r17,1
10007a88:	b0c00007 	ldb	r3,0(r22)
10007a8c:	003e3c06 	br	10007380 <__alt_data_end+0xf8007380>
10007a90:	8c402014 	ori	r17,r17,128
10007a94:	b0c00007 	ldb	r3,0(r22)
10007a98:	003e3906 	br	10007380 <__alt_data_end+0xf8007380>
10007a9c:	dc002715 	stw	r16,156(sp)
10007aa0:	d8002515 	stw	zero,148(sp)
10007aa4:	1f3ff404 	addi	fp,r3,-48
10007aa8:	0009883a 	mov	r4,zero
10007aac:	b021883a 	mov	r16,r22
10007ab0:	01400284 	movi	r5,10
10007ab4:	000aa380 	call	1000aa38 <__mulsi3>
10007ab8:	80c00007 	ldb	r3,0(r16)
10007abc:	e089883a 	add	r4,fp,r2
10007ac0:	b5800044 	addi	r22,r22,1
10007ac4:	1f3ff404 	addi	fp,r3,-48
10007ac8:	b021883a 	mov	r16,r22
10007acc:	af3ff82e 	bgeu	r21,fp,10007ab0 <__alt_data_end+0xf8007ab0>
10007ad0:	d9002515 	stw	r4,148(sp)
10007ad4:	dc002717 	ldw	r16,156(sp)
10007ad8:	003e2a06 	br	10007384 <__alt_data_end+0xf8007384>
10007adc:	9cc03fcc 	andi	r19,r19,255
10007ae0:	b811883a 	mov	r8,r23
10007ae4:	9802e91e 	bne	r19,zero,1000868c <___vfiprintf_internal_r+0x1480>
10007ae8:	8c400414 	ori	r17,r17,16
10007aec:	8880080c 	andi	r2,r17,32
10007af0:	103fb81e 	bne	r2,zero,100079d4 <__alt_data_end+0xf80079d4>
10007af4:	8880040c 	andi	r2,r17,16
10007af8:	10022e26 	beq	r2,zero,100083b4 <___vfiprintf_internal_r+0x11a8>
10007afc:	d9402217 	ldw	r5,136(sp)
10007b00:	2cc00017 	ldw	r19,0(r5)
10007b04:	29400104 	addi	r5,r5,4
10007b08:	d9402215 	stw	r5,136(sp)
10007b0c:	9829d7fa 	srai	r20,r19,31
10007b10:	a005883a 	mov	r2,r20
10007b14:	003fb506 	br	100079ec <__alt_data_end+0xf80079ec>
10007b18:	9cc03fcc 	andi	r19,r19,255
10007b1c:	b811883a 	mov	r8,r23
10007b20:	9802fa1e 	bne	r19,zero,1000870c <___vfiprintf_internal_r+0x1500>
10007b24:	8c400414 	ori	r17,r17,16
10007b28:	8880080c 	andi	r2,r17,32
10007b2c:	103f661e 	bne	r2,zero,100078c8 <__alt_data_end+0xf80078c8>
10007b30:	8880040c 	andi	r2,r17,16
10007b34:	10020626 	beq	r2,zero,10008350 <___vfiprintf_internal_r+0x1144>
10007b38:	d9402217 	ldw	r5,136(sp)
10007b3c:	d8001d85 	stb	zero,118(sp)
10007b40:	0029883a 	mov	r20,zero
10007b44:	28800104 	addi	r2,r5,4
10007b48:	2cc00017 	ldw	r19,0(r5)
10007b4c:	80020816 	blt	r16,zero,10008370 <___vfiprintf_internal_r+0x1164>
10007b50:	00ffdfc4 	movi	r3,-129
10007b54:	d8802215 	stw	r2,136(sp)
10007b58:	88e2703a 	and	r17,r17,r3
10007b5c:	983f651e 	bne	r19,zero,100078f4 <__alt_data_end+0xf80078f4>
10007b60:	002b883a 	mov	r21,zero
10007b64:	8002cf26 	beq	r16,zero,100086a4 <___vfiprintf_internal_r+0x1498>
10007b68:	0027883a 	mov	r19,zero
10007b6c:	0029883a 	mov	r20,zero
10007b70:	003f6106 	br	100078f8 <__alt_data_end+0xf80078f8>
10007b74:	9cc03fcc 	andi	r19,r19,255
10007b78:	b811883a 	mov	r8,r23
10007b7c:	9802e01e 	bne	r19,zero,10008700 <___vfiprintf_internal_r+0x14f4>
10007b80:	8c400414 	ori	r17,r17,16
10007b84:	8880080c 	andi	r2,r17,32
10007b88:	1000641e 	bne	r2,zero,10007d1c <___vfiprintf_internal_r+0xb10>
10007b8c:	8880040c 	andi	r2,r17,16
10007b90:	1001c81e 	bne	r2,zero,100082b4 <___vfiprintf_internal_r+0x10a8>
10007b94:	8880100c 	andi	r2,r17,64
10007b98:	d8001d85 	stb	zero,118(sp)
10007b9c:	1002281e 	bne	r2,zero,10008440 <___vfiprintf_internal_r+0x1234>
10007ba0:	d9002217 	ldw	r4,136(sp)
10007ba4:	0029883a 	mov	r20,zero
10007ba8:	20800104 	addi	r2,r4,4
10007bac:	24c00017 	ldw	r19,0(r4)
10007bb0:	8001c60e 	bge	r16,zero,100082cc <___vfiprintf_internal_r+0x10c0>
10007bb4:	d8802215 	stw	r2,136(sp)
10007bb8:	002b883a 	mov	r21,zero
10007bbc:	9d04b03a 	or	r2,r19,r20
10007bc0:	103f911e 	bne	r2,zero,10007a08 <__alt_data_end+0xf8007a08>
10007bc4:	00800044 	movi	r2,1
10007bc8:	10803fcc 	andi	r2,r2,255
10007bcc:	00c00044 	movi	r3,1
10007bd0:	10c05f26 	beq	r2,r3,10007d50 <___vfiprintf_internal_r+0xb44>
10007bd4:	00c00084 	movi	r3,2
10007bd8:	10ffe31e 	bne	r2,r3,10007b68 <__alt_data_end+0xf8007b68>
10007bdc:	0027883a 	mov	r19,zero
10007be0:	0029883a 	mov	r20,zero
10007be4:	00015106 	br	1000812c <___vfiprintf_internal_r+0xf20>
10007be8:	9cc03fcc 	andi	r19,r19,255
10007bec:	b811883a 	mov	r8,r23
10007bf0:	9802c01e 	bne	r19,zero,100086f4 <___vfiprintf_internal_r+0x14e8>
10007bf4:	01440074 	movhi	r5,4097
10007bf8:	297e6f04 	addi	r5,r5,-1604
10007bfc:	d9402615 	stw	r5,152(sp)
10007c00:	8880080c 	andi	r2,r17,32
10007c04:	103f541e 	bne	r2,zero,10007958 <__alt_data_end+0xf8007958>
10007c08:	8880040c 	andi	r2,r17,16
10007c0c:	1001f226 	beq	r2,zero,100083d8 <___vfiprintf_internal_r+0x11cc>
10007c10:	d9402217 	ldw	r5,136(sp)
10007c14:	0029883a 	mov	r20,zero
10007c18:	2cc00017 	ldw	r19,0(r5)
10007c1c:	29400104 	addi	r5,r5,4
10007c20:	d9402215 	stw	r5,136(sp)
10007c24:	003f5106 	br	1000796c <__alt_data_end+0xf800796c>
10007c28:	d8c02217 	ldw	r3,136(sp)
10007c2c:	b811883a 	mov	r8,r23
10007c30:	d8001d85 	stb	zero,118(sp)
10007c34:	1dc00017 	ldw	r23,0(r3)
10007c38:	1f000104 	addi	fp,r3,4
10007c3c:	b8025926 	beq	r23,zero,100085a4 <___vfiprintf_internal_r+0x1398>
10007c40:	80023316 	blt	r16,zero,10008510 <___vfiprintf_internal_r+0x1304>
10007c44:	800d883a 	mov	r6,r16
10007c48:	000b883a 	mov	r5,zero
10007c4c:	b809883a 	mov	r4,r23
10007c50:	da002a15 	stw	r8,168(sp)
10007c54:	000580c0 	call	1000580c <memchr>
10007c58:	da002a17 	ldw	r8,168(sp)
10007c5c:	10026826 	beq	r2,zero,10008600 <___vfiprintf_internal_r+0x13f4>
10007c60:	15e9c83a 	sub	r20,r2,r23
10007c64:	dd401d83 	ldbu	r21,118(sp)
10007c68:	df002215 	stw	fp,136(sp)
10007c6c:	0021883a 	mov	r16,zero
10007c70:	003e6906 	br	10007618 <__alt_data_end+0xf8007618>
10007c74:	9cc03fcc 	andi	r19,r19,255
10007c78:	b811883a 	mov	r8,r23
10007c7c:	983fc126 	beq	r19,zero,10007b84 <__alt_data_end+0xf8007b84>
10007c80:	d8c02303 	ldbu	r3,140(sp)
10007c84:	d8c01d85 	stb	r3,118(sp)
10007c88:	003fbe06 	br	10007b84 <__alt_data_end+0xf8007b84>
10007c8c:	d9002217 	ldw	r4,136(sp)
10007c90:	d9402217 	ldw	r5,136(sp)
10007c94:	21000017 	ldw	r4,0(r4)
10007c98:	28800104 	addi	r2,r5,4
10007c9c:	d9002515 	stw	r4,148(sp)
10007ca0:	203e3d16 	blt	r4,zero,10007598 <__alt_data_end+0xf8007598>
10007ca4:	d8802215 	stw	r2,136(sp)
10007ca8:	b0c00007 	ldb	r3,0(r22)
10007cac:	003db406 	br	10007380 <__alt_data_end+0xf8007380>
10007cb0:	00c00ac4 	movi	r3,43
10007cb4:	d8c02305 	stb	r3,140(sp)
10007cb8:	04c00044 	movi	r19,1
10007cbc:	b0c00007 	ldb	r3,0(r22)
10007cc0:	003daf06 	br	10007380 <__alt_data_end+0xf8007380>
10007cc4:	b0c00007 	ldb	r3,0(r22)
10007cc8:	01000a84 	movi	r4,42
10007ccc:	b4000044 	addi	r16,r22,1
10007cd0:	19025e26 	beq	r3,r4,1000864c <___vfiprintf_internal_r+0x1440>
10007cd4:	1f3ff404 	addi	fp,r3,-48
10007cd8:	0009883a 	mov	r4,zero
10007cdc:	af025236 	bltu	r21,fp,10008628 <___vfiprintf_internal_r+0x141c>
10007ce0:	01400284 	movi	r5,10
10007ce4:	000aa380 	call	1000aa38 <__mulsi3>
10007ce8:	80c00007 	ldb	r3,0(r16)
10007cec:	1709883a 	add	r4,r2,fp
10007cf0:	85800044 	addi	r22,r16,1
10007cf4:	1f3ff404 	addi	fp,r3,-48
10007cf8:	b021883a 	mov	r16,r22
10007cfc:	af3ff82e 	bgeu	r21,fp,10007ce0 <__alt_data_end+0xf8007ce0>
10007d00:	2021883a 	mov	r16,r4
10007d04:	203d9f0e 	bge	r4,zero,10007384 <__alt_data_end+0xf8007384>
10007d08:	043fffc4 	movi	r16,-1
10007d0c:	003d9d06 	br	10007384 <__alt_data_end+0xf8007384>
10007d10:	8c401014 	ori	r17,r17,64
10007d14:	b0c00007 	ldb	r3,0(r22)
10007d18:	003d9906 	br	10007380 <__alt_data_end+0xf8007380>
10007d1c:	d9002217 	ldw	r4,136(sp)
10007d20:	d8001d85 	stb	zero,118(sp)
10007d24:	20c00204 	addi	r3,r4,8
10007d28:	24c00017 	ldw	r19,0(r4)
10007d2c:	25000117 	ldw	r20,4(r4)
10007d30:	8001e716 	blt	r16,zero,100084d0 <___vfiprintf_internal_r+0x12c4>
10007d34:	013fdfc4 	movi	r4,-129
10007d38:	9d04b03a 	or	r2,r19,r20
10007d3c:	d8c02215 	stw	r3,136(sp)
10007d40:	8922703a 	and	r17,r17,r4
10007d44:	002b883a 	mov	r21,zero
10007d48:	103f2f1e 	bne	r2,zero,10007a08 <__alt_data_end+0xf8007a08>
10007d4c:	803e2f26 	beq	r16,zero,1000760c <__alt_data_end+0xf800760c>
10007d50:	0027883a 	mov	r19,zero
10007d54:	9cc00c04 	addi	r19,r19,48
10007d58:	dcc019c5 	stb	r19,103(sp)
10007d5c:	dd002817 	ldw	r20,160(sp)
10007d60:	ddc019c4 	addi	r23,sp,103
10007d64:	003e2c06 	br	10007618 <__alt_data_end+0xf8007618>
10007d68:	9cc03fcc 	andi	r19,r19,255
10007d6c:	b811883a 	mov	r8,r23
10007d70:	9802571e 	bne	r19,zero,100086d0 <___vfiprintf_internal_r+0x14c4>
10007d74:	18005726 	beq	r3,zero,10007ed4 <___vfiprintf_internal_r+0xcc8>
10007d78:	04c00044 	movi	r19,1
10007d7c:	d8c01005 	stb	r3,64(sp)
10007d80:	d8001d85 	stb	zero,118(sp)
10007d84:	9829883a 	mov	r20,r19
10007d88:	ddc01004 	addi	r23,sp,64
10007d8c:	003f0a06 	br	100079b8 <__alt_data_end+0xf80079b8>
10007d90:	d9402017 	ldw	r5,128(sp)
10007d94:	d9002117 	ldw	r4,132(sp)
10007d98:	d9801a04 	addi	r6,sp,104
10007d9c:	da802a15 	stw	r10,168(sp)
10007da0:	00070f80 	call	100070f8 <__sprint_r.part.0>
10007da4:	da802a17 	ldw	r10,168(sp)
10007da8:	1000501e 	bne	r2,zero,10007eec <___vfiprintf_internal_r+0xce0>
10007dac:	d9801b17 	ldw	r6,108(sp)
10007db0:	d8801c17 	ldw	r2,112(sp)
10007db4:	d811883a 	mov	r8,sp
10007db8:	31000044 	addi	r4,r6,1
10007dbc:	003e3606 	br	10007698 <__alt_data_end+0xf8007698>
10007dc0:	d9001b17 	ldw	r4,108(sp)
10007dc4:	d8801c17 	ldw	r2,112(sp)
10007dc8:	21400044 	addi	r5,r4,1
10007dcc:	d9801d87 	ldb	r6,118(sp)
10007dd0:	303e5226 	beq	r6,zero,1000771c <__alt_data_end+0xf800771c>
10007dd4:	01800044 	movi	r6,1
10007dd8:	d9001d84 	addi	r4,sp,118
10007ddc:	1185883a 	add	r2,r2,r6
10007de0:	41000015 	stw	r4,0(r8)
10007de4:	41800115 	stw	r6,4(r8)
10007de8:	d8801c15 	stw	r2,112(sp)
10007dec:	d9401b15 	stw	r5,108(sp)
10007df0:	010001c4 	movi	r4,7
10007df4:	2140b00e 	bge	r4,r5,100080b8 <___vfiprintf_internal_r+0xeac>
10007df8:	1000f61e 	bne	r2,zero,100081d4 <___vfiprintf_internal_r+0xfc8>
10007dfc:	3800b31e 	bne	r7,zero,100080cc <___vfiprintf_internal_r+0xec0>
10007e00:	0009883a 	mov	r4,zero
10007e04:	300b883a 	mov	r5,r6
10007e08:	d811883a 	mov	r8,sp
10007e0c:	01802004 	movi	r6,128
10007e10:	19be5226 	beq	r3,r6,1000775c <__alt_data_end+0xf800775c>
10007e14:	8521c83a 	sub	r16,r16,r20
10007e18:	043e790e 	bge	zero,r16,10007800 <__alt_data_end+0xf8007800>
10007e1c:	05400404 	movi	r21,16
10007e20:	ac01b00e 	bge	r21,r16,100084e4 <___vfiprintf_internal_r+0x12d8>
10007e24:	01440074 	movhi	r5,4097
10007e28:	297ed504 	addi	r5,r5,-1196
10007e2c:	d9402315 	stw	r5,140(sp)
10007e30:	070001c4 	movi	fp,7
10007e34:	00000506 	br	10007e4c <___vfiprintf_internal_r+0xc40>
10007e38:	21400084 	addi	r5,r4,2
10007e3c:	42000204 	addi	r8,r8,8
10007e40:	1809883a 	mov	r4,r3
10007e44:	843ffc04 	addi	r16,r16,-16
10007e48:	ac000d0e 	bge	r21,r16,10007e80 <___vfiprintf_internal_r+0xc74>
10007e4c:	10800404 	addi	r2,r2,16
10007e50:	20c00044 	addi	r3,r4,1
10007e54:	44800015 	stw	r18,0(r8)
10007e58:	45400115 	stw	r21,4(r8)
10007e5c:	d8801c15 	stw	r2,112(sp)
10007e60:	d8c01b15 	stw	r3,108(sp)
10007e64:	e0fff40e 	bge	fp,r3,10007e38 <__alt_data_end+0xf8007e38>
10007e68:	1000101e 	bne	r2,zero,10007eac <___vfiprintf_internal_r+0xca0>
10007e6c:	843ffc04 	addi	r16,r16,-16
10007e70:	01400044 	movi	r5,1
10007e74:	0009883a 	mov	r4,zero
10007e78:	d811883a 	mov	r8,sp
10007e7c:	ac3ff316 	blt	r21,r16,10007e4c <__alt_data_end+0xf8007e4c>
10007e80:	d8c02317 	ldw	r3,140(sp)
10007e84:	1405883a 	add	r2,r2,r16
10007e88:	44000115 	stw	r16,4(r8)
10007e8c:	40c00015 	stw	r3,0(r8)
10007e90:	d8801c15 	stw	r2,112(sp)
10007e94:	d9401b15 	stw	r5,108(sp)
10007e98:	00c001c4 	movi	r3,7
10007e9c:	19401916 	blt	r3,r5,10007f04 <___vfiprintf_internal_r+0xcf8>
10007ea0:	42000204 	addi	r8,r8,8
10007ea4:	29400044 	addi	r5,r5,1
10007ea8:	003e5506 	br	10007800 <__alt_data_end+0xf8007800>
10007eac:	d9402017 	ldw	r5,128(sp)
10007eb0:	d9002117 	ldw	r4,132(sp)
10007eb4:	d9801a04 	addi	r6,sp,104
10007eb8:	00070f80 	call	100070f8 <__sprint_r.part.0>
10007ebc:	10000b1e 	bne	r2,zero,10007eec <___vfiprintf_internal_r+0xce0>
10007ec0:	d9001b17 	ldw	r4,108(sp)
10007ec4:	d8801c17 	ldw	r2,112(sp)
10007ec8:	d811883a 	mov	r8,sp
10007ecc:	21400044 	addi	r5,r4,1
10007ed0:	003fdc06 	br	10007e44 <__alt_data_end+0xf8007e44>
10007ed4:	d8801c17 	ldw	r2,112(sp)
10007ed8:	10000426 	beq	r2,zero,10007eec <___vfiprintf_internal_r+0xce0>
10007edc:	d9402017 	ldw	r5,128(sp)
10007ee0:	d9002117 	ldw	r4,132(sp)
10007ee4:	d9801a04 	addi	r6,sp,104
10007ee8:	00070f80 	call	100070f8 <__sprint_r.part.0>
10007eec:	d9402017 	ldw	r5,128(sp)
10007ef0:	2880030b 	ldhu	r2,12(r5)
10007ef4:	1080100c 	andi	r2,r2,64
10007ef8:	10014d1e 	bne	r2,zero,10008430 <___vfiprintf_internal_r+0x1224>
10007efc:	d8802417 	ldw	r2,144(sp)
10007f00:	003d9706 	br	10007560 <__alt_data_end+0xf8007560>
10007f04:	1000d21e 	bne	r2,zero,10008250 <___vfiprintf_internal_r+0x1044>
10007f08:	00c00044 	movi	r3,1
10007f0c:	a005883a 	mov	r2,r20
10007f10:	ddc00015 	stw	r23,0(sp)
10007f14:	dd000115 	stw	r20,4(sp)
10007f18:	dd001c15 	stw	r20,112(sp)
10007f1c:	d8c01b15 	stw	r3,108(sp)
10007f20:	d811883a 	mov	r8,sp
10007f24:	42000204 	addi	r8,r8,8
10007f28:	8c40010c 	andi	r17,r17,4
10007f2c:	88004026 	beq	r17,zero,10008030 <___vfiprintf_internal_r+0xe24>
10007f30:	d9002517 	ldw	r4,148(sp)
10007f34:	24e3c83a 	sub	r17,r4,r19
10007f38:	04403d0e 	bge	zero,r17,10008030 <___vfiprintf_internal_r+0xe24>
10007f3c:	04000404 	movi	r16,16
10007f40:	8441a90e 	bge	r16,r17,100085e8 <___vfiprintf_internal_r+0x13dc>
10007f44:	00c40074 	movhi	r3,4097
10007f48:	18fed904 	addi	r3,r3,-1180
10007f4c:	d9001b17 	ldw	r4,108(sp)
10007f50:	d8c02315 	stw	r3,140(sp)
10007f54:	050001c4 	movi	r20,7
10007f58:	dd402117 	ldw	r21,132(sp)
10007f5c:	ddc02017 	ldw	r23,128(sp)
10007f60:	00000506 	br	10007f78 <___vfiprintf_internal_r+0xd6c>
10007f64:	21400084 	addi	r5,r4,2
10007f68:	42000204 	addi	r8,r8,8
10007f6c:	1809883a 	mov	r4,r3
10007f70:	8c7ffc04 	addi	r17,r17,-16
10007f74:	84400f0e 	bge	r16,r17,10007fb4 <___vfiprintf_internal_r+0xda8>
10007f78:	01440074 	movhi	r5,4097
10007f7c:	10800404 	addi	r2,r2,16
10007f80:	20c00044 	addi	r3,r4,1
10007f84:	297ed904 	addi	r5,r5,-1180
10007f88:	41400015 	stw	r5,0(r8)
10007f8c:	44000115 	stw	r16,4(r8)
10007f90:	d8801c15 	stw	r2,112(sp)
10007f94:	d8c01b15 	stw	r3,108(sp)
10007f98:	a0fff20e 	bge	r20,r3,10007f64 <__alt_data_end+0xf8007f64>
10007f9c:	1000141e 	bne	r2,zero,10007ff0 <___vfiprintf_internal_r+0xde4>
10007fa0:	8c7ffc04 	addi	r17,r17,-16
10007fa4:	01400044 	movi	r5,1
10007fa8:	0009883a 	mov	r4,zero
10007fac:	d811883a 	mov	r8,sp
10007fb0:	847ff116 	blt	r16,r17,10007f78 <__alt_data_end+0xf8007f78>
10007fb4:	d8c02317 	ldw	r3,140(sp)
10007fb8:	1445883a 	add	r2,r2,r17
10007fbc:	44400115 	stw	r17,4(r8)
10007fc0:	40c00015 	stw	r3,0(r8)
10007fc4:	d8801c15 	stw	r2,112(sp)
10007fc8:	d9401b15 	stw	r5,108(sp)
10007fcc:	00c001c4 	movi	r3,7
10007fd0:	1940170e 	bge	r3,r5,10008030 <___vfiprintf_internal_r+0xe24>
10007fd4:	1000101e 	bne	r2,zero,10008018 <___vfiprintf_internal_r+0xe0c>
10007fd8:	d8802517 	ldw	r2,148(sp)
10007fdc:	14c11616 	blt	r2,r19,10008438 <___vfiprintf_internal_r+0x122c>
10007fe0:	d9002417 	ldw	r4,144(sp)
10007fe4:	2089883a 	add	r4,r4,r2
10007fe8:	d9002415 	stw	r4,144(sp)
10007fec:	003e1806 	br	10007850 <__alt_data_end+0xf8007850>
10007ff0:	d9801a04 	addi	r6,sp,104
10007ff4:	b80b883a 	mov	r5,r23
10007ff8:	a809883a 	mov	r4,r21
10007ffc:	00070f80 	call	100070f8 <__sprint_r.part.0>
10008000:	103fba1e 	bne	r2,zero,10007eec <__alt_data_end+0xf8007eec>
10008004:	d9001b17 	ldw	r4,108(sp)
10008008:	d8801c17 	ldw	r2,112(sp)
1000800c:	d811883a 	mov	r8,sp
10008010:	21400044 	addi	r5,r4,1
10008014:	003fd606 	br	10007f70 <__alt_data_end+0xf8007f70>
10008018:	d9402017 	ldw	r5,128(sp)
1000801c:	d9002117 	ldw	r4,132(sp)
10008020:	d9801a04 	addi	r6,sp,104
10008024:	00070f80 	call	100070f8 <__sprint_r.part.0>
10008028:	103fb01e 	bne	r2,zero,10007eec <__alt_data_end+0xf8007eec>
1000802c:	d8801c17 	ldw	r2,112(sp)
10008030:	d8c02517 	ldw	r3,148(sp)
10008034:	1cc0010e 	bge	r3,r19,1000803c <___vfiprintf_internal_r+0xe30>
10008038:	9807883a 	mov	r3,r19
1000803c:	d9002417 	ldw	r4,144(sp)
10008040:	20c9883a 	add	r4,r4,r3
10008044:	d9002415 	stw	r4,144(sp)
10008048:	103e0126 	beq	r2,zero,10007850 <__alt_data_end+0xf8007850>
1000804c:	d9402017 	ldw	r5,128(sp)
10008050:	d9002117 	ldw	r4,132(sp)
10008054:	d9801a04 	addi	r6,sp,104
10008058:	00070f80 	call	100070f8 <__sprint_r.part.0>
1000805c:	103dfc26 	beq	r2,zero,10007850 <__alt_data_end+0xf8007850>
10008060:	003fa206 	br	10007eec <__alt_data_end+0xf8007eec>
10008064:	d9402017 	ldw	r5,128(sp)
10008068:	d9002117 	ldw	r4,132(sp)
1000806c:	d9801a04 	addi	r6,sp,104
10008070:	d9c02b15 	stw	r7,172(sp)
10008074:	00070f80 	call	100070f8 <__sprint_r.part.0>
10008078:	d9c02b17 	ldw	r7,172(sp)
1000807c:	103f9b1e 	bne	r2,zero,10007eec <__alt_data_end+0xf8007eec>
10008080:	d9001b17 	ldw	r4,108(sp)
10008084:	d8801c17 	ldw	r2,112(sp)
10008088:	d811883a 	mov	r8,sp
1000808c:	21800044 	addi	r6,r4,1
10008090:	003dbf06 	br	10007790 <__alt_data_end+0xf8007790>
10008094:	1000d81e 	bne	r2,zero,100083f8 <___vfiprintf_internal_r+0x11ec>
10008098:	d9001d87 	ldb	r4,118(sp)
1000809c:	20000a26 	beq	r4,zero,100080c8 <___vfiprintf_internal_r+0xebc>
100080a0:	00800044 	movi	r2,1
100080a4:	d9001d84 	addi	r4,sp,118
100080a8:	100b883a 	mov	r5,r2
100080ac:	d9000015 	stw	r4,0(sp)
100080b0:	d8800115 	stw	r2,4(sp)
100080b4:	d811883a 	mov	r8,sp
100080b8:	2809883a 	mov	r4,r5
100080bc:	42000204 	addi	r8,r8,8
100080c0:	29400044 	addi	r5,r5,1
100080c4:	003d9506 	br	1000771c <__alt_data_end+0xf800771c>
100080c8:	3800fd26 	beq	r7,zero,100084c0 <___vfiprintf_internal_r+0x12b4>
100080cc:	00800084 	movi	r2,2
100080d0:	d9001d04 	addi	r4,sp,116
100080d4:	d9000015 	stw	r4,0(sp)
100080d8:	d8800115 	stw	r2,4(sp)
100080dc:	01400044 	movi	r5,1
100080e0:	d811883a 	mov	r8,sp
100080e4:	2809883a 	mov	r4,r5
100080e8:	42000204 	addi	r8,r8,8
100080ec:	29400044 	addi	r5,r5,1
100080f0:	003f4606 	br	10007e0c <__alt_data_end+0xf8007e0c>
100080f4:	d8802517 	ldw	r2,148(sp)
100080f8:	14c0010e 	bge	r2,r19,10008100 <___vfiprintf_internal_r+0xef4>
100080fc:	9805883a 	mov	r2,r19
10008100:	d9402417 	ldw	r5,144(sp)
10008104:	288b883a 	add	r5,r5,r2
10008108:	d9402415 	stw	r5,144(sp)
1000810c:	003dd006 	br	10007850 <__alt_data_end+0xf8007850>
10008110:	d8001d85 	stb	zero,118(sp)
10008114:	80005d16 	blt	r16,zero,1000828c <___vfiprintf_internal_r+0x1080>
10008118:	00ffdfc4 	movi	r3,-129
1000811c:	9d04b03a 	or	r2,r19,r20
10008120:	88e2703a 	and	r17,r17,r3
10008124:	103d3726 	beq	r2,zero,10007604 <__alt_data_end+0xf8007604>
10008128:	002b883a 	mov	r21,zero
1000812c:	d9002617 	ldw	r4,152(sp)
10008130:	ddc01a04 	addi	r23,sp,104
10008134:	988003cc 	andi	r2,r19,15
10008138:	a006973a 	slli	r3,r20,28
1000813c:	2085883a 	add	r2,r4,r2
10008140:	9826d13a 	srli	r19,r19,4
10008144:	10800003 	ldbu	r2,0(r2)
10008148:	a028d13a 	srli	r20,r20,4
1000814c:	bdffffc4 	addi	r23,r23,-1
10008150:	1ce6b03a 	or	r19,r3,r19
10008154:	b8800005 	stb	r2,0(r23)
10008158:	9d04b03a 	or	r2,r19,r20
1000815c:	103ff51e 	bne	r2,zero,10008134 <__alt_data_end+0xf8008134>
10008160:	d8801e17 	ldw	r2,120(sp)
10008164:	15e9c83a 	sub	r20,r2,r23
10008168:	003d2b06 	br	10007618 <__alt_data_end+0xf8007618>
1000816c:	d9402017 	ldw	r5,128(sp)
10008170:	d9002117 	ldw	r4,132(sp)
10008174:	d9801a04 	addi	r6,sp,104
10008178:	00070f80 	call	100070f8 <__sprint_r.part.0>
1000817c:	103f5b1e 	bne	r2,zero,10007eec <__alt_data_end+0xf8007eec>
10008180:	d8801c17 	ldw	r2,112(sp)
10008184:	d811883a 	mov	r8,sp
10008188:	003f6706 	br	10007f28 <__alt_data_end+0xf8007f28>
1000818c:	d9402017 	ldw	r5,128(sp)
10008190:	d9002117 	ldw	r4,132(sp)
10008194:	d9801a04 	addi	r6,sp,104
10008198:	00070f80 	call	100070f8 <__sprint_r.part.0>
1000819c:	103f531e 	bne	r2,zero,10007eec <__alt_data_end+0xf8007eec>
100081a0:	d811883a 	mov	r8,sp
100081a4:	003cd906 	br	1000750c <__alt_data_end+0xf800750c>
100081a8:	10803fcc 	andi	r2,r2,255
100081ac:	1080201c 	xori	r2,r2,128
100081b0:	10bfe004 	addi	r2,r2,-128
100081b4:	00c00c04 	movi	r3,48
100081b8:	10ffe926 	beq	r2,r3,10008160 <__alt_data_end+0xf8008160>
100081bc:	b8ffffc5 	stb	r3,-1(r23)
100081c0:	d8c01e17 	ldw	r3,120(sp)
100081c4:	b8bfffc4 	addi	r2,r23,-1
100081c8:	102f883a 	mov	r23,r2
100081cc:	18a9c83a 	sub	r20,r3,r2
100081d0:	003d1106 	br	10007618 <__alt_data_end+0xf8007618>
100081d4:	d9402017 	ldw	r5,128(sp)
100081d8:	d9002117 	ldw	r4,132(sp)
100081dc:	d9801a04 	addi	r6,sp,104
100081e0:	d8c02a15 	stw	r3,168(sp)
100081e4:	d9c02b15 	stw	r7,172(sp)
100081e8:	00070f80 	call	100070f8 <__sprint_r.part.0>
100081ec:	d8c02a17 	ldw	r3,168(sp)
100081f0:	d9c02b17 	ldw	r7,172(sp)
100081f4:	103f3d1e 	bne	r2,zero,10007eec <__alt_data_end+0xf8007eec>
100081f8:	d9001b17 	ldw	r4,108(sp)
100081fc:	d8801c17 	ldw	r2,112(sp)
10008200:	d811883a 	mov	r8,sp
10008204:	21400044 	addi	r5,r4,1
10008208:	003d4406 	br	1000771c <__alt_data_end+0xf800771c>
1000820c:	d9402017 	ldw	r5,128(sp)
10008210:	d9002117 	ldw	r4,132(sp)
10008214:	d9801a04 	addi	r6,sp,104
10008218:	d8c02a15 	stw	r3,168(sp)
1000821c:	00070f80 	call	100070f8 <__sprint_r.part.0>
10008220:	d8c02a17 	ldw	r3,168(sp)
10008224:	103f311e 	bne	r2,zero,10007eec <__alt_data_end+0xf8007eec>
10008228:	d9001b17 	ldw	r4,108(sp)
1000822c:	d8801c17 	ldw	r2,112(sp)
10008230:	d811883a 	mov	r8,sp
10008234:	21400044 	addi	r5,r4,1
10008238:	003ef406 	br	10007e0c <__alt_data_end+0xf8007e0c>
1000823c:	1000bd1e 	bne	r2,zero,10008534 <___vfiprintf_internal_r+0x1328>
10008240:	01400044 	movi	r5,1
10008244:	0009883a 	mov	r4,zero
10008248:	d811883a 	mov	r8,sp
1000824c:	003ef106 	br	10007e14 <__alt_data_end+0xf8007e14>
10008250:	d9402017 	ldw	r5,128(sp)
10008254:	d9002117 	ldw	r4,132(sp)
10008258:	d9801a04 	addi	r6,sp,104
1000825c:	00070f80 	call	100070f8 <__sprint_r.part.0>
10008260:	103f221e 	bne	r2,zero,10007eec <__alt_data_end+0xf8007eec>
10008264:	d9401b17 	ldw	r5,108(sp)
10008268:	d8801c17 	ldw	r2,112(sp)
1000826c:	d811883a 	mov	r8,sp
10008270:	29400044 	addi	r5,r5,1
10008274:	003d6206 	br	10007800 <__alt_data_end+0xf8007800>
10008278:	01440074 	movhi	r5,4097
1000827c:	297e7404 	addi	r5,r5,-1584
10008280:	d9402615 	stw	r5,152(sp)
10008284:	d8c02215 	stw	r3,136(sp)
10008288:	1023883a 	mov	r17,r2
1000828c:	9d04b03a 	or	r2,r19,r20
10008290:	103fa51e 	bne	r2,zero,10008128 <__alt_data_end+0xf8008128>
10008294:	002b883a 	mov	r21,zero
10008298:	00800084 	movi	r2,2
1000829c:	003e4a06 	br	10007bc8 <__alt_data_end+0xf8007bc8>
100082a0:	01440074 	movhi	r5,4097
100082a4:	297e7404 	addi	r5,r5,-1584
100082a8:	002b883a 	mov	r21,zero
100082ac:	d9402615 	stw	r5,152(sp)
100082b0:	003f9e06 	br	1000812c <__alt_data_end+0xf800812c>
100082b4:	d9402217 	ldw	r5,136(sp)
100082b8:	d8001d85 	stb	zero,118(sp)
100082bc:	0029883a 	mov	r20,zero
100082c0:	28800104 	addi	r2,r5,4
100082c4:	2cc00017 	ldw	r19,0(r5)
100082c8:	803e3a16 	blt	r16,zero,10007bb4 <__alt_data_end+0xf8007bb4>
100082cc:	00ffdfc4 	movi	r3,-129
100082d0:	d8802215 	stw	r2,136(sp)
100082d4:	88e2703a 	and	r17,r17,r3
100082d8:	002b883a 	mov	r21,zero
100082dc:	983e9b26 	beq	r19,zero,10007d4c <__alt_data_end+0xf8007d4c>
100082e0:	00800244 	movi	r2,9
100082e4:	14fdc936 	bltu	r2,r19,10007a0c <__alt_data_end+0xf8007a0c>
100082e8:	003e9a06 	br	10007d54 <__alt_data_end+0xf8007d54>
100082ec:	00800c04 	movi	r2,48
100082f0:	d8c01d45 	stb	r3,117(sp)
100082f4:	d8801d05 	stb	r2,116(sp)
100082f8:	d8001d85 	stb	zero,118(sp)
100082fc:	88c00094 	ori	r3,r17,2
10008300:	80009c16 	blt	r16,zero,10008574 <___vfiprintf_internal_r+0x1368>
10008304:	00bfdfc4 	movi	r2,-129
10008308:	88a2703a 	and	r17,r17,r2
1000830c:	8c400094 	ori	r17,r17,2
10008310:	002b883a 	mov	r21,zero
10008314:	003f8506 	br	1000812c <__alt_data_end+0xf800812c>
10008318:	b029883a 	mov	r20,r22
1000831c:	003c0b06 	br	1000734c <__alt_data_end+0xf800734c>
10008320:	04e7c83a 	sub	r19,zero,r19
10008324:	05400b44 	movi	r21,45
10008328:	9804c03a 	cmpne	r2,r19,zero
1000832c:	0529c83a 	sub	r20,zero,r20
10008330:	dd401d85 	stb	r21,118(sp)
10008334:	a0a9c83a 	sub	r20,r20,r2
10008338:	80009716 	blt	r16,zero,10008598 <___vfiprintf_internal_r+0x138c>
1000833c:	00bfdfc4 	movi	r2,-129
10008340:	88a2703a 	and	r17,r17,r2
10008344:	003db006 	br	10007a08 <__alt_data_end+0xf8007a08>
10008348:	b0c00007 	ldb	r3,0(r22)
1000834c:	003c0c06 	br	10007380 <__alt_data_end+0xf8007380>
10008350:	8880100c 	andi	r2,r17,64
10008354:	d8001d85 	stb	zero,118(sp)
10008358:	1000461e 	bne	r2,zero,10008474 <___vfiprintf_internal_r+0x1268>
1000835c:	d9002217 	ldw	r4,136(sp)
10008360:	0029883a 	mov	r20,zero
10008364:	20800104 	addi	r2,r4,4
10008368:	24c00017 	ldw	r19,0(r4)
1000836c:	803df80e 	bge	r16,zero,10007b50 <__alt_data_end+0xf8007b50>
10008370:	9d06b03a 	or	r3,r19,r20
10008374:	d8802215 	stw	r2,136(sp)
10008378:	183d5e1e 	bne	r3,zero,100078f4 <__alt_data_end+0xf80078f4>
1000837c:	002b883a 	mov	r21,zero
10008380:	0005883a 	mov	r2,zero
10008384:	003e1006 	br	10007bc8 <__alt_data_end+0xf8007bc8>
10008388:	8880040c 	andi	r2,r17,16
1000838c:	1000321e 	bne	r2,zero,10008458 <___vfiprintf_internal_r+0x124c>
10008390:	8c40100c 	andi	r17,r17,64
10008394:	88008d26 	beq	r17,zero,100085cc <___vfiprintf_internal_r+0x13c0>
10008398:	d9402217 	ldw	r5,136(sp)
1000839c:	d8c02417 	ldw	r3,144(sp)
100083a0:	28800017 	ldw	r2,0(r5)
100083a4:	29400104 	addi	r5,r5,4
100083a8:	d9402215 	stw	r5,136(sp)
100083ac:	10c0000d 	sth	r3,0(r2)
100083b0:	003bca06 	br	100072dc <__alt_data_end+0xf80072dc>
100083b4:	8880100c 	andi	r2,r17,64
100083b8:	10003a26 	beq	r2,zero,100084a4 <___vfiprintf_internal_r+0x1298>
100083bc:	d8802217 	ldw	r2,136(sp)
100083c0:	14c0000f 	ldh	r19,0(r2)
100083c4:	10800104 	addi	r2,r2,4
100083c8:	d8802215 	stw	r2,136(sp)
100083cc:	9829d7fa 	srai	r20,r19,31
100083d0:	a005883a 	mov	r2,r20
100083d4:	003d8506 	br	100079ec <__alt_data_end+0xf80079ec>
100083d8:	8880100c 	andi	r2,r17,64
100083dc:	10002b26 	beq	r2,zero,1000848c <___vfiprintf_internal_r+0x1280>
100083e0:	d8802217 	ldw	r2,136(sp)
100083e4:	0029883a 	mov	r20,zero
100083e8:	14c0000b 	ldhu	r19,0(r2)
100083ec:	10800104 	addi	r2,r2,4
100083f0:	d8802215 	stw	r2,136(sp)
100083f4:	003d5d06 	br	1000796c <__alt_data_end+0xf800796c>
100083f8:	d9402017 	ldw	r5,128(sp)
100083fc:	d9002117 	ldw	r4,132(sp)
10008400:	d9801a04 	addi	r6,sp,104
10008404:	d8c02a15 	stw	r3,168(sp)
10008408:	d9c02b15 	stw	r7,172(sp)
1000840c:	00070f80 	call	100070f8 <__sprint_r.part.0>
10008410:	d8c02a17 	ldw	r3,168(sp)
10008414:	d9c02b17 	ldw	r7,172(sp)
10008418:	103eb41e 	bne	r2,zero,10007eec <__alt_data_end+0xf8007eec>
1000841c:	d9001b17 	ldw	r4,108(sp)
10008420:	d8801c17 	ldw	r2,112(sp)
10008424:	d811883a 	mov	r8,sp
10008428:	21400044 	addi	r5,r4,1
1000842c:	003e6706 	br	10007dcc <__alt_data_end+0xf8007dcc>
10008430:	00bfffc4 	movi	r2,-1
10008434:	003c4a06 	br	10007560 <__alt_data_end+0xf8007560>
10008438:	9805883a 	mov	r2,r19
1000843c:	003ee806 	br	10007fe0 <__alt_data_end+0xf8007fe0>
10008440:	d8c02217 	ldw	r3,136(sp)
10008444:	0029883a 	mov	r20,zero
10008448:	18800104 	addi	r2,r3,4
1000844c:	1cc0000b 	ldhu	r19,0(r3)
10008450:	803f9e0e 	bge	r16,zero,100082cc <__alt_data_end+0xf80082cc>
10008454:	003dd706 	br	10007bb4 <__alt_data_end+0xf8007bb4>
10008458:	d8c02217 	ldw	r3,136(sp)
1000845c:	d9002417 	ldw	r4,144(sp)
10008460:	18800017 	ldw	r2,0(r3)
10008464:	18c00104 	addi	r3,r3,4
10008468:	d8c02215 	stw	r3,136(sp)
1000846c:	11000015 	stw	r4,0(r2)
10008470:	003b9a06 	br	100072dc <__alt_data_end+0xf80072dc>
10008474:	d8c02217 	ldw	r3,136(sp)
10008478:	0029883a 	mov	r20,zero
1000847c:	18800104 	addi	r2,r3,4
10008480:	1cc0000b 	ldhu	r19,0(r3)
10008484:	803db20e 	bge	r16,zero,10007b50 <__alt_data_end+0xf8007b50>
10008488:	003fb906 	br	10008370 <__alt_data_end+0xf8008370>
1000848c:	d9002217 	ldw	r4,136(sp)
10008490:	0029883a 	mov	r20,zero
10008494:	24c00017 	ldw	r19,0(r4)
10008498:	21000104 	addi	r4,r4,4
1000849c:	d9002215 	stw	r4,136(sp)
100084a0:	003d3206 	br	1000796c <__alt_data_end+0xf800796c>
100084a4:	d8c02217 	ldw	r3,136(sp)
100084a8:	1cc00017 	ldw	r19,0(r3)
100084ac:	18c00104 	addi	r3,r3,4
100084b0:	d8c02215 	stw	r3,136(sp)
100084b4:	9829d7fa 	srai	r20,r19,31
100084b8:	a005883a 	mov	r2,r20
100084bc:	003d4b06 	br	100079ec <__alt_data_end+0xf80079ec>
100084c0:	0009883a 	mov	r4,zero
100084c4:	01400044 	movi	r5,1
100084c8:	d811883a 	mov	r8,sp
100084cc:	003e4f06 	br	10007e0c <__alt_data_end+0xf8007e0c>
100084d0:	d8c02215 	stw	r3,136(sp)
100084d4:	002b883a 	mov	r21,zero
100084d8:	003db806 	br	10007bbc <__alt_data_end+0xf8007bbc>
100084dc:	d811883a 	mov	r8,sp
100084e0:	003e9606 	br	10007f3c <__alt_data_end+0xf8007f3c>
100084e4:	01040074 	movhi	r4,4097
100084e8:	213ed504 	addi	r4,r4,-1196
100084ec:	d9002315 	stw	r4,140(sp)
100084f0:	003e6306 	br	10007e80 <__alt_data_end+0xf8007e80>
100084f4:	b0c00043 	ldbu	r3,1(r22)
100084f8:	8c400814 	ori	r17,r17,32
100084fc:	b5800044 	addi	r22,r22,1
10008500:	18c03fcc 	andi	r3,r3,255
10008504:	18c0201c 	xori	r3,r3,128
10008508:	18ffe004 	addi	r3,r3,-128
1000850c:	003b9c06 	br	10007380 <__alt_data_end+0xf8007380>
10008510:	b809883a 	mov	r4,r23
10008514:	da002a15 	stw	r8,168(sp)
10008518:	00070600 	call	10007060 <strlen>
1000851c:	1029883a 	mov	r20,r2
10008520:	dd401d83 	ldbu	r21,118(sp)
10008524:	df002215 	stw	fp,136(sp)
10008528:	0021883a 	mov	r16,zero
1000852c:	da002a17 	ldw	r8,168(sp)
10008530:	003c3906 	br	10007618 <__alt_data_end+0xf8007618>
10008534:	d9402017 	ldw	r5,128(sp)
10008538:	d9002117 	ldw	r4,132(sp)
1000853c:	d9801a04 	addi	r6,sp,104
10008540:	00070f80 	call	100070f8 <__sprint_r.part.0>
10008544:	103e691e 	bne	r2,zero,10007eec <__alt_data_end+0xf8007eec>
10008548:	d9001b17 	ldw	r4,108(sp)
1000854c:	d8801c17 	ldw	r2,112(sp)
10008550:	d811883a 	mov	r8,sp
10008554:	21400044 	addi	r5,r4,1
10008558:	003e2e06 	br	10007e14 <__alt_data_end+0xf8007e14>
1000855c:	01040074 	movhi	r4,4097
10008560:	213ed904 	addi	r4,r4,-1180
10008564:	d9002315 	stw	r4,140(sp)
10008568:	d9001b17 	ldw	r4,108(sp)
1000856c:	21000044 	addi	r4,r4,1
10008570:	003c5e06 	br	100076ec <__alt_data_end+0xf80076ec>
10008574:	002b883a 	mov	r21,zero
10008578:	00800084 	movi	r2,2
1000857c:	10803fcc 	andi	r2,r2,255
10008580:	01000044 	movi	r4,1
10008584:	11002b26 	beq	r2,r4,10008634 <___vfiprintf_internal_r+0x1428>
10008588:	01000084 	movi	r4,2
1000858c:	11002b1e 	bne	r2,r4,1000863c <___vfiprintf_internal_r+0x1430>
10008590:	1823883a 	mov	r17,r3
10008594:	003ee506 	br	1000812c <__alt_data_end+0xf800812c>
10008598:	8807883a 	mov	r3,r17
1000859c:	00800044 	movi	r2,1
100085a0:	003ff606 	br	1000857c <__alt_data_end+0xf800857c>
100085a4:	00800184 	movi	r2,6
100085a8:	1400012e 	bgeu	r2,r16,100085b0 <___vfiprintf_internal_r+0x13a4>
100085ac:	1021883a 	mov	r16,r2
100085b0:	8029883a 	mov	r20,r16
100085b4:	8027883a 	mov	r19,r16
100085b8:	80002216 	blt	r16,zero,10008644 <___vfiprintf_internal_r+0x1438>
100085bc:	05c40074 	movhi	r23,4097
100085c0:	df002215 	stw	fp,136(sp)
100085c4:	bdfe7904 	addi	r23,r23,-1564
100085c8:	003cfb06 	br	100079b8 <__alt_data_end+0xf80079b8>
100085cc:	d9002217 	ldw	r4,136(sp)
100085d0:	d9402417 	ldw	r5,144(sp)
100085d4:	20800017 	ldw	r2,0(r4)
100085d8:	21000104 	addi	r4,r4,4
100085dc:	d9002215 	stw	r4,136(sp)
100085e0:	11400015 	stw	r5,0(r2)
100085e4:	003b3d06 	br	100072dc <__alt_data_end+0xf80072dc>
100085e8:	01440074 	movhi	r5,4097
100085ec:	297ed904 	addi	r5,r5,-1180
100085f0:	d9402315 	stw	r5,140(sp)
100085f4:	d9401b17 	ldw	r5,108(sp)
100085f8:	29400044 	addi	r5,r5,1
100085fc:	003e6d06 	br	10007fb4 <__alt_data_end+0xf8007fb4>
10008600:	8029883a 	mov	r20,r16
10008604:	dd401d83 	ldbu	r21,118(sp)
10008608:	df002215 	stw	fp,136(sp)
1000860c:	0021883a 	mov	r16,zero
10008610:	003c0106 	br	10007618 <__alt_data_end+0xf8007618>
10008614:	00c40074 	movhi	r3,4097
10008618:	18fed504 	addi	r3,r3,-1196
1000861c:	d8c02315 	stw	r3,140(sp)
10008620:	280d883a 	mov	r6,r5
10008624:	003c6906 	br	100077cc <__alt_data_end+0xf80077cc>
10008628:	802d883a 	mov	r22,r16
1000862c:	0021883a 	mov	r16,zero
10008630:	003b5406 	br	10007384 <__alt_data_end+0xf8007384>
10008634:	1823883a 	mov	r17,r3
10008638:	003cf306 	br	10007a08 <__alt_data_end+0xf8007a08>
1000863c:	1823883a 	mov	r17,r3
10008640:	003cad06 	br	100078f8 <__alt_data_end+0xf80078f8>
10008644:	0027883a 	mov	r19,zero
10008648:	003fdc06 	br	100085bc <__alt_data_end+0xf80085bc>
1000864c:	d9402217 	ldw	r5,136(sp)
10008650:	8005883a 	mov	r2,r16
10008654:	b0c00043 	ldbu	r3,1(r22)
10008658:	2c000017 	ldw	r16,0(r5)
1000865c:	29000104 	addi	r4,r5,4
10008660:	d9002215 	stw	r4,136(sp)
10008664:	102d883a 	mov	r22,r2
10008668:	803fa50e 	bge	r16,zero,10008500 <__alt_data_end+0xf8008500>
1000866c:	18c03fcc 	andi	r3,r3,255
10008670:	18c0201c 	xori	r3,r3,128
10008674:	043fffc4 	movi	r16,-1
10008678:	18ffe004 	addi	r3,r3,-128
1000867c:	003b4006 	br	10007380 <__alt_data_end+0xf8007380>
10008680:	d9402303 	ldbu	r5,140(sp)
10008684:	d9401d85 	stb	r5,118(sp)
10008688:	003cae06 	br	10007944 <__alt_data_end+0xf8007944>
1000868c:	d8c02303 	ldbu	r3,140(sp)
10008690:	d8c01d85 	stb	r3,118(sp)
10008694:	003d1406 	br	10007ae8 <__alt_data_end+0xf8007ae8>
10008698:	d8c02303 	ldbu	r3,140(sp)
1000869c:	d8c01d85 	stb	r3,118(sp)
100086a0:	003cca06 	br	100079cc <__alt_data_end+0xf80079cc>
100086a4:	8880004c 	andi	r2,r17,1
100086a8:	002b883a 	mov	r21,zero
100086ac:	10000526 	beq	r2,zero,100086c4 <___vfiprintf_internal_r+0x14b8>
100086b0:	00800c04 	movi	r2,48
100086b4:	d88019c5 	stb	r2,103(sp)
100086b8:	dd002817 	ldw	r20,160(sp)
100086bc:	ddc019c4 	addi	r23,sp,103
100086c0:	003bd506 	br	10007618 <__alt_data_end+0xf8007618>
100086c4:	0029883a 	mov	r20,zero
100086c8:	ddc01a04 	addi	r23,sp,104
100086cc:	003bd206 	br	10007618 <__alt_data_end+0xf8007618>
100086d0:	d9002303 	ldbu	r4,140(sp)
100086d4:	d9001d85 	stb	r4,118(sp)
100086d8:	003da606 	br	10007d74 <__alt_data_end+0xf8007d74>
100086dc:	d8c02303 	ldbu	r3,140(sp)
100086e0:	d8c01d85 	stb	r3,118(sp)
100086e4:	003c7606 	br	100078c0 <__alt_data_end+0xf80078c0>
100086e8:	d8c02303 	ldbu	r3,140(sp)
100086ec:	d8c01d85 	stb	r3,118(sp)
100086f0:	003c6506 	br	10007888 <__alt_data_end+0xf8007888>
100086f4:	d9002303 	ldbu	r4,140(sp)
100086f8:	d9001d85 	stb	r4,118(sp)
100086fc:	003d3d06 	br	10007bf4 <__alt_data_end+0xf8007bf4>
10008700:	d8c02303 	ldbu	r3,140(sp)
10008704:	d8c01d85 	stb	r3,118(sp)
10008708:	003d1d06 	br	10007b80 <__alt_data_end+0xf8007b80>
1000870c:	d8c02303 	ldbu	r3,140(sp)
10008710:	d8c01d85 	stb	r3,118(sp)
10008714:	003d0306 	br	10007b24 <__alt_data_end+0xf8007b24>

10008718 <__vfiprintf_internal>:
10008718:	00840074 	movhi	r2,4097
1000871c:	1085d704 	addi	r2,r2,5980
10008720:	300f883a 	mov	r7,r6
10008724:	280d883a 	mov	r6,r5
10008728:	200b883a 	mov	r5,r4
1000872c:	11000017 	ldw	r4,0(r2)
10008730:	000720c1 	jmpi	1000720c <___vfiprintf_internal_r>

10008734 <__sbprintf>:
10008734:	2880030b 	ldhu	r2,12(r5)
10008738:	2ac01917 	ldw	r11,100(r5)
1000873c:	2a80038b 	ldhu	r10,14(r5)
10008740:	2a400717 	ldw	r9,28(r5)
10008744:	2a000917 	ldw	r8,36(r5)
10008748:	defee204 	addi	sp,sp,-1144
1000874c:	00c10004 	movi	r3,1024
10008750:	dc011a15 	stw	r16,1128(sp)
10008754:	10bfff4c 	andi	r2,r2,65533
10008758:	2821883a 	mov	r16,r5
1000875c:	d8cb883a 	add	r5,sp,r3
10008760:	dc811c15 	stw	r18,1136(sp)
10008764:	dc411b15 	stw	r17,1132(sp)
10008768:	dfc11d15 	stw	ra,1140(sp)
1000876c:	2025883a 	mov	r18,r4
10008770:	d881030d 	sth	r2,1036(sp)
10008774:	dac11915 	stw	r11,1124(sp)
10008778:	da81038d 	sth	r10,1038(sp)
1000877c:	da410715 	stw	r9,1052(sp)
10008780:	da010915 	stw	r8,1060(sp)
10008784:	dec10015 	stw	sp,1024(sp)
10008788:	dec10415 	stw	sp,1040(sp)
1000878c:	d8c10215 	stw	r3,1032(sp)
10008790:	d8c10515 	stw	r3,1044(sp)
10008794:	d8010615 	stw	zero,1048(sp)
10008798:	000720c0 	call	1000720c <___vfiprintf_internal_r>
1000879c:	1023883a 	mov	r17,r2
100087a0:	10000416 	blt	r2,zero,100087b4 <__sbprintf+0x80>
100087a4:	d9410004 	addi	r5,sp,1024
100087a8:	9009883a 	mov	r4,r18
100087ac:	00043700 	call	10004370 <_fflush_r>
100087b0:	10000d1e 	bne	r2,zero,100087e8 <__sbprintf+0xb4>
100087b4:	d881030b 	ldhu	r2,1036(sp)
100087b8:	1080100c 	andi	r2,r2,64
100087bc:	10000326 	beq	r2,zero,100087cc <__sbprintf+0x98>
100087c0:	8080030b 	ldhu	r2,12(r16)
100087c4:	10801014 	ori	r2,r2,64
100087c8:	8080030d 	sth	r2,12(r16)
100087cc:	8805883a 	mov	r2,r17
100087d0:	dfc11d17 	ldw	ra,1140(sp)
100087d4:	dc811c17 	ldw	r18,1136(sp)
100087d8:	dc411b17 	ldw	r17,1132(sp)
100087dc:	dc011a17 	ldw	r16,1128(sp)
100087e0:	dec11e04 	addi	sp,sp,1144
100087e4:	f800283a 	ret
100087e8:	047fffc4 	movi	r17,-1
100087ec:	003ff106 	br	100087b4 <__alt_data_end+0xf80087b4>

100087f0 <__swbuf_r>:
100087f0:	defffb04 	addi	sp,sp,-20
100087f4:	dcc00315 	stw	r19,12(sp)
100087f8:	dc800215 	stw	r18,8(sp)
100087fc:	dc000015 	stw	r16,0(sp)
10008800:	dfc00415 	stw	ra,16(sp)
10008804:	dc400115 	stw	r17,4(sp)
10008808:	2025883a 	mov	r18,r4
1000880c:	2827883a 	mov	r19,r5
10008810:	3021883a 	mov	r16,r6
10008814:	20000226 	beq	r4,zero,10008820 <__swbuf_r+0x30>
10008818:	20800e17 	ldw	r2,56(r4)
1000881c:	10004226 	beq	r2,zero,10008928 <__swbuf_r+0x138>
10008820:	80800617 	ldw	r2,24(r16)
10008824:	8100030b 	ldhu	r4,12(r16)
10008828:	80800215 	stw	r2,8(r16)
1000882c:	2080020c 	andi	r2,r4,8
10008830:	10003626 	beq	r2,zero,1000890c <__swbuf_r+0x11c>
10008834:	80c00417 	ldw	r3,16(r16)
10008838:	18003426 	beq	r3,zero,1000890c <__swbuf_r+0x11c>
1000883c:	2088000c 	andi	r2,r4,8192
10008840:	9c403fcc 	andi	r17,r19,255
10008844:	10001a26 	beq	r2,zero,100088b0 <__swbuf_r+0xc0>
10008848:	80800017 	ldw	r2,0(r16)
1000884c:	81000517 	ldw	r4,20(r16)
10008850:	10c7c83a 	sub	r3,r2,r3
10008854:	1900200e 	bge	r3,r4,100088d8 <__swbuf_r+0xe8>
10008858:	18c00044 	addi	r3,r3,1
1000885c:	81000217 	ldw	r4,8(r16)
10008860:	11400044 	addi	r5,r2,1
10008864:	81400015 	stw	r5,0(r16)
10008868:	213fffc4 	addi	r4,r4,-1
1000886c:	81000215 	stw	r4,8(r16)
10008870:	14c00005 	stb	r19,0(r2)
10008874:	80800517 	ldw	r2,20(r16)
10008878:	10c01e26 	beq	r2,r3,100088f4 <__swbuf_r+0x104>
1000887c:	8080030b 	ldhu	r2,12(r16)
10008880:	1080004c 	andi	r2,r2,1
10008884:	10000226 	beq	r2,zero,10008890 <__swbuf_r+0xa0>
10008888:	00800284 	movi	r2,10
1000888c:	88801926 	beq	r17,r2,100088f4 <__swbuf_r+0x104>
10008890:	8805883a 	mov	r2,r17
10008894:	dfc00417 	ldw	ra,16(sp)
10008898:	dcc00317 	ldw	r19,12(sp)
1000889c:	dc800217 	ldw	r18,8(sp)
100088a0:	dc400117 	ldw	r17,4(sp)
100088a4:	dc000017 	ldw	r16,0(sp)
100088a8:	dec00504 	addi	sp,sp,20
100088ac:	f800283a 	ret
100088b0:	81401917 	ldw	r5,100(r16)
100088b4:	00b7ffc4 	movi	r2,-8193
100088b8:	21080014 	ori	r4,r4,8192
100088bc:	2884703a 	and	r2,r5,r2
100088c0:	80801915 	stw	r2,100(r16)
100088c4:	80800017 	ldw	r2,0(r16)
100088c8:	8100030d 	sth	r4,12(r16)
100088cc:	81000517 	ldw	r4,20(r16)
100088d0:	10c7c83a 	sub	r3,r2,r3
100088d4:	193fe016 	blt	r3,r4,10008858 <__alt_data_end+0xf8008858>
100088d8:	800b883a 	mov	r5,r16
100088dc:	9009883a 	mov	r4,r18
100088e0:	00043700 	call	10004370 <_fflush_r>
100088e4:	1000071e 	bne	r2,zero,10008904 <__swbuf_r+0x114>
100088e8:	80800017 	ldw	r2,0(r16)
100088ec:	00c00044 	movi	r3,1
100088f0:	003fda06 	br	1000885c <__alt_data_end+0xf800885c>
100088f4:	800b883a 	mov	r5,r16
100088f8:	9009883a 	mov	r4,r18
100088fc:	00043700 	call	10004370 <_fflush_r>
10008900:	103fe326 	beq	r2,zero,10008890 <__alt_data_end+0xf8008890>
10008904:	00bfffc4 	movi	r2,-1
10008908:	003fe206 	br	10008894 <__alt_data_end+0xf8008894>
1000890c:	800b883a 	mov	r5,r16
10008910:	9009883a 	mov	r4,r18
10008914:	00027500 	call	10002750 <__swsetup_r>
10008918:	103ffa1e 	bne	r2,zero,10008904 <__alt_data_end+0xf8008904>
1000891c:	8100030b 	ldhu	r4,12(r16)
10008920:	80c00417 	ldw	r3,16(r16)
10008924:	003fc506 	br	1000883c <__alt_data_end+0xf800883c>
10008928:	000475c0 	call	1000475c <__sinit>
1000892c:	003fbc06 	br	10008820 <__alt_data_end+0xf8008820>

10008930 <__swbuf>:
10008930:	00840074 	movhi	r2,4097
10008934:	1085d704 	addi	r2,r2,5980
10008938:	280d883a 	mov	r6,r5
1000893c:	200b883a 	mov	r5,r4
10008940:	11000017 	ldw	r4,0(r2)
10008944:	00087f01 	jmpi	100087f0 <__swbuf_r>

10008948 <_write_r>:
10008948:	defffd04 	addi	sp,sp,-12
1000894c:	2805883a 	mov	r2,r5
10008950:	dc000015 	stw	r16,0(sp)
10008954:	04040074 	movhi	r16,4097
10008958:	dc400115 	stw	r17,4(sp)
1000895c:	300b883a 	mov	r5,r6
10008960:	840ca804 	addi	r16,r16,12960
10008964:	2023883a 	mov	r17,r4
10008968:	380d883a 	mov	r6,r7
1000896c:	1009883a 	mov	r4,r2
10008970:	dfc00215 	stw	ra,8(sp)
10008974:	80000015 	stw	zero,0(r16)
10008978:	000db980 	call	1000db98 <write>
1000897c:	00ffffc4 	movi	r3,-1
10008980:	10c00526 	beq	r2,r3,10008998 <_write_r+0x50>
10008984:	dfc00217 	ldw	ra,8(sp)
10008988:	dc400117 	ldw	r17,4(sp)
1000898c:	dc000017 	ldw	r16,0(sp)
10008990:	dec00304 	addi	sp,sp,12
10008994:	f800283a 	ret
10008998:	80c00017 	ldw	r3,0(r16)
1000899c:	183ff926 	beq	r3,zero,10008984 <__alt_data_end+0xf8008984>
100089a0:	88c00015 	stw	r3,0(r17)
100089a4:	003ff706 	br	10008984 <__alt_data_end+0xf8008984>

100089a8 <_close_r>:
100089a8:	defffd04 	addi	sp,sp,-12
100089ac:	dc000015 	stw	r16,0(sp)
100089b0:	04040074 	movhi	r16,4097
100089b4:	dc400115 	stw	r17,4(sp)
100089b8:	840ca804 	addi	r16,r16,12960
100089bc:	2023883a 	mov	r17,r4
100089c0:	2809883a 	mov	r4,r5
100089c4:	dfc00215 	stw	ra,8(sp)
100089c8:	80000015 	stw	zero,0(r16)
100089cc:	000d3400 	call	1000d340 <close>
100089d0:	00ffffc4 	movi	r3,-1
100089d4:	10c00526 	beq	r2,r3,100089ec <_close_r+0x44>
100089d8:	dfc00217 	ldw	ra,8(sp)
100089dc:	dc400117 	ldw	r17,4(sp)
100089e0:	dc000017 	ldw	r16,0(sp)
100089e4:	dec00304 	addi	sp,sp,12
100089e8:	f800283a 	ret
100089ec:	80c00017 	ldw	r3,0(r16)
100089f0:	183ff926 	beq	r3,zero,100089d8 <__alt_data_end+0xf80089d8>
100089f4:	88c00015 	stw	r3,0(r17)
100089f8:	003ff706 	br	100089d8 <__alt_data_end+0xf80089d8>

100089fc <_calloc_r>:
100089fc:	defffe04 	addi	sp,sp,-8
10008a00:	2805883a 	mov	r2,r5
10008a04:	dc000015 	stw	r16,0(sp)
10008a08:	300b883a 	mov	r5,r6
10008a0c:	2021883a 	mov	r16,r4
10008a10:	1009883a 	mov	r4,r2
10008a14:	dfc00115 	stw	ra,4(sp)
10008a18:	000aa380 	call	1000aa38 <__mulsi3>
10008a1c:	100b883a 	mov	r5,r2
10008a20:	8009883a 	mov	r4,r16
10008a24:	00050000 	call	10005000 <_malloc_r>
10008a28:	10002926 	beq	r2,zero,10008ad0 <_calloc_r+0xd4>
10008a2c:	11bfff17 	ldw	r6,-4(r2)
10008a30:	1021883a 	mov	r16,r2
10008a34:	00bfff04 	movi	r2,-4
10008a38:	308c703a 	and	r6,r6,r2
10008a3c:	00c00904 	movi	r3,36
10008a40:	308d883a 	add	r6,r6,r2
10008a44:	19801636 	bltu	r3,r6,10008aa0 <_calloc_r+0xa4>
10008a48:	008004c4 	movi	r2,19
10008a4c:	11800b2e 	bgeu	r2,r6,10008a7c <_calloc_r+0x80>
10008a50:	80000015 	stw	zero,0(r16)
10008a54:	80000115 	stw	zero,4(r16)
10008a58:	008006c4 	movi	r2,27
10008a5c:	11801a2e 	bgeu	r2,r6,10008ac8 <_calloc_r+0xcc>
10008a60:	80000215 	stw	zero,8(r16)
10008a64:	80000315 	stw	zero,12(r16)
10008a68:	30c0151e 	bne	r6,r3,10008ac0 <_calloc_r+0xc4>
10008a6c:	80000415 	stw	zero,16(r16)
10008a70:	80800604 	addi	r2,r16,24
10008a74:	80000515 	stw	zero,20(r16)
10008a78:	00000106 	br	10008a80 <_calloc_r+0x84>
10008a7c:	8005883a 	mov	r2,r16
10008a80:	10000015 	stw	zero,0(r2)
10008a84:	10000115 	stw	zero,4(r2)
10008a88:	10000215 	stw	zero,8(r2)
10008a8c:	8005883a 	mov	r2,r16
10008a90:	dfc00117 	ldw	ra,4(sp)
10008a94:	dc000017 	ldw	r16,0(sp)
10008a98:	dec00204 	addi	sp,sp,8
10008a9c:	f800283a 	ret
10008aa0:	000b883a 	mov	r5,zero
10008aa4:	8009883a 	mov	r4,r16
10008aa8:	0005a380 	call	10005a38 <memset>
10008aac:	8005883a 	mov	r2,r16
10008ab0:	dfc00117 	ldw	ra,4(sp)
10008ab4:	dc000017 	ldw	r16,0(sp)
10008ab8:	dec00204 	addi	sp,sp,8
10008abc:	f800283a 	ret
10008ac0:	80800404 	addi	r2,r16,16
10008ac4:	003fee06 	br	10008a80 <__alt_data_end+0xf8008a80>
10008ac8:	80800204 	addi	r2,r16,8
10008acc:	003fec06 	br	10008a80 <__alt_data_end+0xf8008a80>
10008ad0:	0005883a 	mov	r2,zero
10008ad4:	003fee06 	br	10008a90 <__alt_data_end+0xf8008a90>

10008ad8 <_fclose_r>:
10008ad8:	28003926 	beq	r5,zero,10008bc0 <_fclose_r+0xe8>
10008adc:	defffc04 	addi	sp,sp,-16
10008ae0:	dc400115 	stw	r17,4(sp)
10008ae4:	dc000015 	stw	r16,0(sp)
10008ae8:	dfc00315 	stw	ra,12(sp)
10008aec:	dc800215 	stw	r18,8(sp)
10008af0:	2023883a 	mov	r17,r4
10008af4:	2821883a 	mov	r16,r5
10008af8:	20000226 	beq	r4,zero,10008b04 <_fclose_r+0x2c>
10008afc:	20800e17 	ldw	r2,56(r4)
10008b00:	10002726 	beq	r2,zero,10008ba0 <_fclose_r+0xc8>
10008b04:	8080030f 	ldh	r2,12(r16)
10008b08:	1000071e 	bne	r2,zero,10008b28 <_fclose_r+0x50>
10008b0c:	0005883a 	mov	r2,zero
10008b10:	dfc00317 	ldw	ra,12(sp)
10008b14:	dc800217 	ldw	r18,8(sp)
10008b18:	dc400117 	ldw	r17,4(sp)
10008b1c:	dc000017 	ldw	r16,0(sp)
10008b20:	dec00404 	addi	sp,sp,16
10008b24:	f800283a 	ret
10008b28:	800b883a 	mov	r5,r16
10008b2c:	8809883a 	mov	r4,r17
10008b30:	00041540 	call	10004154 <__sflush_r>
10008b34:	1025883a 	mov	r18,r2
10008b38:	80800b17 	ldw	r2,44(r16)
10008b3c:	10000426 	beq	r2,zero,10008b50 <_fclose_r+0x78>
10008b40:	81400717 	ldw	r5,28(r16)
10008b44:	8809883a 	mov	r4,r17
10008b48:	103ee83a 	callr	r2
10008b4c:	10001616 	blt	r2,zero,10008ba8 <_fclose_r+0xd0>
10008b50:	8080030b 	ldhu	r2,12(r16)
10008b54:	1080200c 	andi	r2,r2,128
10008b58:	1000151e 	bne	r2,zero,10008bb0 <_fclose_r+0xd8>
10008b5c:	81400c17 	ldw	r5,48(r16)
10008b60:	28000526 	beq	r5,zero,10008b78 <_fclose_r+0xa0>
10008b64:	80801004 	addi	r2,r16,64
10008b68:	28800226 	beq	r5,r2,10008b74 <_fclose_r+0x9c>
10008b6c:	8809883a 	mov	r4,r17
10008b70:	00048d00 	call	100048d0 <_free_r>
10008b74:	80000c15 	stw	zero,48(r16)
10008b78:	81401117 	ldw	r5,68(r16)
10008b7c:	28000326 	beq	r5,zero,10008b8c <_fclose_r+0xb4>
10008b80:	8809883a 	mov	r4,r17
10008b84:	00048d00 	call	100048d0 <_free_r>
10008b88:	80001115 	stw	zero,68(r16)
10008b8c:	000476c0 	call	1000476c <__sfp_lock_acquire>
10008b90:	8000030d 	sth	zero,12(r16)
10008b94:	00047700 	call	10004770 <__sfp_lock_release>
10008b98:	9005883a 	mov	r2,r18
10008b9c:	003fdc06 	br	10008b10 <__alt_data_end+0xf8008b10>
10008ba0:	000475c0 	call	1000475c <__sinit>
10008ba4:	003fd706 	br	10008b04 <__alt_data_end+0xf8008b04>
10008ba8:	04bfffc4 	movi	r18,-1
10008bac:	003fe806 	br	10008b50 <__alt_data_end+0xf8008b50>
10008bb0:	81400417 	ldw	r5,16(r16)
10008bb4:	8809883a 	mov	r4,r17
10008bb8:	00048d00 	call	100048d0 <_free_r>
10008bbc:	003fe706 	br	10008b5c <__alt_data_end+0xf8008b5c>
10008bc0:	0005883a 	mov	r2,zero
10008bc4:	f800283a 	ret

10008bc8 <fclose>:
10008bc8:	00840074 	movhi	r2,4097
10008bcc:	1085d704 	addi	r2,r2,5980
10008bd0:	200b883a 	mov	r5,r4
10008bd4:	11000017 	ldw	r4,0(r2)
10008bd8:	0008ad81 	jmpi	10008ad8 <_fclose_r>

10008bdc <__fputwc>:
10008bdc:	defff804 	addi	sp,sp,-32
10008be0:	dcc00415 	stw	r19,16(sp)
10008be4:	dc800315 	stw	r18,12(sp)
10008be8:	dc000115 	stw	r16,4(sp)
10008bec:	dfc00715 	stw	ra,28(sp)
10008bf0:	dd400615 	stw	r21,24(sp)
10008bf4:	dd000515 	stw	r20,20(sp)
10008bf8:	dc400215 	stw	r17,8(sp)
10008bfc:	2027883a 	mov	r19,r4
10008c00:	2825883a 	mov	r18,r5
10008c04:	3021883a 	mov	r16,r6
10008c08:	0004df00 	call	10004df0 <__locale_mb_cur_max>
10008c0c:	00c00044 	movi	r3,1
10008c10:	10c03e26 	beq	r2,r3,10008d0c <__fputwc+0x130>
10008c14:	81c01704 	addi	r7,r16,92
10008c18:	900d883a 	mov	r6,r18
10008c1c:	d80b883a 	mov	r5,sp
10008c20:	9809883a 	mov	r4,r19
10008c24:	0009adc0 	call	10009adc <_wcrtomb_r>
10008c28:	1029883a 	mov	r20,r2
10008c2c:	00bfffc4 	movi	r2,-1
10008c30:	a0802026 	beq	r20,r2,10008cb4 <__fputwc+0xd8>
10008c34:	d9400003 	ldbu	r5,0(sp)
10008c38:	a0001c26 	beq	r20,zero,10008cac <__fputwc+0xd0>
10008c3c:	0023883a 	mov	r17,zero
10008c40:	05400284 	movi	r21,10
10008c44:	00000906 	br	10008c6c <__fputwc+0x90>
10008c48:	80800017 	ldw	r2,0(r16)
10008c4c:	11400005 	stb	r5,0(r2)
10008c50:	80c00017 	ldw	r3,0(r16)
10008c54:	18c00044 	addi	r3,r3,1
10008c58:	80c00015 	stw	r3,0(r16)
10008c5c:	8c400044 	addi	r17,r17,1
10008c60:	dc45883a 	add	r2,sp,r17
10008c64:	8d00112e 	bgeu	r17,r20,10008cac <__fputwc+0xd0>
10008c68:	11400003 	ldbu	r5,0(r2)
10008c6c:	80c00217 	ldw	r3,8(r16)
10008c70:	18ffffc4 	addi	r3,r3,-1
10008c74:	80c00215 	stw	r3,8(r16)
10008c78:	183ff30e 	bge	r3,zero,10008c48 <__alt_data_end+0xf8008c48>
10008c7c:	80800617 	ldw	r2,24(r16)
10008c80:	18801916 	blt	r3,r2,10008ce8 <__fputwc+0x10c>
10008c84:	80800017 	ldw	r2,0(r16)
10008c88:	11400005 	stb	r5,0(r2)
10008c8c:	80800017 	ldw	r2,0(r16)
10008c90:	10c00003 	ldbu	r3,0(r2)
10008c94:	10800044 	addi	r2,r2,1
10008c98:	1d402326 	beq	r3,r21,10008d28 <__fputwc+0x14c>
10008c9c:	80800015 	stw	r2,0(r16)
10008ca0:	8c400044 	addi	r17,r17,1
10008ca4:	dc45883a 	add	r2,sp,r17
10008ca8:	8d3fef36 	bltu	r17,r20,10008c68 <__alt_data_end+0xf8008c68>
10008cac:	9005883a 	mov	r2,r18
10008cb0:	00000406 	br	10008cc4 <__fputwc+0xe8>
10008cb4:	80c0030b 	ldhu	r3,12(r16)
10008cb8:	a005883a 	mov	r2,r20
10008cbc:	18c01014 	ori	r3,r3,64
10008cc0:	80c0030d 	sth	r3,12(r16)
10008cc4:	dfc00717 	ldw	ra,28(sp)
10008cc8:	dd400617 	ldw	r21,24(sp)
10008ccc:	dd000517 	ldw	r20,20(sp)
10008cd0:	dcc00417 	ldw	r19,16(sp)
10008cd4:	dc800317 	ldw	r18,12(sp)
10008cd8:	dc400217 	ldw	r17,8(sp)
10008cdc:	dc000117 	ldw	r16,4(sp)
10008ce0:	dec00804 	addi	sp,sp,32
10008ce4:	f800283a 	ret
10008ce8:	800d883a 	mov	r6,r16
10008cec:	29403fcc 	andi	r5,r5,255
10008cf0:	9809883a 	mov	r4,r19
10008cf4:	00087f00 	call	100087f0 <__swbuf_r>
10008cf8:	10bfffe0 	cmpeqi	r2,r2,-1
10008cfc:	10803fcc 	andi	r2,r2,255
10008d00:	103fd626 	beq	r2,zero,10008c5c <__alt_data_end+0xf8008c5c>
10008d04:	00bfffc4 	movi	r2,-1
10008d08:	003fee06 	br	10008cc4 <__alt_data_end+0xf8008cc4>
10008d0c:	90ffffc4 	addi	r3,r18,-1
10008d10:	01003f84 	movi	r4,254
10008d14:	20ffbf36 	bltu	r4,r3,10008c14 <__alt_data_end+0xf8008c14>
10008d18:	900b883a 	mov	r5,r18
10008d1c:	dc800005 	stb	r18,0(sp)
10008d20:	1029883a 	mov	r20,r2
10008d24:	003fc506 	br	10008c3c <__alt_data_end+0xf8008c3c>
10008d28:	800d883a 	mov	r6,r16
10008d2c:	a80b883a 	mov	r5,r21
10008d30:	9809883a 	mov	r4,r19
10008d34:	00087f00 	call	100087f0 <__swbuf_r>
10008d38:	10bfffe0 	cmpeqi	r2,r2,-1
10008d3c:	003fef06 	br	10008cfc <__alt_data_end+0xf8008cfc>

10008d40 <_fputwc_r>:
10008d40:	3080030b 	ldhu	r2,12(r6)
10008d44:	10c8000c 	andi	r3,r2,8192
10008d48:	1800051e 	bne	r3,zero,10008d60 <_fputwc_r+0x20>
10008d4c:	30c01917 	ldw	r3,100(r6)
10008d50:	10880014 	ori	r2,r2,8192
10008d54:	3080030d 	sth	r2,12(r6)
10008d58:	18880014 	ori	r2,r3,8192
10008d5c:	30801915 	stw	r2,100(r6)
10008d60:	0008bdc1 	jmpi	10008bdc <__fputwc>

10008d64 <fputwc>:
10008d64:	00840074 	movhi	r2,4097
10008d68:	defffc04 	addi	sp,sp,-16
10008d6c:	1085d704 	addi	r2,r2,5980
10008d70:	dc000115 	stw	r16,4(sp)
10008d74:	14000017 	ldw	r16,0(r2)
10008d78:	dc400215 	stw	r17,8(sp)
10008d7c:	dfc00315 	stw	ra,12(sp)
10008d80:	2023883a 	mov	r17,r4
10008d84:	80000226 	beq	r16,zero,10008d90 <fputwc+0x2c>
10008d88:	80800e17 	ldw	r2,56(r16)
10008d8c:	10001026 	beq	r2,zero,10008dd0 <fputwc+0x6c>
10008d90:	2880030b 	ldhu	r2,12(r5)
10008d94:	10c8000c 	andi	r3,r2,8192
10008d98:	1800051e 	bne	r3,zero,10008db0 <fputwc+0x4c>
10008d9c:	28c01917 	ldw	r3,100(r5)
10008da0:	10880014 	ori	r2,r2,8192
10008da4:	2880030d 	sth	r2,12(r5)
10008da8:	18880014 	ori	r2,r3,8192
10008dac:	28801915 	stw	r2,100(r5)
10008db0:	280d883a 	mov	r6,r5
10008db4:	8009883a 	mov	r4,r16
10008db8:	880b883a 	mov	r5,r17
10008dbc:	dfc00317 	ldw	ra,12(sp)
10008dc0:	dc400217 	ldw	r17,8(sp)
10008dc4:	dc000117 	ldw	r16,4(sp)
10008dc8:	dec00404 	addi	sp,sp,16
10008dcc:	0008bdc1 	jmpi	10008bdc <__fputwc>
10008dd0:	8009883a 	mov	r4,r16
10008dd4:	d9400015 	stw	r5,0(sp)
10008dd8:	000475c0 	call	1000475c <__sinit>
10008ddc:	d9400017 	ldw	r5,0(sp)
10008de0:	003feb06 	br	10008d90 <__alt_data_end+0xf8008d90>

10008de4 <_fstat_r>:
10008de4:	defffd04 	addi	sp,sp,-12
10008de8:	2805883a 	mov	r2,r5
10008dec:	dc000015 	stw	r16,0(sp)
10008df0:	04040074 	movhi	r16,4097
10008df4:	dc400115 	stw	r17,4(sp)
10008df8:	840ca804 	addi	r16,r16,12960
10008dfc:	2023883a 	mov	r17,r4
10008e00:	300b883a 	mov	r5,r6
10008e04:	1009883a 	mov	r4,r2
10008e08:	dfc00215 	stw	ra,8(sp)
10008e0c:	80000015 	stw	zero,0(r16)
10008e10:	000d4800 	call	1000d480 <fstat>
10008e14:	00ffffc4 	movi	r3,-1
10008e18:	10c00526 	beq	r2,r3,10008e30 <_fstat_r+0x4c>
10008e1c:	dfc00217 	ldw	ra,8(sp)
10008e20:	dc400117 	ldw	r17,4(sp)
10008e24:	dc000017 	ldw	r16,0(sp)
10008e28:	dec00304 	addi	sp,sp,12
10008e2c:	f800283a 	ret
10008e30:	80c00017 	ldw	r3,0(r16)
10008e34:	183ff926 	beq	r3,zero,10008e1c <__alt_data_end+0xf8008e1c>
10008e38:	88c00015 	stw	r3,0(r17)
10008e3c:	003ff706 	br	10008e1c <__alt_data_end+0xf8008e1c>

10008e40 <__sfvwrite_r>:
10008e40:	30800217 	ldw	r2,8(r6)
10008e44:	10006726 	beq	r2,zero,10008fe4 <__sfvwrite_r+0x1a4>
10008e48:	28c0030b 	ldhu	r3,12(r5)
10008e4c:	defff404 	addi	sp,sp,-48
10008e50:	dd400715 	stw	r21,28(sp)
10008e54:	dd000615 	stw	r20,24(sp)
10008e58:	dc000215 	stw	r16,8(sp)
10008e5c:	dfc00b15 	stw	ra,44(sp)
10008e60:	df000a15 	stw	fp,40(sp)
10008e64:	ddc00915 	stw	r23,36(sp)
10008e68:	dd800815 	stw	r22,32(sp)
10008e6c:	dcc00515 	stw	r19,20(sp)
10008e70:	dc800415 	stw	r18,16(sp)
10008e74:	dc400315 	stw	r17,12(sp)
10008e78:	1880020c 	andi	r2,r3,8
10008e7c:	2821883a 	mov	r16,r5
10008e80:	202b883a 	mov	r21,r4
10008e84:	3029883a 	mov	r20,r6
10008e88:	10002726 	beq	r2,zero,10008f28 <__sfvwrite_r+0xe8>
10008e8c:	28800417 	ldw	r2,16(r5)
10008e90:	10002526 	beq	r2,zero,10008f28 <__sfvwrite_r+0xe8>
10008e94:	1880008c 	andi	r2,r3,2
10008e98:	a4400017 	ldw	r17,0(r20)
10008e9c:	10002a26 	beq	r2,zero,10008f48 <__sfvwrite_r+0x108>
10008ea0:	05a00034 	movhi	r22,32768
10008ea4:	0027883a 	mov	r19,zero
10008ea8:	0025883a 	mov	r18,zero
10008eac:	b5bf0004 	addi	r22,r22,-1024
10008eb0:	980d883a 	mov	r6,r19
10008eb4:	a809883a 	mov	r4,r21
10008eb8:	90004626 	beq	r18,zero,10008fd4 <__sfvwrite_r+0x194>
10008ebc:	900f883a 	mov	r7,r18
10008ec0:	b480022e 	bgeu	r22,r18,10008ecc <__sfvwrite_r+0x8c>
10008ec4:	01e00034 	movhi	r7,32768
10008ec8:	39ff0004 	addi	r7,r7,-1024
10008ecc:	80800917 	ldw	r2,36(r16)
10008ed0:	81400717 	ldw	r5,28(r16)
10008ed4:	103ee83a 	callr	r2
10008ed8:	00805a0e 	bge	zero,r2,10009044 <__sfvwrite_r+0x204>
10008edc:	a0c00217 	ldw	r3,8(r20)
10008ee0:	98a7883a 	add	r19,r19,r2
10008ee4:	90a5c83a 	sub	r18,r18,r2
10008ee8:	1885c83a 	sub	r2,r3,r2
10008eec:	a0800215 	stw	r2,8(r20)
10008ef0:	103fef1e 	bne	r2,zero,10008eb0 <__alt_data_end+0xf8008eb0>
10008ef4:	0005883a 	mov	r2,zero
10008ef8:	dfc00b17 	ldw	ra,44(sp)
10008efc:	df000a17 	ldw	fp,40(sp)
10008f00:	ddc00917 	ldw	r23,36(sp)
10008f04:	dd800817 	ldw	r22,32(sp)
10008f08:	dd400717 	ldw	r21,28(sp)
10008f0c:	dd000617 	ldw	r20,24(sp)
10008f10:	dcc00517 	ldw	r19,20(sp)
10008f14:	dc800417 	ldw	r18,16(sp)
10008f18:	dc400317 	ldw	r17,12(sp)
10008f1c:	dc000217 	ldw	r16,8(sp)
10008f20:	dec00c04 	addi	sp,sp,48
10008f24:	f800283a 	ret
10008f28:	800b883a 	mov	r5,r16
10008f2c:	a809883a 	mov	r4,r21
10008f30:	00027500 	call	10002750 <__swsetup_r>
10008f34:	1000ee1e 	bne	r2,zero,100092f0 <__sfvwrite_r+0x4b0>
10008f38:	80c0030b 	ldhu	r3,12(r16)
10008f3c:	a4400017 	ldw	r17,0(r20)
10008f40:	1880008c 	andi	r2,r3,2
10008f44:	103fd61e 	bne	r2,zero,10008ea0 <__alt_data_end+0xf8008ea0>
10008f48:	1880004c 	andi	r2,r3,1
10008f4c:	1000421e 	bne	r2,zero,10009058 <__sfvwrite_r+0x218>
10008f50:	0039883a 	mov	fp,zero
10008f54:	0025883a 	mov	r18,zero
10008f58:	90001a26 	beq	r18,zero,10008fc4 <__sfvwrite_r+0x184>
10008f5c:	1880800c 	andi	r2,r3,512
10008f60:	84c00217 	ldw	r19,8(r16)
10008f64:	10002126 	beq	r2,zero,10008fec <__sfvwrite_r+0x1ac>
10008f68:	982f883a 	mov	r23,r19
10008f6c:	94c09636 	bltu	r18,r19,100091c8 <__sfvwrite_r+0x388>
10008f70:	1881200c 	andi	r2,r3,1152
10008f74:	1000a11e 	bne	r2,zero,100091fc <__sfvwrite_r+0x3bc>
10008f78:	81000017 	ldw	r4,0(r16)
10008f7c:	b80d883a 	mov	r6,r23
10008f80:	e00b883a 	mov	r5,fp
10008f84:	00093bc0 	call	100093bc <memmove>
10008f88:	80c00217 	ldw	r3,8(r16)
10008f8c:	81000017 	ldw	r4,0(r16)
10008f90:	9005883a 	mov	r2,r18
10008f94:	1ce7c83a 	sub	r19,r3,r19
10008f98:	25cf883a 	add	r7,r4,r23
10008f9c:	84c00215 	stw	r19,8(r16)
10008fa0:	81c00015 	stw	r7,0(r16)
10008fa4:	a0c00217 	ldw	r3,8(r20)
10008fa8:	e0b9883a 	add	fp,fp,r2
10008fac:	90a5c83a 	sub	r18,r18,r2
10008fb0:	18a7c83a 	sub	r19,r3,r2
10008fb4:	a4c00215 	stw	r19,8(r20)
10008fb8:	983fce26 	beq	r19,zero,10008ef4 <__alt_data_end+0xf8008ef4>
10008fbc:	80c0030b 	ldhu	r3,12(r16)
10008fc0:	903fe61e 	bne	r18,zero,10008f5c <__alt_data_end+0xf8008f5c>
10008fc4:	8f000017 	ldw	fp,0(r17)
10008fc8:	8c800117 	ldw	r18,4(r17)
10008fcc:	8c400204 	addi	r17,r17,8
10008fd0:	003fe106 	br	10008f58 <__alt_data_end+0xf8008f58>
10008fd4:	8cc00017 	ldw	r19,0(r17)
10008fd8:	8c800117 	ldw	r18,4(r17)
10008fdc:	8c400204 	addi	r17,r17,8
10008fe0:	003fb306 	br	10008eb0 <__alt_data_end+0xf8008eb0>
10008fe4:	0005883a 	mov	r2,zero
10008fe8:	f800283a 	ret
10008fec:	81000017 	ldw	r4,0(r16)
10008ff0:	80800417 	ldw	r2,16(r16)
10008ff4:	11005a36 	bltu	r2,r4,10009160 <__sfvwrite_r+0x320>
10008ff8:	85c00517 	ldw	r23,20(r16)
10008ffc:	95c05836 	bltu	r18,r23,10009160 <__sfvwrite_r+0x320>
10009000:	00a00034 	movhi	r2,32768
10009004:	10bfffc4 	addi	r2,r2,-1
10009008:	9009883a 	mov	r4,r18
1000900c:	1480012e 	bgeu	r2,r18,10009014 <__sfvwrite_r+0x1d4>
10009010:	1009883a 	mov	r4,r2
10009014:	b80b883a 	mov	r5,r23
10009018:	000a8840 	call	1000a884 <__divsi3>
1000901c:	b80b883a 	mov	r5,r23
10009020:	1009883a 	mov	r4,r2
10009024:	000aa380 	call	1000aa38 <__mulsi3>
10009028:	81400717 	ldw	r5,28(r16)
1000902c:	80c00917 	ldw	r3,36(r16)
10009030:	100f883a 	mov	r7,r2
10009034:	e00d883a 	mov	r6,fp
10009038:	a809883a 	mov	r4,r21
1000903c:	183ee83a 	callr	r3
10009040:	00bfd816 	blt	zero,r2,10008fa4 <__alt_data_end+0xf8008fa4>
10009044:	8080030b 	ldhu	r2,12(r16)
10009048:	10801014 	ori	r2,r2,64
1000904c:	8080030d 	sth	r2,12(r16)
10009050:	00bfffc4 	movi	r2,-1
10009054:	003fa806 	br	10008ef8 <__alt_data_end+0xf8008ef8>
10009058:	0027883a 	mov	r19,zero
1000905c:	0011883a 	mov	r8,zero
10009060:	0039883a 	mov	fp,zero
10009064:	0025883a 	mov	r18,zero
10009068:	90001f26 	beq	r18,zero,100090e8 <__sfvwrite_r+0x2a8>
1000906c:	40005a26 	beq	r8,zero,100091d8 <__sfvwrite_r+0x398>
10009070:	982d883a 	mov	r22,r19
10009074:	94c0012e 	bgeu	r18,r19,1000907c <__sfvwrite_r+0x23c>
10009078:	902d883a 	mov	r22,r18
1000907c:	81000017 	ldw	r4,0(r16)
10009080:	80800417 	ldw	r2,16(r16)
10009084:	b02f883a 	mov	r23,r22
10009088:	81c00517 	ldw	r7,20(r16)
1000908c:	1100032e 	bgeu	r2,r4,1000909c <__sfvwrite_r+0x25c>
10009090:	80c00217 	ldw	r3,8(r16)
10009094:	38c7883a 	add	r3,r7,r3
10009098:	1d801816 	blt	r3,r22,100090fc <__sfvwrite_r+0x2bc>
1000909c:	b1c03e16 	blt	r22,r7,10009198 <__sfvwrite_r+0x358>
100090a0:	80800917 	ldw	r2,36(r16)
100090a4:	81400717 	ldw	r5,28(r16)
100090a8:	e00d883a 	mov	r6,fp
100090ac:	da000115 	stw	r8,4(sp)
100090b0:	a809883a 	mov	r4,r21
100090b4:	103ee83a 	callr	r2
100090b8:	102f883a 	mov	r23,r2
100090bc:	da000117 	ldw	r8,4(sp)
100090c0:	00bfe00e 	bge	zero,r2,10009044 <__alt_data_end+0xf8009044>
100090c4:	9de7c83a 	sub	r19,r19,r23
100090c8:	98001f26 	beq	r19,zero,10009148 <__sfvwrite_r+0x308>
100090cc:	a0800217 	ldw	r2,8(r20)
100090d0:	e5f9883a 	add	fp,fp,r23
100090d4:	95e5c83a 	sub	r18,r18,r23
100090d8:	15efc83a 	sub	r23,r2,r23
100090dc:	a5c00215 	stw	r23,8(r20)
100090e0:	b83f8426 	beq	r23,zero,10008ef4 <__alt_data_end+0xf8008ef4>
100090e4:	903fe11e 	bne	r18,zero,1000906c <__alt_data_end+0xf800906c>
100090e8:	8f000017 	ldw	fp,0(r17)
100090ec:	8c800117 	ldw	r18,4(r17)
100090f0:	0011883a 	mov	r8,zero
100090f4:	8c400204 	addi	r17,r17,8
100090f8:	003fdb06 	br	10009068 <__alt_data_end+0xf8009068>
100090fc:	180d883a 	mov	r6,r3
10009100:	e00b883a 	mov	r5,fp
10009104:	da000115 	stw	r8,4(sp)
10009108:	d8c00015 	stw	r3,0(sp)
1000910c:	00093bc0 	call	100093bc <memmove>
10009110:	d8c00017 	ldw	r3,0(sp)
10009114:	80800017 	ldw	r2,0(r16)
10009118:	800b883a 	mov	r5,r16
1000911c:	a809883a 	mov	r4,r21
10009120:	10c5883a 	add	r2,r2,r3
10009124:	80800015 	stw	r2,0(r16)
10009128:	d8c00015 	stw	r3,0(sp)
1000912c:	00043700 	call	10004370 <_fflush_r>
10009130:	d8c00017 	ldw	r3,0(sp)
10009134:	da000117 	ldw	r8,4(sp)
10009138:	103fc21e 	bne	r2,zero,10009044 <__alt_data_end+0xf8009044>
1000913c:	182f883a 	mov	r23,r3
10009140:	9de7c83a 	sub	r19,r19,r23
10009144:	983fe11e 	bne	r19,zero,100090cc <__alt_data_end+0xf80090cc>
10009148:	800b883a 	mov	r5,r16
1000914c:	a809883a 	mov	r4,r21
10009150:	00043700 	call	10004370 <_fflush_r>
10009154:	103fbb1e 	bne	r2,zero,10009044 <__alt_data_end+0xf8009044>
10009158:	0011883a 	mov	r8,zero
1000915c:	003fdb06 	br	100090cc <__alt_data_end+0xf80090cc>
10009160:	94c0012e 	bgeu	r18,r19,10009168 <__sfvwrite_r+0x328>
10009164:	9027883a 	mov	r19,r18
10009168:	980d883a 	mov	r6,r19
1000916c:	e00b883a 	mov	r5,fp
10009170:	00093bc0 	call	100093bc <memmove>
10009174:	80800217 	ldw	r2,8(r16)
10009178:	80c00017 	ldw	r3,0(r16)
1000917c:	14c5c83a 	sub	r2,r2,r19
10009180:	1cc7883a 	add	r3,r3,r19
10009184:	80800215 	stw	r2,8(r16)
10009188:	80c00015 	stw	r3,0(r16)
1000918c:	10004326 	beq	r2,zero,1000929c <__sfvwrite_r+0x45c>
10009190:	9805883a 	mov	r2,r19
10009194:	003f8306 	br	10008fa4 <__alt_data_end+0xf8008fa4>
10009198:	b00d883a 	mov	r6,r22
1000919c:	e00b883a 	mov	r5,fp
100091a0:	da000115 	stw	r8,4(sp)
100091a4:	00093bc0 	call	100093bc <memmove>
100091a8:	80800217 	ldw	r2,8(r16)
100091ac:	80c00017 	ldw	r3,0(r16)
100091b0:	da000117 	ldw	r8,4(sp)
100091b4:	1585c83a 	sub	r2,r2,r22
100091b8:	1dad883a 	add	r22,r3,r22
100091bc:	80800215 	stw	r2,8(r16)
100091c0:	85800015 	stw	r22,0(r16)
100091c4:	003fbf06 	br	100090c4 <__alt_data_end+0xf80090c4>
100091c8:	81000017 	ldw	r4,0(r16)
100091cc:	9027883a 	mov	r19,r18
100091d0:	902f883a 	mov	r23,r18
100091d4:	003f6906 	br	10008f7c <__alt_data_end+0xf8008f7c>
100091d8:	900d883a 	mov	r6,r18
100091dc:	01400284 	movi	r5,10
100091e0:	e009883a 	mov	r4,fp
100091e4:	000580c0 	call	1000580c <memchr>
100091e8:	10003e26 	beq	r2,zero,100092e4 <__sfvwrite_r+0x4a4>
100091ec:	10800044 	addi	r2,r2,1
100091f0:	1727c83a 	sub	r19,r2,fp
100091f4:	02000044 	movi	r8,1
100091f8:	003f9d06 	br	10009070 <__alt_data_end+0xf8009070>
100091fc:	80800517 	ldw	r2,20(r16)
10009200:	81400417 	ldw	r5,16(r16)
10009204:	81c00017 	ldw	r7,0(r16)
10009208:	10a7883a 	add	r19,r2,r2
1000920c:	9885883a 	add	r2,r19,r2
10009210:	1026d7fa 	srli	r19,r2,31
10009214:	396dc83a 	sub	r22,r7,r5
10009218:	b1000044 	addi	r4,r22,1
1000921c:	9885883a 	add	r2,r19,r2
10009220:	1027d07a 	srai	r19,r2,1
10009224:	2485883a 	add	r2,r4,r18
10009228:	980d883a 	mov	r6,r19
1000922c:	9880022e 	bgeu	r19,r2,10009238 <__sfvwrite_r+0x3f8>
10009230:	1027883a 	mov	r19,r2
10009234:	100d883a 	mov	r6,r2
10009238:	18c1000c 	andi	r3,r3,1024
1000923c:	18001c26 	beq	r3,zero,100092b0 <__sfvwrite_r+0x470>
10009240:	300b883a 	mov	r5,r6
10009244:	a809883a 	mov	r4,r21
10009248:	00050000 	call	10005000 <_malloc_r>
1000924c:	102f883a 	mov	r23,r2
10009250:	10002926 	beq	r2,zero,100092f8 <__sfvwrite_r+0x4b8>
10009254:	81400417 	ldw	r5,16(r16)
10009258:	b00d883a 	mov	r6,r22
1000925c:	1009883a 	mov	r4,r2
10009260:	00058f00 	call	100058f0 <memcpy>
10009264:	8080030b 	ldhu	r2,12(r16)
10009268:	00fedfc4 	movi	r3,-1153
1000926c:	10c4703a 	and	r2,r2,r3
10009270:	10802014 	ori	r2,r2,128
10009274:	8080030d 	sth	r2,12(r16)
10009278:	bd89883a 	add	r4,r23,r22
1000927c:	9d8fc83a 	sub	r7,r19,r22
10009280:	85c00415 	stw	r23,16(r16)
10009284:	84c00515 	stw	r19,20(r16)
10009288:	81000015 	stw	r4,0(r16)
1000928c:	9027883a 	mov	r19,r18
10009290:	81c00215 	stw	r7,8(r16)
10009294:	902f883a 	mov	r23,r18
10009298:	003f3806 	br	10008f7c <__alt_data_end+0xf8008f7c>
1000929c:	800b883a 	mov	r5,r16
100092a0:	a809883a 	mov	r4,r21
100092a4:	00043700 	call	10004370 <_fflush_r>
100092a8:	103fb926 	beq	r2,zero,10009190 <__alt_data_end+0xf8009190>
100092ac:	003f6506 	br	10009044 <__alt_data_end+0xf8009044>
100092b0:	a809883a 	mov	r4,r21
100092b4:	00095780 	call	10009578 <_realloc_r>
100092b8:	102f883a 	mov	r23,r2
100092bc:	103fee1e 	bne	r2,zero,10009278 <__alt_data_end+0xf8009278>
100092c0:	81400417 	ldw	r5,16(r16)
100092c4:	a809883a 	mov	r4,r21
100092c8:	00048d00 	call	100048d0 <_free_r>
100092cc:	8080030b 	ldhu	r2,12(r16)
100092d0:	00ffdfc4 	movi	r3,-129
100092d4:	1884703a 	and	r2,r3,r2
100092d8:	00c00304 	movi	r3,12
100092dc:	a8c00015 	stw	r3,0(r21)
100092e0:	003f5906 	br	10009048 <__alt_data_end+0xf8009048>
100092e4:	94c00044 	addi	r19,r18,1
100092e8:	02000044 	movi	r8,1
100092ec:	003f6006 	br	10009070 <__alt_data_end+0xf8009070>
100092f0:	00bfffc4 	movi	r2,-1
100092f4:	003f0006 	br	10008ef8 <__alt_data_end+0xf8008ef8>
100092f8:	00800304 	movi	r2,12
100092fc:	a8800015 	stw	r2,0(r21)
10009300:	8080030b 	ldhu	r2,12(r16)
10009304:	003f5006 	br	10009048 <__alt_data_end+0xf8009048>

10009308 <_isatty_r>:
10009308:	defffd04 	addi	sp,sp,-12
1000930c:	dc000015 	stw	r16,0(sp)
10009310:	04040074 	movhi	r16,4097
10009314:	dc400115 	stw	r17,4(sp)
10009318:	840ca804 	addi	r16,r16,12960
1000931c:	2023883a 	mov	r17,r4
10009320:	2809883a 	mov	r4,r5
10009324:	dfc00215 	stw	ra,8(sp)
10009328:	80000015 	stw	zero,0(r16)
1000932c:	000d5740 	call	1000d574 <isatty>
10009330:	00ffffc4 	movi	r3,-1
10009334:	10c00526 	beq	r2,r3,1000934c <_isatty_r+0x44>
10009338:	dfc00217 	ldw	ra,8(sp)
1000933c:	dc400117 	ldw	r17,4(sp)
10009340:	dc000017 	ldw	r16,0(sp)
10009344:	dec00304 	addi	sp,sp,12
10009348:	f800283a 	ret
1000934c:	80c00017 	ldw	r3,0(r16)
10009350:	183ff926 	beq	r3,zero,10009338 <__alt_data_end+0xf8009338>
10009354:	88c00015 	stw	r3,0(r17)
10009358:	003ff706 	br	10009338 <__alt_data_end+0xf8009338>

1000935c <_lseek_r>:
1000935c:	defffd04 	addi	sp,sp,-12
10009360:	2805883a 	mov	r2,r5
10009364:	dc000015 	stw	r16,0(sp)
10009368:	04040074 	movhi	r16,4097
1000936c:	dc400115 	stw	r17,4(sp)
10009370:	300b883a 	mov	r5,r6
10009374:	840ca804 	addi	r16,r16,12960
10009378:	2023883a 	mov	r17,r4
1000937c:	380d883a 	mov	r6,r7
10009380:	1009883a 	mov	r4,r2
10009384:	dfc00215 	stw	ra,8(sp)
10009388:	80000015 	stw	zero,0(r16)
1000938c:	000d7480 	call	1000d748 <lseek>
10009390:	00ffffc4 	movi	r3,-1
10009394:	10c00526 	beq	r2,r3,100093ac <_lseek_r+0x50>
10009398:	dfc00217 	ldw	ra,8(sp)
1000939c:	dc400117 	ldw	r17,4(sp)
100093a0:	dc000017 	ldw	r16,0(sp)
100093a4:	dec00304 	addi	sp,sp,12
100093a8:	f800283a 	ret
100093ac:	80c00017 	ldw	r3,0(r16)
100093b0:	183ff926 	beq	r3,zero,10009398 <__alt_data_end+0xf8009398>
100093b4:	88c00015 	stw	r3,0(r17)
100093b8:	003ff706 	br	10009398 <__alt_data_end+0xf8009398>

100093bc <memmove>:
100093bc:	2005883a 	mov	r2,r4
100093c0:	29000b2e 	bgeu	r5,r4,100093f0 <memmove+0x34>
100093c4:	298f883a 	add	r7,r5,r6
100093c8:	21c0092e 	bgeu	r4,r7,100093f0 <memmove+0x34>
100093cc:	2187883a 	add	r3,r4,r6
100093d0:	198bc83a 	sub	r5,r3,r6
100093d4:	30004826 	beq	r6,zero,100094f8 <memmove+0x13c>
100093d8:	39ffffc4 	addi	r7,r7,-1
100093dc:	39000003 	ldbu	r4,0(r7)
100093e0:	18ffffc4 	addi	r3,r3,-1
100093e4:	19000005 	stb	r4,0(r3)
100093e8:	28fffb1e 	bne	r5,r3,100093d8 <__alt_data_end+0xf80093d8>
100093ec:	f800283a 	ret
100093f0:	00c003c4 	movi	r3,15
100093f4:	1980412e 	bgeu	r3,r6,100094fc <memmove+0x140>
100093f8:	2886b03a 	or	r3,r5,r2
100093fc:	18c000cc 	andi	r3,r3,3
10009400:	1800401e 	bne	r3,zero,10009504 <memmove+0x148>
10009404:	33fffc04 	addi	r15,r6,-16
10009408:	781ed13a 	srli	r15,r15,4
1000940c:	28c00104 	addi	r3,r5,4
10009410:	13400104 	addi	r13,r2,4
10009414:	781c913a 	slli	r14,r15,4
10009418:	2b000204 	addi	r12,r5,8
1000941c:	12c00204 	addi	r11,r2,8
10009420:	73800504 	addi	r14,r14,20
10009424:	2a800304 	addi	r10,r5,12
10009428:	12400304 	addi	r9,r2,12
1000942c:	2b9d883a 	add	r14,r5,r14
10009430:	2811883a 	mov	r8,r5
10009434:	100f883a 	mov	r7,r2
10009438:	41000017 	ldw	r4,0(r8)
1000943c:	39c00404 	addi	r7,r7,16
10009440:	18c00404 	addi	r3,r3,16
10009444:	393ffc15 	stw	r4,-16(r7)
10009448:	193ffc17 	ldw	r4,-16(r3)
1000944c:	6b400404 	addi	r13,r13,16
10009450:	5ac00404 	addi	r11,r11,16
10009454:	693ffc15 	stw	r4,-16(r13)
10009458:	61000017 	ldw	r4,0(r12)
1000945c:	4a400404 	addi	r9,r9,16
10009460:	42000404 	addi	r8,r8,16
10009464:	593ffc15 	stw	r4,-16(r11)
10009468:	51000017 	ldw	r4,0(r10)
1000946c:	63000404 	addi	r12,r12,16
10009470:	52800404 	addi	r10,r10,16
10009474:	493ffc15 	stw	r4,-16(r9)
10009478:	1bbfef1e 	bne	r3,r14,10009438 <__alt_data_end+0xf8009438>
1000947c:	79000044 	addi	r4,r15,1
10009480:	2008913a 	slli	r4,r4,4
10009484:	328003cc 	andi	r10,r6,15
10009488:	02c000c4 	movi	r11,3
1000948c:	1107883a 	add	r3,r2,r4
10009490:	290b883a 	add	r5,r5,r4
10009494:	5a801e2e 	bgeu	r11,r10,10009510 <memmove+0x154>
10009498:	1813883a 	mov	r9,r3
1000949c:	2811883a 	mov	r8,r5
100094a0:	500f883a 	mov	r7,r10
100094a4:	41000017 	ldw	r4,0(r8)
100094a8:	4a400104 	addi	r9,r9,4
100094ac:	39ffff04 	addi	r7,r7,-4
100094b0:	493fff15 	stw	r4,-4(r9)
100094b4:	42000104 	addi	r8,r8,4
100094b8:	59fffa36 	bltu	r11,r7,100094a4 <__alt_data_end+0xf80094a4>
100094bc:	513fff04 	addi	r4,r10,-4
100094c0:	2008d0ba 	srli	r4,r4,2
100094c4:	318000cc 	andi	r6,r6,3
100094c8:	21000044 	addi	r4,r4,1
100094cc:	2109883a 	add	r4,r4,r4
100094d0:	2109883a 	add	r4,r4,r4
100094d4:	1907883a 	add	r3,r3,r4
100094d8:	290b883a 	add	r5,r5,r4
100094dc:	30000b26 	beq	r6,zero,1000950c <memmove+0x150>
100094e0:	198d883a 	add	r6,r3,r6
100094e4:	29c00003 	ldbu	r7,0(r5)
100094e8:	18c00044 	addi	r3,r3,1
100094ec:	29400044 	addi	r5,r5,1
100094f0:	19ffffc5 	stb	r7,-1(r3)
100094f4:	19bffb1e 	bne	r3,r6,100094e4 <__alt_data_end+0xf80094e4>
100094f8:	f800283a 	ret
100094fc:	1007883a 	mov	r3,r2
10009500:	003ff606 	br	100094dc <__alt_data_end+0xf80094dc>
10009504:	1007883a 	mov	r3,r2
10009508:	003ff506 	br	100094e0 <__alt_data_end+0xf80094e0>
1000950c:	f800283a 	ret
10009510:	500d883a 	mov	r6,r10
10009514:	003ff106 	br	100094dc <__alt_data_end+0xf80094dc>

10009518 <_read_r>:
10009518:	defffd04 	addi	sp,sp,-12
1000951c:	2805883a 	mov	r2,r5
10009520:	dc000015 	stw	r16,0(sp)
10009524:	04040074 	movhi	r16,4097
10009528:	dc400115 	stw	r17,4(sp)
1000952c:	300b883a 	mov	r5,r6
10009530:	840ca804 	addi	r16,r16,12960
10009534:	2023883a 	mov	r17,r4
10009538:	380d883a 	mov	r6,r7
1000953c:	1009883a 	mov	r4,r2
10009540:	dfc00215 	stw	ra,8(sp)
10009544:	80000015 	stw	zero,0(r16)
10009548:	000d9240 	call	1000d924 <read>
1000954c:	00ffffc4 	movi	r3,-1
10009550:	10c00526 	beq	r2,r3,10009568 <_read_r+0x50>
10009554:	dfc00217 	ldw	ra,8(sp)
10009558:	dc400117 	ldw	r17,4(sp)
1000955c:	dc000017 	ldw	r16,0(sp)
10009560:	dec00304 	addi	sp,sp,12
10009564:	f800283a 	ret
10009568:	80c00017 	ldw	r3,0(r16)
1000956c:	183ff926 	beq	r3,zero,10009554 <__alt_data_end+0xf8009554>
10009570:	88c00015 	stw	r3,0(r17)
10009574:	003ff706 	br	10009554 <__alt_data_end+0xf8009554>

10009578 <_realloc_r>:
10009578:	defff604 	addi	sp,sp,-40
1000957c:	dc800215 	stw	r18,8(sp)
10009580:	dfc00915 	stw	ra,36(sp)
10009584:	df000815 	stw	fp,32(sp)
10009588:	ddc00715 	stw	r23,28(sp)
1000958c:	dd800615 	stw	r22,24(sp)
10009590:	dd400515 	stw	r21,20(sp)
10009594:	dd000415 	stw	r20,16(sp)
10009598:	dcc00315 	stw	r19,12(sp)
1000959c:	dc400115 	stw	r17,4(sp)
100095a0:	dc000015 	stw	r16,0(sp)
100095a4:	3025883a 	mov	r18,r6
100095a8:	2800b726 	beq	r5,zero,10009888 <_realloc_r+0x310>
100095ac:	282b883a 	mov	r21,r5
100095b0:	2029883a 	mov	r20,r4
100095b4:	000d8a00 	call	1000d8a0 <__malloc_lock>
100095b8:	a8bfff17 	ldw	r2,-4(r21)
100095bc:	043fff04 	movi	r16,-4
100095c0:	90c002c4 	addi	r3,r18,11
100095c4:	01000584 	movi	r4,22
100095c8:	acfffe04 	addi	r19,r21,-8
100095cc:	1420703a 	and	r16,r2,r16
100095d0:	20c0332e 	bgeu	r4,r3,100096a0 <_realloc_r+0x128>
100095d4:	047ffe04 	movi	r17,-8
100095d8:	1c62703a 	and	r17,r3,r17
100095dc:	8807883a 	mov	r3,r17
100095e0:	88005816 	blt	r17,zero,10009744 <_realloc_r+0x1cc>
100095e4:	8c805736 	bltu	r17,r18,10009744 <_realloc_r+0x1cc>
100095e8:	80c0300e 	bge	r16,r3,100096ac <_realloc_r+0x134>
100095ec:	07040074 	movhi	fp,4097
100095f0:	e7005104 	addi	fp,fp,324
100095f4:	e1c00217 	ldw	r7,8(fp)
100095f8:	9c09883a 	add	r4,r19,r16
100095fc:	22000117 	ldw	r8,4(r4)
10009600:	21c06326 	beq	r4,r7,10009790 <_realloc_r+0x218>
10009604:	017fff84 	movi	r5,-2
10009608:	414a703a 	and	r5,r8,r5
1000960c:	214b883a 	add	r5,r4,r5
10009610:	29800117 	ldw	r6,4(r5)
10009614:	3180004c 	andi	r6,r6,1
10009618:	30003f26 	beq	r6,zero,10009718 <_realloc_r+0x1a0>
1000961c:	1080004c 	andi	r2,r2,1
10009620:	10008326 	beq	r2,zero,10009830 <_realloc_r+0x2b8>
10009624:	900b883a 	mov	r5,r18
10009628:	a009883a 	mov	r4,r20
1000962c:	00050000 	call	10005000 <_malloc_r>
10009630:	1025883a 	mov	r18,r2
10009634:	10011e26 	beq	r2,zero,10009ab0 <_realloc_r+0x538>
10009638:	a93fff17 	ldw	r4,-4(r21)
1000963c:	10fffe04 	addi	r3,r2,-8
10009640:	00bfff84 	movi	r2,-2
10009644:	2084703a 	and	r2,r4,r2
10009648:	9885883a 	add	r2,r19,r2
1000964c:	1880ee26 	beq	r3,r2,10009a08 <_realloc_r+0x490>
10009650:	81bfff04 	addi	r6,r16,-4
10009654:	00800904 	movi	r2,36
10009658:	1180b836 	bltu	r2,r6,1000993c <_realloc_r+0x3c4>
1000965c:	00c004c4 	movi	r3,19
10009660:	19809636 	bltu	r3,r6,100098bc <_realloc_r+0x344>
10009664:	9005883a 	mov	r2,r18
10009668:	a807883a 	mov	r3,r21
1000966c:	19000017 	ldw	r4,0(r3)
10009670:	11000015 	stw	r4,0(r2)
10009674:	19000117 	ldw	r4,4(r3)
10009678:	11000115 	stw	r4,4(r2)
1000967c:	18c00217 	ldw	r3,8(r3)
10009680:	10c00215 	stw	r3,8(r2)
10009684:	a80b883a 	mov	r5,r21
10009688:	a009883a 	mov	r4,r20
1000968c:	00048d00 	call	100048d0 <_free_r>
10009690:	a009883a 	mov	r4,r20
10009694:	000d8c40 	call	1000d8c4 <__malloc_unlock>
10009698:	9005883a 	mov	r2,r18
1000969c:	00001206 	br	100096e8 <_realloc_r+0x170>
100096a0:	00c00404 	movi	r3,16
100096a4:	1823883a 	mov	r17,r3
100096a8:	003fce06 	br	100095e4 <__alt_data_end+0xf80095e4>
100096ac:	a825883a 	mov	r18,r21
100096b0:	8445c83a 	sub	r2,r16,r17
100096b4:	00c003c4 	movi	r3,15
100096b8:	18802636 	bltu	r3,r2,10009754 <_realloc_r+0x1dc>
100096bc:	99800117 	ldw	r6,4(r19)
100096c0:	9c07883a 	add	r3,r19,r16
100096c4:	3180004c 	andi	r6,r6,1
100096c8:	3420b03a 	or	r16,r6,r16
100096cc:	9c000115 	stw	r16,4(r19)
100096d0:	18800117 	ldw	r2,4(r3)
100096d4:	10800054 	ori	r2,r2,1
100096d8:	18800115 	stw	r2,4(r3)
100096dc:	a009883a 	mov	r4,r20
100096e0:	000d8c40 	call	1000d8c4 <__malloc_unlock>
100096e4:	9005883a 	mov	r2,r18
100096e8:	dfc00917 	ldw	ra,36(sp)
100096ec:	df000817 	ldw	fp,32(sp)
100096f0:	ddc00717 	ldw	r23,28(sp)
100096f4:	dd800617 	ldw	r22,24(sp)
100096f8:	dd400517 	ldw	r21,20(sp)
100096fc:	dd000417 	ldw	r20,16(sp)
10009700:	dcc00317 	ldw	r19,12(sp)
10009704:	dc800217 	ldw	r18,8(sp)
10009708:	dc400117 	ldw	r17,4(sp)
1000970c:	dc000017 	ldw	r16,0(sp)
10009710:	dec00a04 	addi	sp,sp,40
10009714:	f800283a 	ret
10009718:	017fff04 	movi	r5,-4
1000971c:	414a703a 	and	r5,r8,r5
10009720:	814d883a 	add	r6,r16,r5
10009724:	30c01f16 	blt	r6,r3,100097a4 <_realloc_r+0x22c>
10009728:	20800317 	ldw	r2,12(r4)
1000972c:	20c00217 	ldw	r3,8(r4)
10009730:	a825883a 	mov	r18,r21
10009734:	3021883a 	mov	r16,r6
10009738:	18800315 	stw	r2,12(r3)
1000973c:	10c00215 	stw	r3,8(r2)
10009740:	003fdb06 	br	100096b0 <__alt_data_end+0xf80096b0>
10009744:	00800304 	movi	r2,12
10009748:	a0800015 	stw	r2,0(r20)
1000974c:	0005883a 	mov	r2,zero
10009750:	003fe506 	br	100096e8 <__alt_data_end+0xf80096e8>
10009754:	98c00117 	ldw	r3,4(r19)
10009758:	9c4b883a 	add	r5,r19,r17
1000975c:	11000054 	ori	r4,r2,1
10009760:	18c0004c 	andi	r3,r3,1
10009764:	1c62b03a 	or	r17,r3,r17
10009768:	9c400115 	stw	r17,4(r19)
1000976c:	29000115 	stw	r4,4(r5)
10009770:	2885883a 	add	r2,r5,r2
10009774:	10c00117 	ldw	r3,4(r2)
10009778:	29400204 	addi	r5,r5,8
1000977c:	a009883a 	mov	r4,r20
10009780:	18c00054 	ori	r3,r3,1
10009784:	10c00115 	stw	r3,4(r2)
10009788:	00048d00 	call	100048d0 <_free_r>
1000978c:	003fd306 	br	100096dc <__alt_data_end+0xf80096dc>
10009790:	017fff04 	movi	r5,-4
10009794:	414a703a 	and	r5,r8,r5
10009798:	89800404 	addi	r6,r17,16
1000979c:	8151883a 	add	r8,r16,r5
100097a0:	4180590e 	bge	r8,r6,10009908 <_realloc_r+0x390>
100097a4:	1080004c 	andi	r2,r2,1
100097a8:	103f9e1e 	bne	r2,zero,10009624 <__alt_data_end+0xf8009624>
100097ac:	adbffe17 	ldw	r22,-8(r21)
100097b0:	00bfff04 	movi	r2,-4
100097b4:	9dadc83a 	sub	r22,r19,r22
100097b8:	b1800117 	ldw	r6,4(r22)
100097bc:	3084703a 	and	r2,r6,r2
100097c0:	20002026 	beq	r4,zero,10009844 <_realloc_r+0x2cc>
100097c4:	80af883a 	add	r23,r16,r2
100097c8:	b96f883a 	add	r23,r23,r5
100097cc:	21c05f26 	beq	r4,r7,1000994c <_realloc_r+0x3d4>
100097d0:	b8c01c16 	blt	r23,r3,10009844 <_realloc_r+0x2cc>
100097d4:	20800317 	ldw	r2,12(r4)
100097d8:	20c00217 	ldw	r3,8(r4)
100097dc:	81bfff04 	addi	r6,r16,-4
100097e0:	01000904 	movi	r4,36
100097e4:	18800315 	stw	r2,12(r3)
100097e8:	10c00215 	stw	r3,8(r2)
100097ec:	b0c00217 	ldw	r3,8(r22)
100097f0:	b0800317 	ldw	r2,12(r22)
100097f4:	b4800204 	addi	r18,r22,8
100097f8:	18800315 	stw	r2,12(r3)
100097fc:	10c00215 	stw	r3,8(r2)
10009800:	21801b36 	bltu	r4,r6,10009870 <_realloc_r+0x2f8>
10009804:	008004c4 	movi	r2,19
10009808:	1180352e 	bgeu	r2,r6,100098e0 <_realloc_r+0x368>
1000980c:	a8800017 	ldw	r2,0(r21)
10009810:	b0800215 	stw	r2,8(r22)
10009814:	a8800117 	ldw	r2,4(r21)
10009818:	b0800315 	stw	r2,12(r22)
1000981c:	008006c4 	movi	r2,27
10009820:	11807f36 	bltu	r2,r6,10009a20 <_realloc_r+0x4a8>
10009824:	b0800404 	addi	r2,r22,16
10009828:	ad400204 	addi	r21,r21,8
1000982c:	00002d06 	br	100098e4 <_realloc_r+0x36c>
10009830:	adbffe17 	ldw	r22,-8(r21)
10009834:	00bfff04 	movi	r2,-4
10009838:	9dadc83a 	sub	r22,r19,r22
1000983c:	b1000117 	ldw	r4,4(r22)
10009840:	2084703a 	and	r2,r4,r2
10009844:	b03f7726 	beq	r22,zero,10009624 <__alt_data_end+0xf8009624>
10009848:	80af883a 	add	r23,r16,r2
1000984c:	b8ff7516 	blt	r23,r3,10009624 <__alt_data_end+0xf8009624>
10009850:	b0800317 	ldw	r2,12(r22)
10009854:	b0c00217 	ldw	r3,8(r22)
10009858:	81bfff04 	addi	r6,r16,-4
1000985c:	01000904 	movi	r4,36
10009860:	18800315 	stw	r2,12(r3)
10009864:	10c00215 	stw	r3,8(r2)
10009868:	b4800204 	addi	r18,r22,8
1000986c:	21bfe52e 	bgeu	r4,r6,10009804 <__alt_data_end+0xf8009804>
10009870:	a80b883a 	mov	r5,r21
10009874:	9009883a 	mov	r4,r18
10009878:	00093bc0 	call	100093bc <memmove>
1000987c:	b821883a 	mov	r16,r23
10009880:	b027883a 	mov	r19,r22
10009884:	003f8a06 	br	100096b0 <__alt_data_end+0xf80096b0>
10009888:	300b883a 	mov	r5,r6
1000988c:	dfc00917 	ldw	ra,36(sp)
10009890:	df000817 	ldw	fp,32(sp)
10009894:	ddc00717 	ldw	r23,28(sp)
10009898:	dd800617 	ldw	r22,24(sp)
1000989c:	dd400517 	ldw	r21,20(sp)
100098a0:	dd000417 	ldw	r20,16(sp)
100098a4:	dcc00317 	ldw	r19,12(sp)
100098a8:	dc800217 	ldw	r18,8(sp)
100098ac:	dc400117 	ldw	r17,4(sp)
100098b0:	dc000017 	ldw	r16,0(sp)
100098b4:	dec00a04 	addi	sp,sp,40
100098b8:	00050001 	jmpi	10005000 <_malloc_r>
100098bc:	a8c00017 	ldw	r3,0(r21)
100098c0:	90c00015 	stw	r3,0(r18)
100098c4:	a8c00117 	ldw	r3,4(r21)
100098c8:	90c00115 	stw	r3,4(r18)
100098cc:	00c006c4 	movi	r3,27
100098d0:	19804536 	bltu	r3,r6,100099e8 <_realloc_r+0x470>
100098d4:	90800204 	addi	r2,r18,8
100098d8:	a8c00204 	addi	r3,r21,8
100098dc:	003f6306 	br	1000966c <__alt_data_end+0xf800966c>
100098e0:	9005883a 	mov	r2,r18
100098e4:	a8c00017 	ldw	r3,0(r21)
100098e8:	b821883a 	mov	r16,r23
100098ec:	b027883a 	mov	r19,r22
100098f0:	10c00015 	stw	r3,0(r2)
100098f4:	a8c00117 	ldw	r3,4(r21)
100098f8:	10c00115 	stw	r3,4(r2)
100098fc:	a8c00217 	ldw	r3,8(r21)
10009900:	10c00215 	stw	r3,8(r2)
10009904:	003f6a06 	br	100096b0 <__alt_data_end+0xf80096b0>
10009908:	9c67883a 	add	r19,r19,r17
1000990c:	4445c83a 	sub	r2,r8,r17
10009910:	e4c00215 	stw	r19,8(fp)
10009914:	10800054 	ori	r2,r2,1
10009918:	98800115 	stw	r2,4(r19)
1000991c:	a8bfff17 	ldw	r2,-4(r21)
10009920:	a009883a 	mov	r4,r20
10009924:	1080004c 	andi	r2,r2,1
10009928:	1462b03a 	or	r17,r2,r17
1000992c:	ac7fff15 	stw	r17,-4(r21)
10009930:	000d8c40 	call	1000d8c4 <__malloc_unlock>
10009934:	a805883a 	mov	r2,r21
10009938:	003f6b06 	br	100096e8 <__alt_data_end+0xf80096e8>
1000993c:	a80b883a 	mov	r5,r21
10009940:	9009883a 	mov	r4,r18
10009944:	00093bc0 	call	100093bc <memmove>
10009948:	003f4e06 	br	10009684 <__alt_data_end+0xf8009684>
1000994c:	89000404 	addi	r4,r17,16
10009950:	b93fbc16 	blt	r23,r4,10009844 <__alt_data_end+0xf8009844>
10009954:	b0800317 	ldw	r2,12(r22)
10009958:	b0c00217 	ldw	r3,8(r22)
1000995c:	81bfff04 	addi	r6,r16,-4
10009960:	01000904 	movi	r4,36
10009964:	18800315 	stw	r2,12(r3)
10009968:	10c00215 	stw	r3,8(r2)
1000996c:	b4800204 	addi	r18,r22,8
10009970:	21804336 	bltu	r4,r6,10009a80 <_realloc_r+0x508>
10009974:	008004c4 	movi	r2,19
10009978:	11803f2e 	bgeu	r2,r6,10009a78 <_realloc_r+0x500>
1000997c:	a8800017 	ldw	r2,0(r21)
10009980:	b0800215 	stw	r2,8(r22)
10009984:	a8800117 	ldw	r2,4(r21)
10009988:	b0800315 	stw	r2,12(r22)
1000998c:	008006c4 	movi	r2,27
10009990:	11803f36 	bltu	r2,r6,10009a90 <_realloc_r+0x518>
10009994:	b0800404 	addi	r2,r22,16
10009998:	ad400204 	addi	r21,r21,8
1000999c:	a8c00017 	ldw	r3,0(r21)
100099a0:	10c00015 	stw	r3,0(r2)
100099a4:	a8c00117 	ldw	r3,4(r21)
100099a8:	10c00115 	stw	r3,4(r2)
100099ac:	a8c00217 	ldw	r3,8(r21)
100099b0:	10c00215 	stw	r3,8(r2)
100099b4:	b447883a 	add	r3,r22,r17
100099b8:	bc45c83a 	sub	r2,r23,r17
100099bc:	e0c00215 	stw	r3,8(fp)
100099c0:	10800054 	ori	r2,r2,1
100099c4:	18800115 	stw	r2,4(r3)
100099c8:	b0800117 	ldw	r2,4(r22)
100099cc:	a009883a 	mov	r4,r20
100099d0:	1080004c 	andi	r2,r2,1
100099d4:	1462b03a 	or	r17,r2,r17
100099d8:	b4400115 	stw	r17,4(r22)
100099dc:	000d8c40 	call	1000d8c4 <__malloc_unlock>
100099e0:	9005883a 	mov	r2,r18
100099e4:	003f4006 	br	100096e8 <__alt_data_end+0xf80096e8>
100099e8:	a8c00217 	ldw	r3,8(r21)
100099ec:	90c00215 	stw	r3,8(r18)
100099f0:	a8c00317 	ldw	r3,12(r21)
100099f4:	90c00315 	stw	r3,12(r18)
100099f8:	30801126 	beq	r6,r2,10009a40 <_realloc_r+0x4c8>
100099fc:	90800404 	addi	r2,r18,16
10009a00:	a8c00404 	addi	r3,r21,16
10009a04:	003f1906 	br	1000966c <__alt_data_end+0xf800966c>
10009a08:	90ffff17 	ldw	r3,-4(r18)
10009a0c:	00bfff04 	movi	r2,-4
10009a10:	a825883a 	mov	r18,r21
10009a14:	1884703a 	and	r2,r3,r2
10009a18:	80a1883a 	add	r16,r16,r2
10009a1c:	003f2406 	br	100096b0 <__alt_data_end+0xf80096b0>
10009a20:	a8800217 	ldw	r2,8(r21)
10009a24:	b0800415 	stw	r2,16(r22)
10009a28:	a8800317 	ldw	r2,12(r21)
10009a2c:	b0800515 	stw	r2,20(r22)
10009a30:	31000a26 	beq	r6,r4,10009a5c <_realloc_r+0x4e4>
10009a34:	b0800604 	addi	r2,r22,24
10009a38:	ad400404 	addi	r21,r21,16
10009a3c:	003fa906 	br	100098e4 <__alt_data_end+0xf80098e4>
10009a40:	a9000417 	ldw	r4,16(r21)
10009a44:	90800604 	addi	r2,r18,24
10009a48:	a8c00604 	addi	r3,r21,24
10009a4c:	91000415 	stw	r4,16(r18)
10009a50:	a9000517 	ldw	r4,20(r21)
10009a54:	91000515 	stw	r4,20(r18)
10009a58:	003f0406 	br	1000966c <__alt_data_end+0xf800966c>
10009a5c:	a8c00417 	ldw	r3,16(r21)
10009a60:	ad400604 	addi	r21,r21,24
10009a64:	b0800804 	addi	r2,r22,32
10009a68:	b0c00615 	stw	r3,24(r22)
10009a6c:	a8ffff17 	ldw	r3,-4(r21)
10009a70:	b0c00715 	stw	r3,28(r22)
10009a74:	003f9b06 	br	100098e4 <__alt_data_end+0xf80098e4>
10009a78:	9005883a 	mov	r2,r18
10009a7c:	003fc706 	br	1000999c <__alt_data_end+0xf800999c>
10009a80:	a80b883a 	mov	r5,r21
10009a84:	9009883a 	mov	r4,r18
10009a88:	00093bc0 	call	100093bc <memmove>
10009a8c:	003fc906 	br	100099b4 <__alt_data_end+0xf80099b4>
10009a90:	a8800217 	ldw	r2,8(r21)
10009a94:	b0800415 	stw	r2,16(r22)
10009a98:	a8800317 	ldw	r2,12(r21)
10009a9c:	b0800515 	stw	r2,20(r22)
10009aa0:	31000726 	beq	r6,r4,10009ac0 <_realloc_r+0x548>
10009aa4:	b0800604 	addi	r2,r22,24
10009aa8:	ad400404 	addi	r21,r21,16
10009aac:	003fbb06 	br	1000999c <__alt_data_end+0xf800999c>
10009ab0:	a009883a 	mov	r4,r20
10009ab4:	000d8c40 	call	1000d8c4 <__malloc_unlock>
10009ab8:	0005883a 	mov	r2,zero
10009abc:	003f0a06 	br	100096e8 <__alt_data_end+0xf80096e8>
10009ac0:	a8c00417 	ldw	r3,16(r21)
10009ac4:	ad400604 	addi	r21,r21,24
10009ac8:	b0800804 	addi	r2,r22,32
10009acc:	b0c00615 	stw	r3,24(r22)
10009ad0:	a8ffff17 	ldw	r3,-4(r21)
10009ad4:	b0c00715 	stw	r3,28(r22)
10009ad8:	003fb006 	br	1000999c <__alt_data_end+0xf800999c>

10009adc <_wcrtomb_r>:
10009adc:	defff604 	addi	sp,sp,-40
10009ae0:	00840074 	movhi	r2,4097
10009ae4:	dc800815 	stw	r18,32(sp)
10009ae8:	dc400715 	stw	r17,28(sp)
10009aec:	dc000615 	stw	r16,24(sp)
10009af0:	1085db04 	addi	r2,r2,5996
10009af4:	dfc00915 	stw	ra,36(sp)
10009af8:	2021883a 	mov	r16,r4
10009afc:	3823883a 	mov	r17,r7
10009b00:	14800017 	ldw	r18,0(r2)
10009b04:	28001426 	beq	r5,zero,10009b58 <_wcrtomb_r+0x7c>
10009b08:	d9400415 	stw	r5,16(sp)
10009b0c:	d9800515 	stw	r6,20(sp)
10009b10:	0004de40 	call	10004de4 <__locale_charset>
10009b14:	d9800517 	ldw	r6,20(sp)
10009b18:	d9400417 	ldw	r5,16(sp)
10009b1c:	100f883a 	mov	r7,r2
10009b20:	dc400015 	stw	r17,0(sp)
10009b24:	8009883a 	mov	r4,r16
10009b28:	903ee83a 	callr	r18
10009b2c:	00ffffc4 	movi	r3,-1
10009b30:	10c0031e 	bne	r2,r3,10009b40 <_wcrtomb_r+0x64>
10009b34:	88000015 	stw	zero,0(r17)
10009b38:	00c02284 	movi	r3,138
10009b3c:	80c00015 	stw	r3,0(r16)
10009b40:	dfc00917 	ldw	ra,36(sp)
10009b44:	dc800817 	ldw	r18,32(sp)
10009b48:	dc400717 	ldw	r17,28(sp)
10009b4c:	dc000617 	ldw	r16,24(sp)
10009b50:	dec00a04 	addi	sp,sp,40
10009b54:	f800283a 	ret
10009b58:	0004de40 	call	10004de4 <__locale_charset>
10009b5c:	100f883a 	mov	r7,r2
10009b60:	dc400015 	stw	r17,0(sp)
10009b64:	000d883a 	mov	r6,zero
10009b68:	d9400104 	addi	r5,sp,4
10009b6c:	8009883a 	mov	r4,r16
10009b70:	903ee83a 	callr	r18
10009b74:	003fed06 	br	10009b2c <__alt_data_end+0xf8009b2c>

10009b78 <wcrtomb>:
10009b78:	defff604 	addi	sp,sp,-40
10009b7c:	00840074 	movhi	r2,4097
10009b80:	dc800615 	stw	r18,24(sp)
10009b84:	dc400515 	stw	r17,20(sp)
10009b88:	1085d704 	addi	r2,r2,5980
10009b8c:	dfc00915 	stw	ra,36(sp)
10009b90:	dd000815 	stw	r20,32(sp)
10009b94:	dcc00715 	stw	r19,28(sp)
10009b98:	dc000415 	stw	r16,16(sp)
10009b9c:	3025883a 	mov	r18,r6
10009ba0:	14400017 	ldw	r17,0(r2)
10009ba4:	20001926 	beq	r4,zero,10009c0c <wcrtomb+0x94>
10009ba8:	00840074 	movhi	r2,4097
10009bac:	1085db04 	addi	r2,r2,5996
10009bb0:	15000017 	ldw	r20,0(r2)
10009bb4:	2021883a 	mov	r16,r4
10009bb8:	2827883a 	mov	r19,r5
10009bbc:	0004de40 	call	10004de4 <__locale_charset>
10009bc0:	100f883a 	mov	r7,r2
10009bc4:	dc800015 	stw	r18,0(sp)
10009bc8:	980d883a 	mov	r6,r19
10009bcc:	800b883a 	mov	r5,r16
10009bd0:	8809883a 	mov	r4,r17
10009bd4:	a03ee83a 	callr	r20
10009bd8:	00ffffc4 	movi	r3,-1
10009bdc:	10c0031e 	bne	r2,r3,10009bec <wcrtomb+0x74>
10009be0:	90000015 	stw	zero,0(r18)
10009be4:	00c02284 	movi	r3,138
10009be8:	88c00015 	stw	r3,0(r17)
10009bec:	dfc00917 	ldw	ra,36(sp)
10009bf0:	dd000817 	ldw	r20,32(sp)
10009bf4:	dcc00717 	ldw	r19,28(sp)
10009bf8:	dc800617 	ldw	r18,24(sp)
10009bfc:	dc400517 	ldw	r17,20(sp)
10009c00:	dc000417 	ldw	r16,16(sp)
10009c04:	dec00a04 	addi	sp,sp,40
10009c08:	f800283a 	ret
10009c0c:	00840074 	movhi	r2,4097
10009c10:	1085db04 	addi	r2,r2,5996
10009c14:	14000017 	ldw	r16,0(r2)
10009c18:	0004de40 	call	10004de4 <__locale_charset>
10009c1c:	100f883a 	mov	r7,r2
10009c20:	dc800015 	stw	r18,0(sp)
10009c24:	000d883a 	mov	r6,zero
10009c28:	d9400104 	addi	r5,sp,4
10009c2c:	8809883a 	mov	r4,r17
10009c30:	803ee83a 	callr	r16
10009c34:	003fe806 	br	10009bd8 <__alt_data_end+0xf8009bd8>

10009c38 <__ascii_wctomb>:
10009c38:	28000526 	beq	r5,zero,10009c50 <__ascii_wctomb+0x18>
10009c3c:	00803fc4 	movi	r2,255
10009c40:	11800536 	bltu	r2,r6,10009c58 <__ascii_wctomb+0x20>
10009c44:	29800005 	stb	r6,0(r5)
10009c48:	00800044 	movi	r2,1
10009c4c:	f800283a 	ret
10009c50:	0005883a 	mov	r2,zero
10009c54:	f800283a 	ret
10009c58:	00802284 	movi	r2,138
10009c5c:	20800015 	stw	r2,0(r4)
10009c60:	00bfffc4 	movi	r2,-1
10009c64:	f800283a 	ret

10009c68 <_wctomb_r>:
10009c68:	00840074 	movhi	r2,4097
10009c6c:	defff904 	addi	sp,sp,-28
10009c70:	1085db04 	addi	r2,r2,5996
10009c74:	dfc00615 	stw	ra,24(sp)
10009c78:	dc400515 	stw	r17,20(sp)
10009c7c:	dc000415 	stw	r16,16(sp)
10009c80:	3823883a 	mov	r17,r7
10009c84:	14000017 	ldw	r16,0(r2)
10009c88:	d9000115 	stw	r4,4(sp)
10009c8c:	d9400215 	stw	r5,8(sp)
10009c90:	d9800315 	stw	r6,12(sp)
10009c94:	0004de40 	call	10004de4 <__locale_charset>
10009c98:	d9800317 	ldw	r6,12(sp)
10009c9c:	d9400217 	ldw	r5,8(sp)
10009ca0:	d9000117 	ldw	r4,4(sp)
10009ca4:	100f883a 	mov	r7,r2
10009ca8:	dc400015 	stw	r17,0(sp)
10009cac:	803ee83a 	callr	r16
10009cb0:	dfc00617 	ldw	ra,24(sp)
10009cb4:	dc400517 	ldw	r17,20(sp)
10009cb8:	dc000417 	ldw	r16,16(sp)
10009cbc:	dec00704 	addi	sp,sp,28
10009cc0:	f800283a 	ret

10009cc4 <__udivdi3>:
10009cc4:	defff404 	addi	sp,sp,-48
10009cc8:	dcc00515 	stw	r19,20(sp)
10009ccc:	dc000215 	stw	r16,8(sp)
10009cd0:	dfc00b15 	stw	ra,44(sp)
10009cd4:	df000a15 	stw	fp,40(sp)
10009cd8:	ddc00915 	stw	r23,36(sp)
10009cdc:	dd800815 	stw	r22,32(sp)
10009ce0:	dd400715 	stw	r21,28(sp)
10009ce4:	dd000615 	stw	r20,24(sp)
10009ce8:	dc800415 	stw	r18,16(sp)
10009cec:	dc400315 	stw	r17,12(sp)
10009cf0:	2027883a 	mov	r19,r4
10009cf4:	2821883a 	mov	r16,r5
10009cf8:	3800461e 	bne	r7,zero,10009e14 <__udivdi3+0x150>
10009cfc:	3023883a 	mov	r17,r6
10009d00:	2025883a 	mov	r18,r4
10009d04:	2980572e 	bgeu	r5,r6,10009e64 <__udivdi3+0x1a0>
10009d08:	00bfffd4 	movui	r2,65535
10009d0c:	282d883a 	mov	r22,r5
10009d10:	1180b236 	bltu	r2,r6,10009fdc <__udivdi3+0x318>
10009d14:	00803fc4 	movi	r2,255
10009d18:	1185803a 	cmpltu	r2,r2,r6
10009d1c:	100490fa 	slli	r2,r2,3
10009d20:	3086d83a 	srl	r3,r6,r2
10009d24:	01040074 	movhi	r4,4097
10009d28:	213edd04 	addi	r4,r4,-1164
10009d2c:	20c7883a 	add	r3,r4,r3
10009d30:	18c00003 	ldbu	r3,0(r3)
10009d34:	1885883a 	add	r2,r3,r2
10009d38:	00c00804 	movi	r3,32
10009d3c:	1887c83a 	sub	r3,r3,r2
10009d40:	18000526 	beq	r3,zero,10009d58 <__udivdi3+0x94>
10009d44:	80e0983a 	sll	r16,r16,r3
10009d48:	9884d83a 	srl	r2,r19,r2
10009d4c:	30e2983a 	sll	r17,r6,r3
10009d50:	98e4983a 	sll	r18,r19,r3
10009d54:	142cb03a 	or	r22,r2,r16
10009d58:	882ad43a 	srli	r21,r17,16
10009d5c:	b009883a 	mov	r4,r22
10009d60:	8d3fffcc 	andi	r20,r17,65535
10009d64:	a80b883a 	mov	r5,r21
10009d68:	000a9e00 	call	1000a9e0 <__umodsi3>
10009d6c:	b009883a 	mov	r4,r22
10009d70:	a80b883a 	mov	r5,r21
10009d74:	1027883a 	mov	r19,r2
10009d78:	000a97c0 	call	1000a97c <__udivsi3>
10009d7c:	100b883a 	mov	r5,r2
10009d80:	a009883a 	mov	r4,r20
10009d84:	102d883a 	mov	r22,r2
10009d88:	000aa380 	call	1000aa38 <__mulsi3>
10009d8c:	9826943a 	slli	r19,r19,16
10009d90:	9006d43a 	srli	r3,r18,16
10009d94:	1cc6b03a 	or	r3,r3,r19
10009d98:	1880052e 	bgeu	r3,r2,10009db0 <__udivdi3+0xec>
10009d9c:	1c47883a 	add	r3,r3,r17
10009da0:	b13fffc4 	addi	r4,r22,-1
10009da4:	1c400136 	bltu	r3,r17,10009dac <__udivdi3+0xe8>
10009da8:	18814236 	bltu	r3,r2,1000a2b4 <__udivdi3+0x5f0>
10009dac:	202d883a 	mov	r22,r4
10009db0:	18a1c83a 	sub	r16,r3,r2
10009db4:	8009883a 	mov	r4,r16
10009db8:	a80b883a 	mov	r5,r21
10009dbc:	000a9e00 	call	1000a9e0 <__umodsi3>
10009dc0:	1027883a 	mov	r19,r2
10009dc4:	8009883a 	mov	r4,r16
10009dc8:	a80b883a 	mov	r5,r21
10009dcc:	9826943a 	slli	r19,r19,16
10009dd0:	000a97c0 	call	1000a97c <__udivsi3>
10009dd4:	100b883a 	mov	r5,r2
10009dd8:	a009883a 	mov	r4,r20
10009ddc:	94bfffcc 	andi	r18,r18,65535
10009de0:	1021883a 	mov	r16,r2
10009de4:	94e4b03a 	or	r18,r18,r19
10009de8:	000aa380 	call	1000aa38 <__mulsi3>
10009dec:	9080052e 	bgeu	r18,r2,10009e04 <__udivdi3+0x140>
10009df0:	8ca5883a 	add	r18,r17,r18
10009df4:	80ffffc4 	addi	r3,r16,-1
10009df8:	94410c36 	bltu	r18,r17,1000a22c <__udivdi3+0x568>
10009dfc:	90810b2e 	bgeu	r18,r2,1000a22c <__udivdi3+0x568>
10009e00:	843fff84 	addi	r16,r16,-2
10009e04:	b004943a 	slli	r2,r22,16
10009e08:	0007883a 	mov	r3,zero
10009e0c:	1404b03a 	or	r2,r2,r16
10009e10:	00005e06 	br	10009f8c <__udivdi3+0x2c8>
10009e14:	29c05b36 	bltu	r5,r7,10009f84 <__udivdi3+0x2c0>
10009e18:	00bfffd4 	movui	r2,65535
10009e1c:	11c0672e 	bgeu	r2,r7,10009fbc <__udivdi3+0x2f8>
10009e20:	00804034 	movhi	r2,256
10009e24:	10bfffc4 	addi	r2,r2,-1
10009e28:	11c10a36 	bltu	r2,r7,1000a254 <__udivdi3+0x590>
10009e2c:	00800404 	movi	r2,16
10009e30:	3886d83a 	srl	r3,r7,r2
10009e34:	01040074 	movhi	r4,4097
10009e38:	213edd04 	addi	r4,r4,-1164
10009e3c:	20c7883a 	add	r3,r4,r3
10009e40:	18c00003 	ldbu	r3,0(r3)
10009e44:	05c00804 	movi	r23,32
10009e48:	1885883a 	add	r2,r3,r2
10009e4c:	b8afc83a 	sub	r23,r23,r2
10009e50:	b800671e 	bne	r23,zero,10009ff0 <__udivdi3+0x32c>
10009e54:	3c010536 	bltu	r7,r16,1000a26c <__udivdi3+0x5a8>
10009e58:	9985403a 	cmpgeu	r2,r19,r6
10009e5c:	0007883a 	mov	r3,zero
10009e60:	00004a06 	br	10009f8c <__udivdi3+0x2c8>
10009e64:	3000041e 	bne	r6,zero,10009e78 <__udivdi3+0x1b4>
10009e68:	000b883a 	mov	r5,zero
10009e6c:	01000044 	movi	r4,1
10009e70:	000a97c0 	call	1000a97c <__udivsi3>
10009e74:	1023883a 	mov	r17,r2
10009e78:	00bfffd4 	movui	r2,65535
10009e7c:	1440532e 	bgeu	r2,r17,10009fcc <__udivdi3+0x308>
10009e80:	00804034 	movhi	r2,256
10009e84:	10bfffc4 	addi	r2,r2,-1
10009e88:	1440f436 	bltu	r2,r17,1000a25c <__udivdi3+0x598>
10009e8c:	00800404 	movi	r2,16
10009e90:	8886d83a 	srl	r3,r17,r2
10009e94:	01040074 	movhi	r4,4097
10009e98:	213edd04 	addi	r4,r4,-1164
10009e9c:	20c7883a 	add	r3,r4,r3
10009ea0:	18c00003 	ldbu	r3,0(r3)
10009ea4:	1885883a 	add	r2,r3,r2
10009ea8:	00c00804 	movi	r3,32
10009eac:	1887c83a 	sub	r3,r3,r2
10009eb0:	1800a51e 	bne	r3,zero,1000a148 <__udivdi3+0x484>
10009eb4:	882ad43a 	srli	r21,r17,16
10009eb8:	8461c83a 	sub	r16,r16,r17
10009ebc:	8d3fffcc 	andi	r20,r17,65535
10009ec0:	00c00044 	movi	r3,1
10009ec4:	a80b883a 	mov	r5,r21
10009ec8:	8009883a 	mov	r4,r16
10009ecc:	d8c00115 	stw	r3,4(sp)
10009ed0:	000a9e00 	call	1000a9e0 <__umodsi3>
10009ed4:	a80b883a 	mov	r5,r21
10009ed8:	8009883a 	mov	r4,r16
10009edc:	1027883a 	mov	r19,r2
10009ee0:	000a97c0 	call	1000a97c <__udivsi3>
10009ee4:	a00b883a 	mov	r5,r20
10009ee8:	1009883a 	mov	r4,r2
10009eec:	102d883a 	mov	r22,r2
10009ef0:	000aa380 	call	1000aa38 <__mulsi3>
10009ef4:	9826943a 	slli	r19,r19,16
10009ef8:	900ed43a 	srli	r7,r18,16
10009efc:	d8c00117 	ldw	r3,4(sp)
10009f00:	3cceb03a 	or	r7,r7,r19
10009f04:	3880052e 	bgeu	r7,r2,10009f1c <__udivdi3+0x258>
10009f08:	3c4f883a 	add	r7,r7,r17
10009f0c:	b13fffc4 	addi	r4,r22,-1
10009f10:	3c400136 	bltu	r7,r17,10009f18 <__udivdi3+0x254>
10009f14:	3880e436 	bltu	r7,r2,1000a2a8 <__udivdi3+0x5e4>
10009f18:	202d883a 	mov	r22,r4
10009f1c:	38a1c83a 	sub	r16,r7,r2
10009f20:	8009883a 	mov	r4,r16
10009f24:	a80b883a 	mov	r5,r21
10009f28:	d8c00115 	stw	r3,4(sp)
10009f2c:	000a9e00 	call	1000a9e0 <__umodsi3>
10009f30:	1027883a 	mov	r19,r2
10009f34:	8009883a 	mov	r4,r16
10009f38:	a80b883a 	mov	r5,r21
10009f3c:	9826943a 	slli	r19,r19,16
10009f40:	000a97c0 	call	1000a97c <__udivsi3>
10009f44:	a00b883a 	mov	r5,r20
10009f48:	1009883a 	mov	r4,r2
10009f4c:	94bfffcc 	andi	r18,r18,65535
10009f50:	1021883a 	mov	r16,r2
10009f54:	94e4b03a 	or	r18,r18,r19
10009f58:	000aa380 	call	1000aa38 <__mulsi3>
10009f5c:	d8c00117 	ldw	r3,4(sp)
10009f60:	9080052e 	bgeu	r18,r2,10009f78 <__udivdi3+0x2b4>
10009f64:	8ca5883a 	add	r18,r17,r18
10009f68:	813fffc4 	addi	r4,r16,-1
10009f6c:	9440ad36 	bltu	r18,r17,1000a224 <__udivdi3+0x560>
10009f70:	9080ac2e 	bgeu	r18,r2,1000a224 <__udivdi3+0x560>
10009f74:	843fff84 	addi	r16,r16,-2
10009f78:	b004943a 	slli	r2,r22,16
10009f7c:	1404b03a 	or	r2,r2,r16
10009f80:	00000206 	br	10009f8c <__udivdi3+0x2c8>
10009f84:	0007883a 	mov	r3,zero
10009f88:	0005883a 	mov	r2,zero
10009f8c:	dfc00b17 	ldw	ra,44(sp)
10009f90:	df000a17 	ldw	fp,40(sp)
10009f94:	ddc00917 	ldw	r23,36(sp)
10009f98:	dd800817 	ldw	r22,32(sp)
10009f9c:	dd400717 	ldw	r21,28(sp)
10009fa0:	dd000617 	ldw	r20,24(sp)
10009fa4:	dcc00517 	ldw	r19,20(sp)
10009fa8:	dc800417 	ldw	r18,16(sp)
10009fac:	dc400317 	ldw	r17,12(sp)
10009fb0:	dc000217 	ldw	r16,8(sp)
10009fb4:	dec00c04 	addi	sp,sp,48
10009fb8:	f800283a 	ret
10009fbc:	00803fc4 	movi	r2,255
10009fc0:	11c5803a 	cmpltu	r2,r2,r7
10009fc4:	100490fa 	slli	r2,r2,3
10009fc8:	003f9906 	br	10009e30 <__alt_data_end+0xf8009e30>
10009fcc:	00803fc4 	movi	r2,255
10009fd0:	1445803a 	cmpltu	r2,r2,r17
10009fd4:	100490fa 	slli	r2,r2,3
10009fd8:	003fad06 	br	10009e90 <__alt_data_end+0xf8009e90>
10009fdc:	00804034 	movhi	r2,256
10009fe0:	10bfffc4 	addi	r2,r2,-1
10009fe4:	11809f36 	bltu	r2,r6,1000a264 <__udivdi3+0x5a0>
10009fe8:	00800404 	movi	r2,16
10009fec:	003f4c06 	br	10009d20 <__alt_data_end+0xf8009d20>
10009ff0:	3dce983a 	sll	r7,r7,r23
10009ff4:	30b8d83a 	srl	fp,r6,r2
10009ff8:	80a2d83a 	srl	r17,r16,r2
10009ffc:	35cc983a 	sll	r6,r6,r23
1000a000:	3f38b03a 	or	fp,r7,fp
1000a004:	e024d43a 	srli	r18,fp,16
1000a008:	9884d83a 	srl	r2,r19,r2
1000a00c:	85e0983a 	sll	r16,r16,r23
1000a010:	8809883a 	mov	r4,r17
1000a014:	900b883a 	mov	r5,r18
1000a018:	d9800015 	stw	r6,0(sp)
1000a01c:	1420b03a 	or	r16,r2,r16
1000a020:	000a9e00 	call	1000a9e0 <__umodsi3>
1000a024:	900b883a 	mov	r5,r18
1000a028:	8809883a 	mov	r4,r17
1000a02c:	1029883a 	mov	r20,r2
1000a030:	e5bfffcc 	andi	r22,fp,65535
1000a034:	000a97c0 	call	1000a97c <__udivsi3>
1000a038:	100b883a 	mov	r5,r2
1000a03c:	b009883a 	mov	r4,r22
1000a040:	102b883a 	mov	r21,r2
1000a044:	000aa380 	call	1000aa38 <__mulsi3>
1000a048:	a028943a 	slli	r20,r20,16
1000a04c:	8006d43a 	srli	r3,r16,16
1000a050:	1d06b03a 	or	r3,r3,r20
1000a054:	1880042e 	bgeu	r3,r2,1000a068 <__udivdi3+0x3a4>
1000a058:	1f07883a 	add	r3,r3,fp
1000a05c:	a93fffc4 	addi	r4,r21,-1
1000a060:	1f00892e 	bgeu	r3,fp,1000a288 <__udivdi3+0x5c4>
1000a064:	202b883a 	mov	r21,r4
1000a068:	18a3c83a 	sub	r17,r3,r2
1000a06c:	8809883a 	mov	r4,r17
1000a070:	900b883a 	mov	r5,r18
1000a074:	000a9e00 	call	1000a9e0 <__umodsi3>
1000a078:	1029883a 	mov	r20,r2
1000a07c:	8809883a 	mov	r4,r17
1000a080:	900b883a 	mov	r5,r18
1000a084:	a028943a 	slli	r20,r20,16
1000a088:	000a97c0 	call	1000a97c <__udivsi3>
1000a08c:	100b883a 	mov	r5,r2
1000a090:	b009883a 	mov	r4,r22
1000a094:	843fffcc 	andi	r16,r16,65535
1000a098:	1023883a 	mov	r17,r2
1000a09c:	8520b03a 	or	r16,r16,r20
1000a0a0:	000aa380 	call	1000aa38 <__mulsi3>
1000a0a4:	8080042e 	bgeu	r16,r2,1000a0b8 <__udivdi3+0x3f4>
1000a0a8:	8721883a 	add	r16,r16,fp
1000a0ac:	88ffffc4 	addi	r3,r17,-1
1000a0b0:	8700712e 	bgeu	r16,fp,1000a278 <__udivdi3+0x5b4>
1000a0b4:	1823883a 	mov	r17,r3
1000a0b8:	a80e943a 	slli	r7,r21,16
1000a0bc:	d8c00017 	ldw	r3,0(sp)
1000a0c0:	80a1c83a 	sub	r16,r16,r2
1000a0c4:	3c64b03a 	or	r18,r7,r17
1000a0c8:	1d3fffcc 	andi	r20,r3,65535
1000a0cc:	9022d43a 	srli	r17,r18,16
1000a0d0:	95bfffcc 	andi	r22,r18,65535
1000a0d4:	a00b883a 	mov	r5,r20
1000a0d8:	b009883a 	mov	r4,r22
1000a0dc:	182ad43a 	srli	r21,r3,16
1000a0e0:	000aa380 	call	1000aa38 <__mulsi3>
1000a0e4:	a00b883a 	mov	r5,r20
1000a0e8:	8809883a 	mov	r4,r17
1000a0ec:	1039883a 	mov	fp,r2
1000a0f0:	000aa380 	call	1000aa38 <__mulsi3>
1000a0f4:	8809883a 	mov	r4,r17
1000a0f8:	a80b883a 	mov	r5,r21
1000a0fc:	1029883a 	mov	r20,r2
1000a100:	000aa380 	call	1000aa38 <__mulsi3>
1000a104:	a80b883a 	mov	r5,r21
1000a108:	b009883a 	mov	r4,r22
1000a10c:	1023883a 	mov	r17,r2
1000a110:	000aa380 	call	1000aa38 <__mulsi3>
1000a114:	e006d43a 	srli	r3,fp,16
1000a118:	1505883a 	add	r2,r2,r20
1000a11c:	1887883a 	add	r3,r3,r2
1000a120:	1d00022e 	bgeu	r3,r20,1000a12c <__udivdi3+0x468>
1000a124:	00800074 	movhi	r2,1
1000a128:	88a3883a 	add	r17,r17,r2
1000a12c:	1804d43a 	srli	r2,r3,16
1000a130:	1463883a 	add	r17,r2,r17
1000a134:	84404436 	bltu	r16,r17,1000a248 <__udivdi3+0x584>
1000a138:	84403e26 	beq	r16,r17,1000a234 <__udivdi3+0x570>
1000a13c:	9005883a 	mov	r2,r18
1000a140:	0007883a 	mov	r3,zero
1000a144:	003f9106 	br	10009f8c <__alt_data_end+0xf8009f8c>
1000a148:	88e2983a 	sll	r17,r17,r3
1000a14c:	80aed83a 	srl	r23,r16,r2
1000a150:	80e0983a 	sll	r16,r16,r3
1000a154:	882ad43a 	srli	r21,r17,16
1000a158:	9884d83a 	srl	r2,r19,r2
1000a15c:	b809883a 	mov	r4,r23
1000a160:	a80b883a 	mov	r5,r21
1000a164:	98e4983a 	sll	r18,r19,r3
1000a168:	142cb03a 	or	r22,r2,r16
1000a16c:	000a9e00 	call	1000a9e0 <__umodsi3>
1000a170:	b809883a 	mov	r4,r23
1000a174:	a80b883a 	mov	r5,r21
1000a178:	1027883a 	mov	r19,r2
1000a17c:	8d3fffcc 	andi	r20,r17,65535
1000a180:	000a97c0 	call	1000a97c <__udivsi3>
1000a184:	a009883a 	mov	r4,r20
1000a188:	100b883a 	mov	r5,r2
1000a18c:	102f883a 	mov	r23,r2
1000a190:	000aa380 	call	1000aa38 <__mulsi3>
1000a194:	9826943a 	slli	r19,r19,16
1000a198:	b008d43a 	srli	r4,r22,16
1000a19c:	24c8b03a 	or	r4,r4,r19
1000a1a0:	2080062e 	bgeu	r4,r2,1000a1bc <__udivdi3+0x4f8>
1000a1a4:	2449883a 	add	r4,r4,r17
1000a1a8:	b8ffffc4 	addi	r3,r23,-1
1000a1ac:	24403c36 	bltu	r4,r17,1000a2a0 <__udivdi3+0x5dc>
1000a1b0:	20803b2e 	bgeu	r4,r2,1000a2a0 <__udivdi3+0x5dc>
1000a1b4:	bdffff84 	addi	r23,r23,-2
1000a1b8:	2449883a 	add	r4,r4,r17
1000a1bc:	20a1c83a 	sub	r16,r4,r2
1000a1c0:	a80b883a 	mov	r5,r21
1000a1c4:	8009883a 	mov	r4,r16
1000a1c8:	000a9e00 	call	1000a9e0 <__umodsi3>
1000a1cc:	a80b883a 	mov	r5,r21
1000a1d0:	8009883a 	mov	r4,r16
1000a1d4:	1027883a 	mov	r19,r2
1000a1d8:	000a97c0 	call	1000a97c <__udivsi3>
1000a1dc:	a009883a 	mov	r4,r20
1000a1e0:	100b883a 	mov	r5,r2
1000a1e4:	9826943a 	slli	r19,r19,16
1000a1e8:	1039883a 	mov	fp,r2
1000a1ec:	000aa380 	call	1000aa38 <__mulsi3>
1000a1f0:	b13fffcc 	andi	r4,r22,65535
1000a1f4:	24c8b03a 	or	r4,r4,r19
1000a1f8:	2080062e 	bgeu	r4,r2,1000a214 <__udivdi3+0x550>
1000a1fc:	2449883a 	add	r4,r4,r17
1000a200:	e0ffffc4 	addi	r3,fp,-1
1000a204:	24402436 	bltu	r4,r17,1000a298 <__udivdi3+0x5d4>
1000a208:	2080232e 	bgeu	r4,r2,1000a298 <__udivdi3+0x5d4>
1000a20c:	e73fff84 	addi	fp,fp,-2
1000a210:	2449883a 	add	r4,r4,r17
1000a214:	b82e943a 	slli	r23,r23,16
1000a218:	20a1c83a 	sub	r16,r4,r2
1000a21c:	bf06b03a 	or	r3,r23,fp
1000a220:	003f2806 	br	10009ec4 <__alt_data_end+0xf8009ec4>
1000a224:	2021883a 	mov	r16,r4
1000a228:	003f5306 	br	10009f78 <__alt_data_end+0xf8009f78>
1000a22c:	1821883a 	mov	r16,r3
1000a230:	003ef406 	br	10009e04 <__alt_data_end+0xf8009e04>
1000a234:	1806943a 	slli	r3,r3,16
1000a238:	9de6983a 	sll	r19,r19,r23
1000a23c:	e73fffcc 	andi	fp,fp,65535
1000a240:	1f07883a 	add	r3,r3,fp
1000a244:	98ffbd2e 	bgeu	r19,r3,1000a13c <__alt_data_end+0xf800a13c>
1000a248:	90bfffc4 	addi	r2,r18,-1
1000a24c:	0007883a 	mov	r3,zero
1000a250:	003f4e06 	br	10009f8c <__alt_data_end+0xf8009f8c>
1000a254:	00800604 	movi	r2,24
1000a258:	003ef506 	br	10009e30 <__alt_data_end+0xf8009e30>
1000a25c:	00800604 	movi	r2,24
1000a260:	003f0b06 	br	10009e90 <__alt_data_end+0xf8009e90>
1000a264:	00800604 	movi	r2,24
1000a268:	003ead06 	br	10009d20 <__alt_data_end+0xf8009d20>
1000a26c:	0007883a 	mov	r3,zero
1000a270:	00800044 	movi	r2,1
1000a274:	003f4506 	br	10009f8c <__alt_data_end+0xf8009f8c>
1000a278:	80bf8e2e 	bgeu	r16,r2,1000a0b4 <__alt_data_end+0xf800a0b4>
1000a27c:	8c7fff84 	addi	r17,r17,-2
1000a280:	8721883a 	add	r16,r16,fp
1000a284:	003f8c06 	br	1000a0b8 <__alt_data_end+0xf800a0b8>
1000a288:	18bf762e 	bgeu	r3,r2,1000a064 <__alt_data_end+0xf800a064>
1000a28c:	ad7fff84 	addi	r21,r21,-2
1000a290:	1f07883a 	add	r3,r3,fp
1000a294:	003f7406 	br	1000a068 <__alt_data_end+0xf800a068>
1000a298:	1839883a 	mov	fp,r3
1000a29c:	003fdd06 	br	1000a214 <__alt_data_end+0xf800a214>
1000a2a0:	182f883a 	mov	r23,r3
1000a2a4:	003fc506 	br	1000a1bc <__alt_data_end+0xf800a1bc>
1000a2a8:	b5bfff84 	addi	r22,r22,-2
1000a2ac:	3c4f883a 	add	r7,r7,r17
1000a2b0:	003f1a06 	br	10009f1c <__alt_data_end+0xf8009f1c>
1000a2b4:	b5bfff84 	addi	r22,r22,-2
1000a2b8:	1c47883a 	add	r3,r3,r17
1000a2bc:	003ebc06 	br	10009db0 <__alt_data_end+0xf8009db0>

1000a2c0 <__umoddi3>:
1000a2c0:	defff304 	addi	sp,sp,-52
1000a2c4:	df000b15 	stw	fp,44(sp)
1000a2c8:	dc400415 	stw	r17,16(sp)
1000a2cc:	dc000315 	stw	r16,12(sp)
1000a2d0:	dfc00c15 	stw	ra,48(sp)
1000a2d4:	ddc00a15 	stw	r23,40(sp)
1000a2d8:	dd800915 	stw	r22,36(sp)
1000a2dc:	dd400815 	stw	r21,32(sp)
1000a2e0:	dd000715 	stw	r20,28(sp)
1000a2e4:	dcc00615 	stw	r19,24(sp)
1000a2e8:	dc800515 	stw	r18,20(sp)
1000a2ec:	2021883a 	mov	r16,r4
1000a2f0:	2823883a 	mov	r17,r5
1000a2f4:	2839883a 	mov	fp,r5
1000a2f8:	3800401e 	bne	r7,zero,1000a3fc <__umoddi3+0x13c>
1000a2fc:	3027883a 	mov	r19,r6
1000a300:	2029883a 	mov	r20,r4
1000a304:	2980552e 	bgeu	r5,r6,1000a45c <__umoddi3+0x19c>
1000a308:	00bfffd4 	movui	r2,65535
1000a30c:	1180a236 	bltu	r2,r6,1000a598 <__umoddi3+0x2d8>
1000a310:	01003fc4 	movi	r4,255
1000a314:	2189803a 	cmpltu	r4,r4,r6
1000a318:	200890fa 	slli	r4,r4,3
1000a31c:	3104d83a 	srl	r2,r6,r4
1000a320:	00c40074 	movhi	r3,4097
1000a324:	18fedd04 	addi	r3,r3,-1164
1000a328:	1885883a 	add	r2,r3,r2
1000a32c:	10c00003 	ldbu	r3,0(r2)
1000a330:	00800804 	movi	r2,32
1000a334:	1909883a 	add	r4,r3,r4
1000a338:	1125c83a 	sub	r18,r2,r4
1000a33c:	90000526 	beq	r18,zero,1000a354 <__umoddi3+0x94>
1000a340:	8ca2983a 	sll	r17,r17,r18
1000a344:	8108d83a 	srl	r4,r16,r4
1000a348:	34a6983a 	sll	r19,r6,r18
1000a34c:	84a8983a 	sll	r20,r16,r18
1000a350:	2478b03a 	or	fp,r4,r17
1000a354:	982cd43a 	srli	r22,r19,16
1000a358:	e009883a 	mov	r4,fp
1000a35c:	9dffffcc 	andi	r23,r19,65535
1000a360:	b00b883a 	mov	r5,r22
1000a364:	000a9e00 	call	1000a9e0 <__umodsi3>
1000a368:	b00b883a 	mov	r5,r22
1000a36c:	e009883a 	mov	r4,fp
1000a370:	102b883a 	mov	r21,r2
1000a374:	000a97c0 	call	1000a97c <__udivsi3>
1000a378:	100b883a 	mov	r5,r2
1000a37c:	b809883a 	mov	r4,r23
1000a380:	000aa380 	call	1000aa38 <__mulsi3>
1000a384:	a82a943a 	slli	r21,r21,16
1000a388:	a006d43a 	srli	r3,r20,16
1000a38c:	1d46b03a 	or	r3,r3,r21
1000a390:	1880032e 	bgeu	r3,r2,1000a3a0 <__umoddi3+0xe0>
1000a394:	1cc7883a 	add	r3,r3,r19
1000a398:	1cc00136 	bltu	r3,r19,1000a3a0 <__umoddi3+0xe0>
1000a39c:	18813136 	bltu	r3,r2,1000a864 <__umoddi3+0x5a4>
1000a3a0:	18a1c83a 	sub	r16,r3,r2
1000a3a4:	b00b883a 	mov	r5,r22
1000a3a8:	8009883a 	mov	r4,r16
1000a3ac:	000a9e00 	call	1000a9e0 <__umodsi3>
1000a3b0:	b00b883a 	mov	r5,r22
1000a3b4:	8009883a 	mov	r4,r16
1000a3b8:	1023883a 	mov	r17,r2
1000a3bc:	000a97c0 	call	1000a97c <__udivsi3>
1000a3c0:	100b883a 	mov	r5,r2
1000a3c4:	b809883a 	mov	r4,r23
1000a3c8:	8822943a 	slli	r17,r17,16
1000a3cc:	000aa380 	call	1000aa38 <__mulsi3>
1000a3d0:	a0ffffcc 	andi	r3,r20,65535
1000a3d4:	1c46b03a 	or	r3,r3,r17
1000a3d8:	1880042e 	bgeu	r3,r2,1000a3ec <__umoddi3+0x12c>
1000a3dc:	1cc7883a 	add	r3,r3,r19
1000a3e0:	1cc00236 	bltu	r3,r19,1000a3ec <__umoddi3+0x12c>
1000a3e4:	1880012e 	bgeu	r3,r2,1000a3ec <__umoddi3+0x12c>
1000a3e8:	1cc7883a 	add	r3,r3,r19
1000a3ec:	1885c83a 	sub	r2,r3,r2
1000a3f0:	1484d83a 	srl	r2,r2,r18
1000a3f4:	0007883a 	mov	r3,zero
1000a3f8:	00005306 	br	1000a548 <__umoddi3+0x288>
1000a3fc:	29c05036 	bltu	r5,r7,1000a540 <__umoddi3+0x280>
1000a400:	00bfffd4 	movui	r2,65535
1000a404:	11c05c2e 	bgeu	r2,r7,1000a578 <__umoddi3+0x2b8>
1000a408:	00804034 	movhi	r2,256
1000a40c:	10bfffc4 	addi	r2,r2,-1
1000a410:	11c10636 	bltu	r2,r7,1000a82c <__umoddi3+0x56c>
1000a414:	01000404 	movi	r4,16
1000a418:	3904d83a 	srl	r2,r7,r4
1000a41c:	00c40074 	movhi	r3,4097
1000a420:	18fedd04 	addi	r3,r3,-1164
1000a424:	1885883a 	add	r2,r3,r2
1000a428:	14c00003 	ldbu	r19,0(r2)
1000a42c:	00c00804 	movi	r3,32
1000a430:	9927883a 	add	r19,r19,r4
1000a434:	1ce9c83a 	sub	r20,r3,r19
1000a438:	a0005c1e 	bne	r20,zero,1000a5ac <__umoddi3+0x2ec>
1000a43c:	3c400136 	bltu	r7,r17,1000a444 <__umoddi3+0x184>
1000a440:	81810a36 	bltu	r16,r6,1000a86c <__umoddi3+0x5ac>
1000a444:	8185c83a 	sub	r2,r16,r6
1000a448:	89e3c83a 	sub	r17,r17,r7
1000a44c:	8089803a 	cmpltu	r4,r16,r2
1000a450:	8939c83a 	sub	fp,r17,r4
1000a454:	e007883a 	mov	r3,fp
1000a458:	00003b06 	br	1000a548 <__umoddi3+0x288>
1000a45c:	3000041e 	bne	r6,zero,1000a470 <__umoddi3+0x1b0>
1000a460:	000b883a 	mov	r5,zero
1000a464:	01000044 	movi	r4,1
1000a468:	000a97c0 	call	1000a97c <__udivsi3>
1000a46c:	1027883a 	mov	r19,r2
1000a470:	00bfffd4 	movui	r2,65535
1000a474:	14c0442e 	bgeu	r2,r19,1000a588 <__umoddi3+0x2c8>
1000a478:	00804034 	movhi	r2,256
1000a47c:	10bfffc4 	addi	r2,r2,-1
1000a480:	14c0ec36 	bltu	r2,r19,1000a834 <__umoddi3+0x574>
1000a484:	00800404 	movi	r2,16
1000a488:	9886d83a 	srl	r3,r19,r2
1000a48c:	01040074 	movhi	r4,4097
1000a490:	213edd04 	addi	r4,r4,-1164
1000a494:	20c7883a 	add	r3,r4,r3
1000a498:	18c00003 	ldbu	r3,0(r3)
1000a49c:	1887883a 	add	r3,r3,r2
1000a4a0:	00800804 	movi	r2,32
1000a4a4:	10e5c83a 	sub	r18,r2,r3
1000a4a8:	9000ab1e 	bne	r18,zero,1000a758 <__umoddi3+0x498>
1000a4ac:	982cd43a 	srli	r22,r19,16
1000a4b0:	8ce3c83a 	sub	r17,r17,r19
1000a4b4:	9dffffcc 	andi	r23,r19,65535
1000a4b8:	b00b883a 	mov	r5,r22
1000a4bc:	8809883a 	mov	r4,r17
1000a4c0:	000a9e00 	call	1000a9e0 <__umodsi3>
1000a4c4:	b00b883a 	mov	r5,r22
1000a4c8:	8809883a 	mov	r4,r17
1000a4cc:	102b883a 	mov	r21,r2
1000a4d0:	000a97c0 	call	1000a97c <__udivsi3>
1000a4d4:	b80b883a 	mov	r5,r23
1000a4d8:	1009883a 	mov	r4,r2
1000a4dc:	000aa380 	call	1000aa38 <__mulsi3>
1000a4e0:	a82a943a 	slli	r21,r21,16
1000a4e4:	a006d43a 	srli	r3,r20,16
1000a4e8:	1d46b03a 	or	r3,r3,r21
1000a4ec:	1880042e 	bgeu	r3,r2,1000a500 <__umoddi3+0x240>
1000a4f0:	1cc7883a 	add	r3,r3,r19
1000a4f4:	1cc00236 	bltu	r3,r19,1000a500 <__umoddi3+0x240>
1000a4f8:	1880012e 	bgeu	r3,r2,1000a500 <__umoddi3+0x240>
1000a4fc:	1cc7883a 	add	r3,r3,r19
1000a500:	18a1c83a 	sub	r16,r3,r2
1000a504:	b00b883a 	mov	r5,r22
1000a508:	8009883a 	mov	r4,r16
1000a50c:	000a9e00 	call	1000a9e0 <__umodsi3>
1000a510:	1023883a 	mov	r17,r2
1000a514:	b00b883a 	mov	r5,r22
1000a518:	8009883a 	mov	r4,r16
1000a51c:	000a97c0 	call	1000a97c <__udivsi3>
1000a520:	8822943a 	slli	r17,r17,16
1000a524:	b80b883a 	mov	r5,r23
1000a528:	1009883a 	mov	r4,r2
1000a52c:	000aa380 	call	1000aa38 <__mulsi3>
1000a530:	a53fffcc 	andi	r20,r20,65535
1000a534:	a446b03a 	or	r3,r20,r17
1000a538:	18bfac2e 	bgeu	r3,r2,1000a3ec <__alt_data_end+0xf800a3ec>
1000a53c:	003fa706 	br	1000a3dc <__alt_data_end+0xf800a3dc>
1000a540:	2005883a 	mov	r2,r4
1000a544:	2807883a 	mov	r3,r5
1000a548:	dfc00c17 	ldw	ra,48(sp)
1000a54c:	df000b17 	ldw	fp,44(sp)
1000a550:	ddc00a17 	ldw	r23,40(sp)
1000a554:	dd800917 	ldw	r22,36(sp)
1000a558:	dd400817 	ldw	r21,32(sp)
1000a55c:	dd000717 	ldw	r20,28(sp)
1000a560:	dcc00617 	ldw	r19,24(sp)
1000a564:	dc800517 	ldw	r18,20(sp)
1000a568:	dc400417 	ldw	r17,16(sp)
1000a56c:	dc000317 	ldw	r16,12(sp)
1000a570:	dec00d04 	addi	sp,sp,52
1000a574:	f800283a 	ret
1000a578:	04c03fc4 	movi	r19,255
1000a57c:	99c9803a 	cmpltu	r4,r19,r7
1000a580:	200890fa 	slli	r4,r4,3
1000a584:	003fa406 	br	1000a418 <__alt_data_end+0xf800a418>
1000a588:	00803fc4 	movi	r2,255
1000a58c:	14c5803a 	cmpltu	r2,r2,r19
1000a590:	100490fa 	slli	r2,r2,3
1000a594:	003fbc06 	br	1000a488 <__alt_data_end+0xf800a488>
1000a598:	00804034 	movhi	r2,256
1000a59c:	10bfffc4 	addi	r2,r2,-1
1000a5a0:	1180a636 	bltu	r2,r6,1000a83c <__umoddi3+0x57c>
1000a5a4:	01000404 	movi	r4,16
1000a5a8:	003f5c06 	br	1000a31c <__alt_data_end+0xf800a31c>
1000a5ac:	3d0e983a 	sll	r7,r7,r20
1000a5b0:	34ead83a 	srl	r21,r6,r19
1000a5b4:	8cc6d83a 	srl	r3,r17,r19
1000a5b8:	8d10983a 	sll	r8,r17,r20
1000a5bc:	3d6ab03a 	or	r21,r7,r21
1000a5c0:	a82cd43a 	srli	r22,r21,16
1000a5c4:	84e2d83a 	srl	r17,r16,r19
1000a5c8:	1809883a 	mov	r4,r3
1000a5cc:	b00b883a 	mov	r5,r22
1000a5d0:	8a22b03a 	or	r17,r17,r8
1000a5d4:	3524983a 	sll	r18,r6,r20
1000a5d8:	dc400015 	stw	r17,0(sp)
1000a5dc:	d8c00115 	stw	r3,4(sp)
1000a5e0:	000a9e00 	call	1000a9e0 <__umodsi3>
1000a5e4:	d8c00117 	ldw	r3,4(sp)
1000a5e8:	b00b883a 	mov	r5,r22
1000a5ec:	1039883a 	mov	fp,r2
1000a5f0:	1809883a 	mov	r4,r3
1000a5f4:	000a97c0 	call	1000a97c <__udivsi3>
1000a5f8:	adffffcc 	andi	r23,r21,65535
1000a5fc:	100b883a 	mov	r5,r2
1000a600:	b809883a 	mov	r4,r23
1000a604:	1023883a 	mov	r17,r2
1000a608:	000aa380 	call	1000aa38 <__mulsi3>
1000a60c:	d9400017 	ldw	r5,0(sp)
1000a610:	e008943a 	slli	r4,fp,16
1000a614:	8520983a 	sll	r16,r16,r20
1000a618:	2806d43a 	srli	r3,r5,16
1000a61c:	1906b03a 	or	r3,r3,r4
1000a620:	1880042e 	bgeu	r3,r2,1000a634 <__umoddi3+0x374>
1000a624:	1d47883a 	add	r3,r3,r21
1000a628:	893fffc4 	addi	r4,r17,-1
1000a62c:	1d40892e 	bgeu	r3,r21,1000a854 <__umoddi3+0x594>
1000a630:	2023883a 	mov	r17,r4
1000a634:	18b9c83a 	sub	fp,r3,r2
1000a638:	b00b883a 	mov	r5,r22
1000a63c:	e009883a 	mov	r4,fp
1000a640:	000a9e00 	call	1000a9e0 <__umodsi3>
1000a644:	b00b883a 	mov	r5,r22
1000a648:	e009883a 	mov	r4,fp
1000a64c:	d8800215 	stw	r2,8(sp)
1000a650:	000a97c0 	call	1000a97c <__udivsi3>
1000a654:	100b883a 	mov	r5,r2
1000a658:	b809883a 	mov	r4,r23
1000a65c:	102d883a 	mov	r22,r2
1000a660:	000aa380 	call	1000aa38 <__mulsi3>
1000a664:	d9800217 	ldw	r6,8(sp)
1000a668:	d8c00017 	ldw	r3,0(sp)
1000a66c:	300c943a 	slli	r6,r6,16
1000a670:	1a3fffcc 	andi	r8,r3,65535
1000a674:	4190b03a 	or	r8,r8,r6
1000a678:	4080042e 	bgeu	r8,r2,1000a68c <__umoddi3+0x3cc>
1000a67c:	4551883a 	add	r8,r8,r21
1000a680:	b0ffffc4 	addi	r3,r22,-1
1000a684:	45406f2e 	bgeu	r8,r21,1000a844 <__umoddi3+0x584>
1000a688:	182d883a 	mov	r22,r3
1000a68c:	880e943a 	slli	r7,r17,16
1000a690:	9006d43a 	srli	r3,r18,16
1000a694:	91bfffcc 	andi	r6,r18,65535
1000a698:	3dacb03a 	or	r22,r7,r22
1000a69c:	b02ed43a 	srli	r23,r22,16
1000a6a0:	b5bfffcc 	andi	r22,r22,65535
1000a6a4:	300b883a 	mov	r5,r6
1000a6a8:	b009883a 	mov	r4,r22
1000a6ac:	40a3c83a 	sub	r17,r8,r2
1000a6b0:	d8c00115 	stw	r3,4(sp)
1000a6b4:	d9800215 	stw	r6,8(sp)
1000a6b8:	000aa380 	call	1000aa38 <__mulsi3>
1000a6bc:	d9800217 	ldw	r6,8(sp)
1000a6c0:	b809883a 	mov	r4,r23
1000a6c4:	1039883a 	mov	fp,r2
1000a6c8:	300b883a 	mov	r5,r6
1000a6cc:	000aa380 	call	1000aa38 <__mulsi3>
1000a6d0:	d8c00117 	ldw	r3,4(sp)
1000a6d4:	b809883a 	mov	r4,r23
1000a6d8:	d8800215 	stw	r2,8(sp)
1000a6dc:	180b883a 	mov	r5,r3
1000a6e0:	000aa380 	call	1000aa38 <__mulsi3>
1000a6e4:	d8c00117 	ldw	r3,4(sp)
1000a6e8:	b009883a 	mov	r4,r22
1000a6ec:	102f883a 	mov	r23,r2
1000a6f0:	180b883a 	mov	r5,r3
1000a6f4:	000aa380 	call	1000aa38 <__mulsi3>
1000a6f8:	d9800217 	ldw	r6,8(sp)
1000a6fc:	e006d43a 	srli	r3,fp,16
1000a700:	1185883a 	add	r2,r2,r6
1000a704:	1885883a 	add	r2,r3,r2
1000a708:	1180022e 	bgeu	r2,r6,1000a714 <__umoddi3+0x454>
1000a70c:	00c00074 	movhi	r3,1
1000a710:	b8ef883a 	add	r23,r23,r3
1000a714:	1006d43a 	srli	r3,r2,16
1000a718:	1004943a 	slli	r2,r2,16
1000a71c:	e73fffcc 	andi	fp,fp,65535
1000a720:	1dc7883a 	add	r3,r3,r23
1000a724:	1739883a 	add	fp,r2,fp
1000a728:	88c03a36 	bltu	r17,r3,1000a814 <__umoddi3+0x554>
1000a72c:	88c05126 	beq	r17,r3,1000a874 <__umoddi3+0x5b4>
1000a730:	88c9c83a 	sub	r4,r17,r3
1000a734:	e00f883a 	mov	r7,fp
1000a738:	81cfc83a 	sub	r7,r16,r7
1000a73c:	81c7803a 	cmpltu	r3,r16,r7
1000a740:	20c7c83a 	sub	r3,r4,r3
1000a744:	1cc4983a 	sll	r2,r3,r19
1000a748:	3d0ed83a 	srl	r7,r7,r20
1000a74c:	1d06d83a 	srl	r3,r3,r20
1000a750:	11c4b03a 	or	r2,r2,r7
1000a754:	003f7c06 	br	1000a548 <__alt_data_end+0xf800a548>
1000a758:	9ca6983a 	sll	r19,r19,r18
1000a75c:	88f8d83a 	srl	fp,r17,r3
1000a760:	80c4d83a 	srl	r2,r16,r3
1000a764:	982cd43a 	srli	r22,r19,16
1000a768:	8ca2983a 	sll	r17,r17,r18
1000a76c:	e009883a 	mov	r4,fp
1000a770:	b00b883a 	mov	r5,r22
1000a774:	146ab03a 	or	r21,r2,r17
1000a778:	000a9e00 	call	1000a9e0 <__umodsi3>
1000a77c:	b00b883a 	mov	r5,r22
1000a780:	e009883a 	mov	r4,fp
1000a784:	1029883a 	mov	r20,r2
1000a788:	9dffffcc 	andi	r23,r19,65535
1000a78c:	000a97c0 	call	1000a97c <__udivsi3>
1000a790:	b809883a 	mov	r4,r23
1000a794:	100b883a 	mov	r5,r2
1000a798:	000aa380 	call	1000aa38 <__mulsi3>
1000a79c:	a008943a 	slli	r4,r20,16
1000a7a0:	a806d43a 	srli	r3,r21,16
1000a7a4:	84a8983a 	sll	r20,r16,r18
1000a7a8:	1906b03a 	or	r3,r3,r4
1000a7ac:	1880042e 	bgeu	r3,r2,1000a7c0 <__umoddi3+0x500>
1000a7b0:	1cc7883a 	add	r3,r3,r19
1000a7b4:	1cc00236 	bltu	r3,r19,1000a7c0 <__umoddi3+0x500>
1000a7b8:	1880012e 	bgeu	r3,r2,1000a7c0 <__umoddi3+0x500>
1000a7bc:	1cc7883a 	add	r3,r3,r19
1000a7c0:	18a3c83a 	sub	r17,r3,r2
1000a7c4:	b00b883a 	mov	r5,r22
1000a7c8:	8809883a 	mov	r4,r17
1000a7cc:	000a9e00 	call	1000a9e0 <__umodsi3>
1000a7d0:	b00b883a 	mov	r5,r22
1000a7d4:	8809883a 	mov	r4,r17
1000a7d8:	1021883a 	mov	r16,r2
1000a7dc:	000a97c0 	call	1000a97c <__udivsi3>
1000a7e0:	100b883a 	mov	r5,r2
1000a7e4:	b809883a 	mov	r4,r23
1000a7e8:	8020943a 	slli	r16,r16,16
1000a7ec:	000aa380 	call	1000aa38 <__mulsi3>
1000a7f0:	a8ffffcc 	andi	r3,r21,65535
1000a7f4:	1c06b03a 	or	r3,r3,r16
1000a7f8:	1880042e 	bgeu	r3,r2,1000a80c <__umoddi3+0x54c>
1000a7fc:	1cc7883a 	add	r3,r3,r19
1000a800:	1cc00236 	bltu	r3,r19,1000a80c <__umoddi3+0x54c>
1000a804:	1880012e 	bgeu	r3,r2,1000a80c <__umoddi3+0x54c>
1000a808:	1cc7883a 	add	r3,r3,r19
1000a80c:	18a3c83a 	sub	r17,r3,r2
1000a810:	003f2906 	br	1000a4b8 <__alt_data_end+0xf800a4b8>
1000a814:	e48fc83a 	sub	r7,fp,r18
1000a818:	1d49c83a 	sub	r4,r3,r21
1000a81c:	e1f9803a 	cmpltu	fp,fp,r7
1000a820:	2739c83a 	sub	fp,r4,fp
1000a824:	8f09c83a 	sub	r4,r17,fp
1000a828:	003fc306 	br	1000a738 <__alt_data_end+0xf800a738>
1000a82c:	01000604 	movi	r4,24
1000a830:	003ef906 	br	1000a418 <__alt_data_end+0xf800a418>
1000a834:	00800604 	movi	r2,24
1000a838:	003f1306 	br	1000a488 <__alt_data_end+0xf800a488>
1000a83c:	01000604 	movi	r4,24
1000a840:	003eb606 	br	1000a31c <__alt_data_end+0xf800a31c>
1000a844:	40bf902e 	bgeu	r8,r2,1000a688 <__alt_data_end+0xf800a688>
1000a848:	b5bfff84 	addi	r22,r22,-2
1000a84c:	4551883a 	add	r8,r8,r21
1000a850:	003f8e06 	br	1000a68c <__alt_data_end+0xf800a68c>
1000a854:	18bf762e 	bgeu	r3,r2,1000a630 <__alt_data_end+0xf800a630>
1000a858:	8c7fff84 	addi	r17,r17,-2
1000a85c:	1d47883a 	add	r3,r3,r21
1000a860:	003f7406 	br	1000a634 <__alt_data_end+0xf800a634>
1000a864:	1cc7883a 	add	r3,r3,r19
1000a868:	003ecd06 	br	1000a3a0 <__alt_data_end+0xf800a3a0>
1000a86c:	8005883a 	mov	r2,r16
1000a870:	003ef806 	br	1000a454 <__alt_data_end+0xf800a454>
1000a874:	873fe736 	bltu	r16,fp,1000a814 <__alt_data_end+0xf800a814>
1000a878:	e00f883a 	mov	r7,fp
1000a87c:	0009883a 	mov	r4,zero
1000a880:	003fad06 	br	1000a738 <__alt_data_end+0xf800a738>

1000a884 <__divsi3>:
1000a884:	20001b16 	blt	r4,zero,1000a8f4 <__divsi3+0x70>
1000a888:	000f883a 	mov	r7,zero
1000a88c:	28001616 	blt	r5,zero,1000a8e8 <__divsi3+0x64>
1000a890:	200d883a 	mov	r6,r4
1000a894:	29001a2e 	bgeu	r5,r4,1000a900 <__divsi3+0x7c>
1000a898:	00800804 	movi	r2,32
1000a89c:	00c00044 	movi	r3,1
1000a8a0:	00000106 	br	1000a8a8 <__divsi3+0x24>
1000a8a4:	10000d26 	beq	r2,zero,1000a8dc <__divsi3+0x58>
1000a8a8:	294b883a 	add	r5,r5,r5
1000a8ac:	10bfffc4 	addi	r2,r2,-1
1000a8b0:	18c7883a 	add	r3,r3,r3
1000a8b4:	293ffb36 	bltu	r5,r4,1000a8a4 <__alt_data_end+0xf800a8a4>
1000a8b8:	0005883a 	mov	r2,zero
1000a8bc:	18000726 	beq	r3,zero,1000a8dc <__divsi3+0x58>
1000a8c0:	0005883a 	mov	r2,zero
1000a8c4:	31400236 	bltu	r6,r5,1000a8d0 <__divsi3+0x4c>
1000a8c8:	314dc83a 	sub	r6,r6,r5
1000a8cc:	10c4b03a 	or	r2,r2,r3
1000a8d0:	1806d07a 	srli	r3,r3,1
1000a8d4:	280ad07a 	srli	r5,r5,1
1000a8d8:	183ffa1e 	bne	r3,zero,1000a8c4 <__alt_data_end+0xf800a8c4>
1000a8dc:	38000126 	beq	r7,zero,1000a8e4 <__divsi3+0x60>
1000a8e0:	0085c83a 	sub	r2,zero,r2
1000a8e4:	f800283a 	ret
1000a8e8:	014bc83a 	sub	r5,zero,r5
1000a8ec:	39c0005c 	xori	r7,r7,1
1000a8f0:	003fe706 	br	1000a890 <__alt_data_end+0xf800a890>
1000a8f4:	0109c83a 	sub	r4,zero,r4
1000a8f8:	01c00044 	movi	r7,1
1000a8fc:	003fe306 	br	1000a88c <__alt_data_end+0xf800a88c>
1000a900:	00c00044 	movi	r3,1
1000a904:	003fee06 	br	1000a8c0 <__alt_data_end+0xf800a8c0>

1000a908 <__modsi3>:
1000a908:	20001716 	blt	r4,zero,1000a968 <__modsi3+0x60>
1000a90c:	000f883a 	mov	r7,zero
1000a910:	2005883a 	mov	r2,r4
1000a914:	28001216 	blt	r5,zero,1000a960 <__modsi3+0x58>
1000a918:	2900162e 	bgeu	r5,r4,1000a974 <__modsi3+0x6c>
1000a91c:	01800804 	movi	r6,32
1000a920:	00c00044 	movi	r3,1
1000a924:	00000106 	br	1000a92c <__modsi3+0x24>
1000a928:	30000a26 	beq	r6,zero,1000a954 <__modsi3+0x4c>
1000a92c:	294b883a 	add	r5,r5,r5
1000a930:	31bfffc4 	addi	r6,r6,-1
1000a934:	18c7883a 	add	r3,r3,r3
1000a938:	293ffb36 	bltu	r5,r4,1000a928 <__alt_data_end+0xf800a928>
1000a93c:	18000526 	beq	r3,zero,1000a954 <__modsi3+0x4c>
1000a940:	1806d07a 	srli	r3,r3,1
1000a944:	11400136 	bltu	r2,r5,1000a94c <__modsi3+0x44>
1000a948:	1145c83a 	sub	r2,r2,r5
1000a94c:	280ad07a 	srli	r5,r5,1
1000a950:	183ffb1e 	bne	r3,zero,1000a940 <__alt_data_end+0xf800a940>
1000a954:	38000126 	beq	r7,zero,1000a95c <__modsi3+0x54>
1000a958:	0085c83a 	sub	r2,zero,r2
1000a95c:	f800283a 	ret
1000a960:	014bc83a 	sub	r5,zero,r5
1000a964:	003fec06 	br	1000a918 <__alt_data_end+0xf800a918>
1000a968:	0109c83a 	sub	r4,zero,r4
1000a96c:	01c00044 	movi	r7,1
1000a970:	003fe706 	br	1000a910 <__alt_data_end+0xf800a910>
1000a974:	00c00044 	movi	r3,1
1000a978:	003ff106 	br	1000a940 <__alt_data_end+0xf800a940>

1000a97c <__udivsi3>:
1000a97c:	200d883a 	mov	r6,r4
1000a980:	2900152e 	bgeu	r5,r4,1000a9d8 <__udivsi3+0x5c>
1000a984:	28001416 	blt	r5,zero,1000a9d8 <__udivsi3+0x5c>
1000a988:	00800804 	movi	r2,32
1000a98c:	00c00044 	movi	r3,1
1000a990:	00000206 	br	1000a99c <__udivsi3+0x20>
1000a994:	10000e26 	beq	r2,zero,1000a9d0 <__udivsi3+0x54>
1000a998:	28000516 	blt	r5,zero,1000a9b0 <__udivsi3+0x34>
1000a99c:	294b883a 	add	r5,r5,r5
1000a9a0:	10bfffc4 	addi	r2,r2,-1
1000a9a4:	18c7883a 	add	r3,r3,r3
1000a9a8:	293ffa36 	bltu	r5,r4,1000a994 <__alt_data_end+0xf800a994>
1000a9ac:	18000826 	beq	r3,zero,1000a9d0 <__udivsi3+0x54>
1000a9b0:	0005883a 	mov	r2,zero
1000a9b4:	31400236 	bltu	r6,r5,1000a9c0 <__udivsi3+0x44>
1000a9b8:	314dc83a 	sub	r6,r6,r5
1000a9bc:	10c4b03a 	or	r2,r2,r3
1000a9c0:	1806d07a 	srli	r3,r3,1
1000a9c4:	280ad07a 	srli	r5,r5,1
1000a9c8:	183ffa1e 	bne	r3,zero,1000a9b4 <__alt_data_end+0xf800a9b4>
1000a9cc:	f800283a 	ret
1000a9d0:	0005883a 	mov	r2,zero
1000a9d4:	f800283a 	ret
1000a9d8:	00c00044 	movi	r3,1
1000a9dc:	003ff406 	br	1000a9b0 <__alt_data_end+0xf800a9b0>

1000a9e0 <__umodsi3>:
1000a9e0:	2005883a 	mov	r2,r4
1000a9e4:	2900122e 	bgeu	r5,r4,1000aa30 <__umodsi3+0x50>
1000a9e8:	28001116 	blt	r5,zero,1000aa30 <__umodsi3+0x50>
1000a9ec:	01800804 	movi	r6,32
1000a9f0:	00c00044 	movi	r3,1
1000a9f4:	00000206 	br	1000aa00 <__umodsi3+0x20>
1000a9f8:	30000c26 	beq	r6,zero,1000aa2c <__umodsi3+0x4c>
1000a9fc:	28000516 	blt	r5,zero,1000aa14 <__umodsi3+0x34>
1000aa00:	294b883a 	add	r5,r5,r5
1000aa04:	31bfffc4 	addi	r6,r6,-1
1000aa08:	18c7883a 	add	r3,r3,r3
1000aa0c:	293ffa36 	bltu	r5,r4,1000a9f8 <__alt_data_end+0xf800a9f8>
1000aa10:	18000626 	beq	r3,zero,1000aa2c <__umodsi3+0x4c>
1000aa14:	1806d07a 	srli	r3,r3,1
1000aa18:	11400136 	bltu	r2,r5,1000aa20 <__umodsi3+0x40>
1000aa1c:	1145c83a 	sub	r2,r2,r5
1000aa20:	280ad07a 	srli	r5,r5,1
1000aa24:	183ffb1e 	bne	r3,zero,1000aa14 <__alt_data_end+0xf800aa14>
1000aa28:	f800283a 	ret
1000aa2c:	f800283a 	ret
1000aa30:	00c00044 	movi	r3,1
1000aa34:	003ff706 	br	1000aa14 <__alt_data_end+0xf800aa14>

1000aa38 <__mulsi3>:
1000aa38:	0005883a 	mov	r2,zero
1000aa3c:	20000726 	beq	r4,zero,1000aa5c <__mulsi3+0x24>
1000aa40:	20c0004c 	andi	r3,r4,1
1000aa44:	2008d07a 	srli	r4,r4,1
1000aa48:	18000126 	beq	r3,zero,1000aa50 <__mulsi3+0x18>
1000aa4c:	1145883a 	add	r2,r2,r5
1000aa50:	294b883a 	add	r5,r5,r5
1000aa54:	203ffa1e 	bne	r4,zero,1000aa40 <__alt_data_end+0xf800aa40>
1000aa58:	f800283a 	ret
1000aa5c:	f800283a 	ret

1000aa60 <__adddf3>:
1000aa60:	02c00434 	movhi	r11,16
1000aa64:	5affffc4 	addi	r11,r11,-1
1000aa68:	2806d7fa 	srli	r3,r5,31
1000aa6c:	2ad4703a 	and	r10,r5,r11
1000aa70:	3ad2703a 	and	r9,r7,r11
1000aa74:	3804d53a 	srli	r2,r7,20
1000aa78:	3018d77a 	srli	r12,r6,29
1000aa7c:	280ad53a 	srli	r5,r5,20
1000aa80:	501490fa 	slli	r10,r10,3
1000aa84:	2010d77a 	srli	r8,r4,29
1000aa88:	481290fa 	slli	r9,r9,3
1000aa8c:	380ed7fa 	srli	r7,r7,31
1000aa90:	defffb04 	addi	sp,sp,-20
1000aa94:	dc800215 	stw	r18,8(sp)
1000aa98:	dc400115 	stw	r17,4(sp)
1000aa9c:	dc000015 	stw	r16,0(sp)
1000aaa0:	dfc00415 	stw	ra,16(sp)
1000aaa4:	dcc00315 	stw	r19,12(sp)
1000aaa8:	1c803fcc 	andi	r18,r3,255
1000aaac:	2c01ffcc 	andi	r16,r5,2047
1000aab0:	5210b03a 	or	r8,r10,r8
1000aab4:	202290fa 	slli	r17,r4,3
1000aab8:	1081ffcc 	andi	r2,r2,2047
1000aabc:	4b12b03a 	or	r9,r9,r12
1000aac0:	300c90fa 	slli	r6,r6,3
1000aac4:	91c07526 	beq	r18,r7,1000ac9c <__adddf3+0x23c>
1000aac8:	8087c83a 	sub	r3,r16,r2
1000aacc:	00c0ab0e 	bge	zero,r3,1000ad7c <__adddf3+0x31c>
1000aad0:	10002a1e 	bne	r2,zero,1000ab7c <__adddf3+0x11c>
1000aad4:	4984b03a 	or	r2,r9,r6
1000aad8:	1000961e 	bne	r2,zero,1000ad34 <__adddf3+0x2d4>
1000aadc:	888001cc 	andi	r2,r17,7
1000aae0:	10000726 	beq	r2,zero,1000ab00 <__adddf3+0xa0>
1000aae4:	888003cc 	andi	r2,r17,15
1000aae8:	00c00104 	movi	r3,4
1000aaec:	10c00426 	beq	r2,r3,1000ab00 <__adddf3+0xa0>
1000aaf0:	88c7883a 	add	r3,r17,r3
1000aaf4:	1c63803a 	cmpltu	r17,r3,r17
1000aaf8:	4451883a 	add	r8,r8,r17
1000aafc:	1823883a 	mov	r17,r3
1000ab00:	4080202c 	andhi	r2,r8,128
1000ab04:	10005926 	beq	r2,zero,1000ac6c <__adddf3+0x20c>
1000ab08:	84000044 	addi	r16,r16,1
1000ab0c:	0081ffc4 	movi	r2,2047
1000ab10:	8080ba26 	beq	r16,r2,1000adfc <__adddf3+0x39c>
1000ab14:	00bfe034 	movhi	r2,65408
1000ab18:	10bfffc4 	addi	r2,r2,-1
1000ab1c:	4090703a 	and	r8,r8,r2
1000ab20:	4004977a 	slli	r2,r8,29
1000ab24:	4010927a 	slli	r8,r8,9
1000ab28:	8822d0fa 	srli	r17,r17,3
1000ab2c:	8401ffcc 	andi	r16,r16,2047
1000ab30:	4010d33a 	srli	r8,r8,12
1000ab34:	9007883a 	mov	r3,r18
1000ab38:	1444b03a 	or	r2,r2,r17
1000ab3c:	8401ffcc 	andi	r16,r16,2047
1000ab40:	8020953a 	slli	r16,r16,20
1000ab44:	18c03fcc 	andi	r3,r3,255
1000ab48:	01000434 	movhi	r4,16
1000ab4c:	213fffc4 	addi	r4,r4,-1
1000ab50:	180697fa 	slli	r3,r3,31
1000ab54:	4110703a 	and	r8,r8,r4
1000ab58:	4410b03a 	or	r8,r8,r16
1000ab5c:	40c6b03a 	or	r3,r8,r3
1000ab60:	dfc00417 	ldw	ra,16(sp)
1000ab64:	dcc00317 	ldw	r19,12(sp)
1000ab68:	dc800217 	ldw	r18,8(sp)
1000ab6c:	dc400117 	ldw	r17,4(sp)
1000ab70:	dc000017 	ldw	r16,0(sp)
1000ab74:	dec00504 	addi	sp,sp,20
1000ab78:	f800283a 	ret
1000ab7c:	0081ffc4 	movi	r2,2047
1000ab80:	80bfd626 	beq	r16,r2,1000aadc <__alt_data_end+0xf800aadc>
1000ab84:	4a402034 	orhi	r9,r9,128
1000ab88:	00800e04 	movi	r2,56
1000ab8c:	10c09f16 	blt	r2,r3,1000ae0c <__adddf3+0x3ac>
1000ab90:	008007c4 	movi	r2,31
1000ab94:	10c0c216 	blt	r2,r3,1000aea0 <__adddf3+0x440>
1000ab98:	00800804 	movi	r2,32
1000ab9c:	10c5c83a 	sub	r2,r2,r3
1000aba0:	488a983a 	sll	r5,r9,r2
1000aba4:	30c8d83a 	srl	r4,r6,r3
1000aba8:	3084983a 	sll	r2,r6,r2
1000abac:	48c6d83a 	srl	r3,r9,r3
1000abb0:	290cb03a 	or	r6,r5,r4
1000abb4:	1004c03a 	cmpne	r2,r2,zero
1000abb8:	308cb03a 	or	r6,r6,r2
1000abbc:	898dc83a 	sub	r6,r17,r6
1000abc0:	89a3803a 	cmpltu	r17,r17,r6
1000abc4:	40d1c83a 	sub	r8,r8,r3
1000abc8:	4451c83a 	sub	r8,r8,r17
1000abcc:	3023883a 	mov	r17,r6
1000abd0:	4080202c 	andhi	r2,r8,128
1000abd4:	10002326 	beq	r2,zero,1000ac64 <__adddf3+0x204>
1000abd8:	04c02034 	movhi	r19,128
1000abdc:	9cffffc4 	addi	r19,r19,-1
1000abe0:	44e6703a 	and	r19,r8,r19
1000abe4:	98007626 	beq	r19,zero,1000adc0 <__adddf3+0x360>
1000abe8:	9809883a 	mov	r4,r19
1000abec:	000d2a00 	call	1000d2a0 <__clzsi2>
1000abf0:	10fffe04 	addi	r3,r2,-8
1000abf4:	010007c4 	movi	r4,31
1000abf8:	20c07716 	blt	r4,r3,1000add8 <__adddf3+0x378>
1000abfc:	00800804 	movi	r2,32
1000ac00:	10c5c83a 	sub	r2,r2,r3
1000ac04:	8884d83a 	srl	r2,r17,r2
1000ac08:	98d0983a 	sll	r8,r19,r3
1000ac0c:	88e2983a 	sll	r17,r17,r3
1000ac10:	1204b03a 	or	r2,r2,r8
1000ac14:	1c007416 	blt	r3,r16,1000ade8 <__adddf3+0x388>
1000ac18:	1c21c83a 	sub	r16,r3,r16
1000ac1c:	82000044 	addi	r8,r16,1
1000ac20:	00c007c4 	movi	r3,31
1000ac24:	1a009116 	blt	r3,r8,1000ae6c <__adddf3+0x40c>
1000ac28:	00c00804 	movi	r3,32
1000ac2c:	1a07c83a 	sub	r3,r3,r8
1000ac30:	8a08d83a 	srl	r4,r17,r8
1000ac34:	88e2983a 	sll	r17,r17,r3
1000ac38:	10c6983a 	sll	r3,r2,r3
1000ac3c:	1210d83a 	srl	r8,r2,r8
1000ac40:	8804c03a 	cmpne	r2,r17,zero
1000ac44:	1906b03a 	or	r3,r3,r4
1000ac48:	18a2b03a 	or	r17,r3,r2
1000ac4c:	0021883a 	mov	r16,zero
1000ac50:	003fa206 	br	1000aadc <__alt_data_end+0xf800aadc>
1000ac54:	1890b03a 	or	r8,r3,r2
1000ac58:	40017d26 	beq	r8,zero,1000b250 <__adddf3+0x7f0>
1000ac5c:	1011883a 	mov	r8,r2
1000ac60:	1823883a 	mov	r17,r3
1000ac64:	888001cc 	andi	r2,r17,7
1000ac68:	103f9e1e 	bne	r2,zero,1000aae4 <__alt_data_end+0xf800aae4>
1000ac6c:	4004977a 	slli	r2,r8,29
1000ac70:	8822d0fa 	srli	r17,r17,3
1000ac74:	4010d0fa 	srli	r8,r8,3
1000ac78:	9007883a 	mov	r3,r18
1000ac7c:	1444b03a 	or	r2,r2,r17
1000ac80:	0101ffc4 	movi	r4,2047
1000ac84:	81002426 	beq	r16,r4,1000ad18 <__adddf3+0x2b8>
1000ac88:	8120703a 	and	r16,r16,r4
1000ac8c:	01000434 	movhi	r4,16
1000ac90:	213fffc4 	addi	r4,r4,-1
1000ac94:	4110703a 	and	r8,r8,r4
1000ac98:	003fa806 	br	1000ab3c <__alt_data_end+0xf800ab3c>
1000ac9c:	8089c83a 	sub	r4,r16,r2
1000aca0:	01005e0e 	bge	zero,r4,1000ae1c <__adddf3+0x3bc>
1000aca4:	10002b26 	beq	r2,zero,1000ad54 <__adddf3+0x2f4>
1000aca8:	0081ffc4 	movi	r2,2047
1000acac:	80bf8b26 	beq	r16,r2,1000aadc <__alt_data_end+0xf800aadc>
1000acb0:	4a402034 	orhi	r9,r9,128
1000acb4:	00800e04 	movi	r2,56
1000acb8:	1100a40e 	bge	r2,r4,1000af4c <__adddf3+0x4ec>
1000acbc:	498cb03a 	or	r6,r9,r6
1000acc0:	300ac03a 	cmpne	r5,r6,zero
1000acc4:	0013883a 	mov	r9,zero
1000acc8:	2c4b883a 	add	r5,r5,r17
1000accc:	2c63803a 	cmpltu	r17,r5,r17
1000acd0:	4a11883a 	add	r8,r9,r8
1000acd4:	8a11883a 	add	r8,r17,r8
1000acd8:	2823883a 	mov	r17,r5
1000acdc:	4080202c 	andhi	r2,r8,128
1000ace0:	103fe026 	beq	r2,zero,1000ac64 <__alt_data_end+0xf800ac64>
1000ace4:	84000044 	addi	r16,r16,1
1000ace8:	0081ffc4 	movi	r2,2047
1000acec:	8080d226 	beq	r16,r2,1000b038 <__adddf3+0x5d8>
1000acf0:	00bfe034 	movhi	r2,65408
1000acf4:	10bfffc4 	addi	r2,r2,-1
1000acf8:	4090703a 	and	r8,r8,r2
1000acfc:	880ad07a 	srli	r5,r17,1
1000ad00:	400897fa 	slli	r4,r8,31
1000ad04:	88c0004c 	andi	r3,r17,1
1000ad08:	28e2b03a 	or	r17,r5,r3
1000ad0c:	4010d07a 	srli	r8,r8,1
1000ad10:	2462b03a 	or	r17,r4,r17
1000ad14:	003f7106 	br	1000aadc <__alt_data_end+0xf800aadc>
1000ad18:	4088b03a 	or	r4,r8,r2
1000ad1c:	20014526 	beq	r4,zero,1000b234 <__adddf3+0x7d4>
1000ad20:	01000434 	movhi	r4,16
1000ad24:	42000234 	orhi	r8,r8,8
1000ad28:	213fffc4 	addi	r4,r4,-1
1000ad2c:	4110703a 	and	r8,r8,r4
1000ad30:	003f8206 	br	1000ab3c <__alt_data_end+0xf800ab3c>
1000ad34:	18ffffc4 	addi	r3,r3,-1
1000ad38:	1800491e 	bne	r3,zero,1000ae60 <__adddf3+0x400>
1000ad3c:	898bc83a 	sub	r5,r17,r6
1000ad40:	8963803a 	cmpltu	r17,r17,r5
1000ad44:	4251c83a 	sub	r8,r8,r9
1000ad48:	4451c83a 	sub	r8,r8,r17
1000ad4c:	2823883a 	mov	r17,r5
1000ad50:	003f9f06 	br	1000abd0 <__alt_data_end+0xf800abd0>
1000ad54:	4984b03a 	or	r2,r9,r6
1000ad58:	103f6026 	beq	r2,zero,1000aadc <__alt_data_end+0xf800aadc>
1000ad5c:	213fffc4 	addi	r4,r4,-1
1000ad60:	2000931e 	bne	r4,zero,1000afb0 <__adddf3+0x550>
1000ad64:	898d883a 	add	r6,r17,r6
1000ad68:	3463803a 	cmpltu	r17,r6,r17
1000ad6c:	4251883a 	add	r8,r8,r9
1000ad70:	8a11883a 	add	r8,r17,r8
1000ad74:	3023883a 	mov	r17,r6
1000ad78:	003fd806 	br	1000acdc <__alt_data_end+0xf800acdc>
1000ad7c:	1800541e 	bne	r3,zero,1000aed0 <__adddf3+0x470>
1000ad80:	80800044 	addi	r2,r16,1
1000ad84:	1081ffcc 	andi	r2,r2,2047
1000ad88:	00c00044 	movi	r3,1
1000ad8c:	1880a00e 	bge	r3,r2,1000b010 <__adddf3+0x5b0>
1000ad90:	8989c83a 	sub	r4,r17,r6
1000ad94:	8905803a 	cmpltu	r2,r17,r4
1000ad98:	4267c83a 	sub	r19,r8,r9
1000ad9c:	98a7c83a 	sub	r19,r19,r2
1000ada0:	9880202c 	andhi	r2,r19,128
1000ada4:	10006326 	beq	r2,zero,1000af34 <__adddf3+0x4d4>
1000ada8:	3463c83a 	sub	r17,r6,r17
1000adac:	4a07c83a 	sub	r3,r9,r8
1000adb0:	344d803a 	cmpltu	r6,r6,r17
1000adb4:	19a7c83a 	sub	r19,r3,r6
1000adb8:	3825883a 	mov	r18,r7
1000adbc:	983f8a1e 	bne	r19,zero,1000abe8 <__alt_data_end+0xf800abe8>
1000adc0:	8809883a 	mov	r4,r17
1000adc4:	000d2a00 	call	1000d2a0 <__clzsi2>
1000adc8:	10800804 	addi	r2,r2,32
1000adcc:	10fffe04 	addi	r3,r2,-8
1000add0:	010007c4 	movi	r4,31
1000add4:	20ff890e 	bge	r4,r3,1000abfc <__alt_data_end+0xf800abfc>
1000add8:	10bff604 	addi	r2,r2,-40
1000addc:	8884983a 	sll	r2,r17,r2
1000ade0:	0023883a 	mov	r17,zero
1000ade4:	1c3f8c0e 	bge	r3,r16,1000ac18 <__alt_data_end+0xf800ac18>
1000ade8:	023fe034 	movhi	r8,65408
1000adec:	423fffc4 	addi	r8,r8,-1
1000adf0:	80e1c83a 	sub	r16,r16,r3
1000adf4:	1210703a 	and	r8,r2,r8
1000adf8:	003f3806 	br	1000aadc <__alt_data_end+0xf800aadc>
1000adfc:	9007883a 	mov	r3,r18
1000ae00:	0011883a 	mov	r8,zero
1000ae04:	0005883a 	mov	r2,zero
1000ae08:	003f4c06 	br	1000ab3c <__alt_data_end+0xf800ab3c>
1000ae0c:	498cb03a 	or	r6,r9,r6
1000ae10:	300cc03a 	cmpne	r6,r6,zero
1000ae14:	0007883a 	mov	r3,zero
1000ae18:	003f6806 	br	1000abbc <__alt_data_end+0xf800abbc>
1000ae1c:	20009c1e 	bne	r4,zero,1000b090 <__adddf3+0x630>
1000ae20:	80800044 	addi	r2,r16,1
1000ae24:	1141ffcc 	andi	r5,r2,2047
1000ae28:	01000044 	movi	r4,1
1000ae2c:	2140670e 	bge	r4,r5,1000afcc <__adddf3+0x56c>
1000ae30:	0101ffc4 	movi	r4,2047
1000ae34:	11007f26 	beq	r2,r4,1000b034 <__adddf3+0x5d4>
1000ae38:	898d883a 	add	r6,r17,r6
1000ae3c:	4247883a 	add	r3,r8,r9
1000ae40:	3451803a 	cmpltu	r8,r6,r17
1000ae44:	40d1883a 	add	r8,r8,r3
1000ae48:	402297fa 	slli	r17,r8,31
1000ae4c:	300cd07a 	srli	r6,r6,1
1000ae50:	4010d07a 	srli	r8,r8,1
1000ae54:	1021883a 	mov	r16,r2
1000ae58:	89a2b03a 	or	r17,r17,r6
1000ae5c:	003f1f06 	br	1000aadc <__alt_data_end+0xf800aadc>
1000ae60:	0081ffc4 	movi	r2,2047
1000ae64:	80bf481e 	bne	r16,r2,1000ab88 <__alt_data_end+0xf800ab88>
1000ae68:	003f1c06 	br	1000aadc <__alt_data_end+0xf800aadc>
1000ae6c:	843ff844 	addi	r16,r16,-31
1000ae70:	01000804 	movi	r4,32
1000ae74:	1406d83a 	srl	r3,r2,r16
1000ae78:	41005026 	beq	r8,r4,1000afbc <__adddf3+0x55c>
1000ae7c:	01001004 	movi	r4,64
1000ae80:	2211c83a 	sub	r8,r4,r8
1000ae84:	1204983a 	sll	r2,r2,r8
1000ae88:	88a2b03a 	or	r17,r17,r2
1000ae8c:	8822c03a 	cmpne	r17,r17,zero
1000ae90:	1c62b03a 	or	r17,r3,r17
1000ae94:	0011883a 	mov	r8,zero
1000ae98:	0021883a 	mov	r16,zero
1000ae9c:	003f7106 	br	1000ac64 <__alt_data_end+0xf800ac64>
1000aea0:	193ff804 	addi	r4,r3,-32
1000aea4:	00800804 	movi	r2,32
1000aea8:	4908d83a 	srl	r4,r9,r4
1000aeac:	18804526 	beq	r3,r2,1000afc4 <__adddf3+0x564>
1000aeb0:	00801004 	movi	r2,64
1000aeb4:	10c5c83a 	sub	r2,r2,r3
1000aeb8:	4886983a 	sll	r3,r9,r2
1000aebc:	198cb03a 	or	r6,r3,r6
1000aec0:	300cc03a 	cmpne	r6,r6,zero
1000aec4:	218cb03a 	or	r6,r4,r6
1000aec8:	0007883a 	mov	r3,zero
1000aecc:	003f3b06 	br	1000abbc <__alt_data_end+0xf800abbc>
1000aed0:	80002a26 	beq	r16,zero,1000af7c <__adddf3+0x51c>
1000aed4:	0101ffc4 	movi	r4,2047
1000aed8:	11006826 	beq	r2,r4,1000b07c <__adddf3+0x61c>
1000aedc:	00c7c83a 	sub	r3,zero,r3
1000aee0:	42002034 	orhi	r8,r8,128
1000aee4:	01000e04 	movi	r4,56
1000aee8:	20c07c16 	blt	r4,r3,1000b0dc <__adddf3+0x67c>
1000aeec:	010007c4 	movi	r4,31
1000aef0:	20c0da16 	blt	r4,r3,1000b25c <__adddf3+0x7fc>
1000aef4:	01000804 	movi	r4,32
1000aef8:	20c9c83a 	sub	r4,r4,r3
1000aefc:	4114983a 	sll	r10,r8,r4
1000af00:	88cad83a 	srl	r5,r17,r3
1000af04:	8908983a 	sll	r4,r17,r4
1000af08:	40c6d83a 	srl	r3,r8,r3
1000af0c:	5162b03a 	or	r17,r10,r5
1000af10:	2008c03a 	cmpne	r4,r4,zero
1000af14:	8922b03a 	or	r17,r17,r4
1000af18:	3463c83a 	sub	r17,r6,r17
1000af1c:	48c7c83a 	sub	r3,r9,r3
1000af20:	344d803a 	cmpltu	r6,r6,r17
1000af24:	1991c83a 	sub	r8,r3,r6
1000af28:	1021883a 	mov	r16,r2
1000af2c:	3825883a 	mov	r18,r7
1000af30:	003f2706 	br	1000abd0 <__alt_data_end+0xf800abd0>
1000af34:	24d0b03a 	or	r8,r4,r19
1000af38:	40001b1e 	bne	r8,zero,1000afa8 <__adddf3+0x548>
1000af3c:	0005883a 	mov	r2,zero
1000af40:	0007883a 	mov	r3,zero
1000af44:	0021883a 	mov	r16,zero
1000af48:	003f4d06 	br	1000ac80 <__alt_data_end+0xf800ac80>
1000af4c:	008007c4 	movi	r2,31
1000af50:	11003c16 	blt	r2,r4,1000b044 <__adddf3+0x5e4>
1000af54:	00800804 	movi	r2,32
1000af58:	1105c83a 	sub	r2,r2,r4
1000af5c:	488e983a 	sll	r7,r9,r2
1000af60:	310ad83a 	srl	r5,r6,r4
1000af64:	3084983a 	sll	r2,r6,r2
1000af68:	4912d83a 	srl	r9,r9,r4
1000af6c:	394ab03a 	or	r5,r7,r5
1000af70:	1004c03a 	cmpne	r2,r2,zero
1000af74:	288ab03a 	or	r5,r5,r2
1000af78:	003f5306 	br	1000acc8 <__alt_data_end+0xf800acc8>
1000af7c:	4448b03a 	or	r4,r8,r17
1000af80:	20003e26 	beq	r4,zero,1000b07c <__adddf3+0x61c>
1000af84:	00c6303a 	nor	r3,zero,r3
1000af88:	18003a1e 	bne	r3,zero,1000b074 <__adddf3+0x614>
1000af8c:	3463c83a 	sub	r17,r6,r17
1000af90:	4a07c83a 	sub	r3,r9,r8
1000af94:	344d803a 	cmpltu	r6,r6,r17
1000af98:	1991c83a 	sub	r8,r3,r6
1000af9c:	1021883a 	mov	r16,r2
1000afa0:	3825883a 	mov	r18,r7
1000afa4:	003f0a06 	br	1000abd0 <__alt_data_end+0xf800abd0>
1000afa8:	2023883a 	mov	r17,r4
1000afac:	003f0d06 	br	1000abe4 <__alt_data_end+0xf800abe4>
1000afb0:	0081ffc4 	movi	r2,2047
1000afb4:	80bf3f1e 	bne	r16,r2,1000acb4 <__alt_data_end+0xf800acb4>
1000afb8:	003ec806 	br	1000aadc <__alt_data_end+0xf800aadc>
1000afbc:	0005883a 	mov	r2,zero
1000afc0:	003fb106 	br	1000ae88 <__alt_data_end+0xf800ae88>
1000afc4:	0007883a 	mov	r3,zero
1000afc8:	003fbc06 	br	1000aebc <__alt_data_end+0xf800aebc>
1000afcc:	4444b03a 	or	r2,r8,r17
1000afd0:	8000871e 	bne	r16,zero,1000b1f0 <__adddf3+0x790>
1000afd4:	1000ba26 	beq	r2,zero,1000b2c0 <__adddf3+0x860>
1000afd8:	4984b03a 	or	r2,r9,r6
1000afdc:	103ebf26 	beq	r2,zero,1000aadc <__alt_data_end+0xf800aadc>
1000afe0:	8985883a 	add	r2,r17,r6
1000afe4:	4247883a 	add	r3,r8,r9
1000afe8:	1451803a 	cmpltu	r8,r2,r17
1000afec:	40d1883a 	add	r8,r8,r3
1000aff0:	40c0202c 	andhi	r3,r8,128
1000aff4:	1023883a 	mov	r17,r2
1000aff8:	183f1a26 	beq	r3,zero,1000ac64 <__alt_data_end+0xf800ac64>
1000affc:	00bfe034 	movhi	r2,65408
1000b000:	10bfffc4 	addi	r2,r2,-1
1000b004:	2021883a 	mov	r16,r4
1000b008:	4090703a 	and	r8,r8,r2
1000b00c:	003eb306 	br	1000aadc <__alt_data_end+0xf800aadc>
1000b010:	4444b03a 	or	r2,r8,r17
1000b014:	8000291e 	bne	r16,zero,1000b0bc <__adddf3+0x65c>
1000b018:	10004b1e 	bne	r2,zero,1000b148 <__adddf3+0x6e8>
1000b01c:	4990b03a 	or	r8,r9,r6
1000b020:	40008b26 	beq	r8,zero,1000b250 <__adddf3+0x7f0>
1000b024:	4811883a 	mov	r8,r9
1000b028:	3023883a 	mov	r17,r6
1000b02c:	3825883a 	mov	r18,r7
1000b030:	003eaa06 	br	1000aadc <__alt_data_end+0xf800aadc>
1000b034:	1021883a 	mov	r16,r2
1000b038:	0011883a 	mov	r8,zero
1000b03c:	0005883a 	mov	r2,zero
1000b040:	003f0f06 	br	1000ac80 <__alt_data_end+0xf800ac80>
1000b044:	217ff804 	addi	r5,r4,-32
1000b048:	00800804 	movi	r2,32
1000b04c:	494ad83a 	srl	r5,r9,r5
1000b050:	20807d26 	beq	r4,r2,1000b248 <__adddf3+0x7e8>
1000b054:	00801004 	movi	r2,64
1000b058:	1109c83a 	sub	r4,r2,r4
1000b05c:	4912983a 	sll	r9,r9,r4
1000b060:	498cb03a 	or	r6,r9,r6
1000b064:	300cc03a 	cmpne	r6,r6,zero
1000b068:	298ab03a 	or	r5,r5,r6
1000b06c:	0013883a 	mov	r9,zero
1000b070:	003f1506 	br	1000acc8 <__alt_data_end+0xf800acc8>
1000b074:	0101ffc4 	movi	r4,2047
1000b078:	113f9a1e 	bne	r2,r4,1000aee4 <__alt_data_end+0xf800aee4>
1000b07c:	4811883a 	mov	r8,r9
1000b080:	3023883a 	mov	r17,r6
1000b084:	1021883a 	mov	r16,r2
1000b088:	3825883a 	mov	r18,r7
1000b08c:	003e9306 	br	1000aadc <__alt_data_end+0xf800aadc>
1000b090:	8000161e 	bne	r16,zero,1000b0ec <__adddf3+0x68c>
1000b094:	444ab03a 	or	r5,r8,r17
1000b098:	28005126 	beq	r5,zero,1000b1e0 <__adddf3+0x780>
1000b09c:	0108303a 	nor	r4,zero,r4
1000b0a0:	20004d1e 	bne	r4,zero,1000b1d8 <__adddf3+0x778>
1000b0a4:	89a3883a 	add	r17,r17,r6
1000b0a8:	4253883a 	add	r9,r8,r9
1000b0ac:	898d803a 	cmpltu	r6,r17,r6
1000b0b0:	3251883a 	add	r8,r6,r9
1000b0b4:	1021883a 	mov	r16,r2
1000b0b8:	003f0806 	br	1000acdc <__alt_data_end+0xf800acdc>
1000b0bc:	1000301e 	bne	r2,zero,1000b180 <__adddf3+0x720>
1000b0c0:	4984b03a 	or	r2,r9,r6
1000b0c4:	10007126 	beq	r2,zero,1000b28c <__adddf3+0x82c>
1000b0c8:	4811883a 	mov	r8,r9
1000b0cc:	3023883a 	mov	r17,r6
1000b0d0:	3825883a 	mov	r18,r7
1000b0d4:	0401ffc4 	movi	r16,2047
1000b0d8:	003e8006 	br	1000aadc <__alt_data_end+0xf800aadc>
1000b0dc:	4462b03a 	or	r17,r8,r17
1000b0e0:	8822c03a 	cmpne	r17,r17,zero
1000b0e4:	0007883a 	mov	r3,zero
1000b0e8:	003f8b06 	br	1000af18 <__alt_data_end+0xf800af18>
1000b0ec:	0141ffc4 	movi	r5,2047
1000b0f0:	11403b26 	beq	r2,r5,1000b1e0 <__adddf3+0x780>
1000b0f4:	0109c83a 	sub	r4,zero,r4
1000b0f8:	42002034 	orhi	r8,r8,128
1000b0fc:	01400e04 	movi	r5,56
1000b100:	29006716 	blt	r5,r4,1000b2a0 <__adddf3+0x840>
1000b104:	014007c4 	movi	r5,31
1000b108:	29007016 	blt	r5,r4,1000b2cc <__adddf3+0x86c>
1000b10c:	01400804 	movi	r5,32
1000b110:	290bc83a 	sub	r5,r5,r4
1000b114:	4154983a 	sll	r10,r8,r5
1000b118:	890ed83a 	srl	r7,r17,r4
1000b11c:	894a983a 	sll	r5,r17,r5
1000b120:	4108d83a 	srl	r4,r8,r4
1000b124:	51e2b03a 	or	r17,r10,r7
1000b128:	280ac03a 	cmpne	r5,r5,zero
1000b12c:	8962b03a 	or	r17,r17,r5
1000b130:	89a3883a 	add	r17,r17,r6
1000b134:	2253883a 	add	r9,r4,r9
1000b138:	898d803a 	cmpltu	r6,r17,r6
1000b13c:	3251883a 	add	r8,r6,r9
1000b140:	1021883a 	mov	r16,r2
1000b144:	003ee506 	br	1000acdc <__alt_data_end+0xf800acdc>
1000b148:	4984b03a 	or	r2,r9,r6
1000b14c:	103e6326 	beq	r2,zero,1000aadc <__alt_data_end+0xf800aadc>
1000b150:	8987c83a 	sub	r3,r17,r6
1000b154:	88c9803a 	cmpltu	r4,r17,r3
1000b158:	4245c83a 	sub	r2,r8,r9
1000b15c:	1105c83a 	sub	r2,r2,r4
1000b160:	1100202c 	andhi	r4,r2,128
1000b164:	203ebb26 	beq	r4,zero,1000ac54 <__alt_data_end+0xf800ac54>
1000b168:	3463c83a 	sub	r17,r6,r17
1000b16c:	4a07c83a 	sub	r3,r9,r8
1000b170:	344d803a 	cmpltu	r6,r6,r17
1000b174:	1991c83a 	sub	r8,r3,r6
1000b178:	3825883a 	mov	r18,r7
1000b17c:	003e5706 	br	1000aadc <__alt_data_end+0xf800aadc>
1000b180:	4984b03a 	or	r2,r9,r6
1000b184:	10002e26 	beq	r2,zero,1000b240 <__adddf3+0x7e0>
1000b188:	4004d0fa 	srli	r2,r8,3
1000b18c:	8822d0fa 	srli	r17,r17,3
1000b190:	4010977a 	slli	r8,r8,29
1000b194:	10c0022c 	andhi	r3,r2,8
1000b198:	4462b03a 	or	r17,r8,r17
1000b19c:	18000826 	beq	r3,zero,1000b1c0 <__adddf3+0x760>
1000b1a0:	4808d0fa 	srli	r4,r9,3
1000b1a4:	20c0022c 	andhi	r3,r4,8
1000b1a8:	1800051e 	bne	r3,zero,1000b1c0 <__adddf3+0x760>
1000b1ac:	300cd0fa 	srli	r6,r6,3
1000b1b0:	4806977a 	slli	r3,r9,29
1000b1b4:	2005883a 	mov	r2,r4
1000b1b8:	3825883a 	mov	r18,r7
1000b1bc:	19a2b03a 	or	r17,r3,r6
1000b1c0:	8810d77a 	srli	r8,r17,29
1000b1c4:	100490fa 	slli	r2,r2,3
1000b1c8:	882290fa 	slli	r17,r17,3
1000b1cc:	0401ffc4 	movi	r16,2047
1000b1d0:	4090b03a 	or	r8,r8,r2
1000b1d4:	003e4106 	br	1000aadc <__alt_data_end+0xf800aadc>
1000b1d8:	0141ffc4 	movi	r5,2047
1000b1dc:	117fc71e 	bne	r2,r5,1000b0fc <__alt_data_end+0xf800b0fc>
1000b1e0:	4811883a 	mov	r8,r9
1000b1e4:	3023883a 	mov	r17,r6
1000b1e8:	1021883a 	mov	r16,r2
1000b1ec:	003e3b06 	br	1000aadc <__alt_data_end+0xf800aadc>
1000b1f0:	10002f26 	beq	r2,zero,1000b2b0 <__adddf3+0x850>
1000b1f4:	4984b03a 	or	r2,r9,r6
1000b1f8:	10001126 	beq	r2,zero,1000b240 <__adddf3+0x7e0>
1000b1fc:	4004d0fa 	srli	r2,r8,3
1000b200:	8822d0fa 	srli	r17,r17,3
1000b204:	4010977a 	slli	r8,r8,29
1000b208:	10c0022c 	andhi	r3,r2,8
1000b20c:	4462b03a 	or	r17,r8,r17
1000b210:	183feb26 	beq	r3,zero,1000b1c0 <__alt_data_end+0xf800b1c0>
1000b214:	4808d0fa 	srli	r4,r9,3
1000b218:	20c0022c 	andhi	r3,r4,8
1000b21c:	183fe81e 	bne	r3,zero,1000b1c0 <__alt_data_end+0xf800b1c0>
1000b220:	300cd0fa 	srli	r6,r6,3
1000b224:	4806977a 	slli	r3,r9,29
1000b228:	2005883a 	mov	r2,r4
1000b22c:	19a2b03a 	or	r17,r3,r6
1000b230:	003fe306 	br	1000b1c0 <__alt_data_end+0xf800b1c0>
1000b234:	0011883a 	mov	r8,zero
1000b238:	0005883a 	mov	r2,zero
1000b23c:	003e3f06 	br	1000ab3c <__alt_data_end+0xf800ab3c>
1000b240:	0401ffc4 	movi	r16,2047
1000b244:	003e2506 	br	1000aadc <__alt_data_end+0xf800aadc>
1000b248:	0013883a 	mov	r9,zero
1000b24c:	003f8406 	br	1000b060 <__alt_data_end+0xf800b060>
1000b250:	0005883a 	mov	r2,zero
1000b254:	0007883a 	mov	r3,zero
1000b258:	003e8906 	br	1000ac80 <__alt_data_end+0xf800ac80>
1000b25c:	197ff804 	addi	r5,r3,-32
1000b260:	01000804 	movi	r4,32
1000b264:	414ad83a 	srl	r5,r8,r5
1000b268:	19002426 	beq	r3,r4,1000b2fc <__adddf3+0x89c>
1000b26c:	01001004 	movi	r4,64
1000b270:	20c7c83a 	sub	r3,r4,r3
1000b274:	40c6983a 	sll	r3,r8,r3
1000b278:	1c46b03a 	or	r3,r3,r17
1000b27c:	1806c03a 	cmpne	r3,r3,zero
1000b280:	28e2b03a 	or	r17,r5,r3
1000b284:	0007883a 	mov	r3,zero
1000b288:	003f2306 	br	1000af18 <__alt_data_end+0xf800af18>
1000b28c:	0007883a 	mov	r3,zero
1000b290:	5811883a 	mov	r8,r11
1000b294:	00bfffc4 	movi	r2,-1
1000b298:	0401ffc4 	movi	r16,2047
1000b29c:	003e7806 	br	1000ac80 <__alt_data_end+0xf800ac80>
1000b2a0:	4462b03a 	or	r17,r8,r17
1000b2a4:	8822c03a 	cmpne	r17,r17,zero
1000b2a8:	0009883a 	mov	r4,zero
1000b2ac:	003fa006 	br	1000b130 <__alt_data_end+0xf800b130>
1000b2b0:	4811883a 	mov	r8,r9
1000b2b4:	3023883a 	mov	r17,r6
1000b2b8:	0401ffc4 	movi	r16,2047
1000b2bc:	003e0706 	br	1000aadc <__alt_data_end+0xf800aadc>
1000b2c0:	4811883a 	mov	r8,r9
1000b2c4:	3023883a 	mov	r17,r6
1000b2c8:	003e0406 	br	1000aadc <__alt_data_end+0xf800aadc>
1000b2cc:	21fff804 	addi	r7,r4,-32
1000b2d0:	01400804 	movi	r5,32
1000b2d4:	41ced83a 	srl	r7,r8,r7
1000b2d8:	21400a26 	beq	r4,r5,1000b304 <__adddf3+0x8a4>
1000b2dc:	01401004 	movi	r5,64
1000b2e0:	2909c83a 	sub	r4,r5,r4
1000b2e4:	4108983a 	sll	r4,r8,r4
1000b2e8:	2448b03a 	or	r4,r4,r17
1000b2ec:	2008c03a 	cmpne	r4,r4,zero
1000b2f0:	3922b03a 	or	r17,r7,r4
1000b2f4:	0009883a 	mov	r4,zero
1000b2f8:	003f8d06 	br	1000b130 <__alt_data_end+0xf800b130>
1000b2fc:	0007883a 	mov	r3,zero
1000b300:	003fdd06 	br	1000b278 <__alt_data_end+0xf800b278>
1000b304:	0009883a 	mov	r4,zero
1000b308:	003ff706 	br	1000b2e8 <__alt_data_end+0xf800b2e8>

1000b30c <__divdf3>:
1000b30c:	defff004 	addi	sp,sp,-64
1000b310:	dc800815 	stw	r18,32(sp)
1000b314:	2824d53a 	srli	r18,r5,20
1000b318:	dd800c15 	stw	r22,48(sp)
1000b31c:	282cd7fa 	srli	r22,r5,31
1000b320:	dc000615 	stw	r16,24(sp)
1000b324:	04000434 	movhi	r16,16
1000b328:	843fffc4 	addi	r16,r16,-1
1000b32c:	dfc00f15 	stw	ra,60(sp)
1000b330:	df000e15 	stw	fp,56(sp)
1000b334:	ddc00d15 	stw	r23,52(sp)
1000b338:	dd400b15 	stw	r21,44(sp)
1000b33c:	dd000a15 	stw	r20,40(sp)
1000b340:	dcc00915 	stw	r19,36(sp)
1000b344:	dc400715 	stw	r17,28(sp)
1000b348:	9481ffcc 	andi	r18,r18,2047
1000b34c:	2c20703a 	and	r16,r5,r16
1000b350:	b2003fcc 	andi	r8,r22,255
1000b354:	90006126 	beq	r18,zero,1000b4dc <__divdf3+0x1d0>
1000b358:	0081ffc4 	movi	r2,2047
1000b35c:	202b883a 	mov	r21,r4
1000b360:	90803726 	beq	r18,r2,1000b440 <__divdf3+0x134>
1000b364:	80800434 	orhi	r2,r16,16
1000b368:	100490fa 	slli	r2,r2,3
1000b36c:	2020d77a 	srli	r16,r4,29
1000b370:	202a90fa 	slli	r21,r4,3
1000b374:	94bf0044 	addi	r18,r18,-1023
1000b378:	80a0b03a 	or	r16,r16,r2
1000b37c:	0013883a 	mov	r9,zero
1000b380:	000b883a 	mov	r5,zero
1000b384:	3806d53a 	srli	r3,r7,20
1000b388:	382ed7fa 	srli	r23,r7,31
1000b38c:	04400434 	movhi	r17,16
1000b390:	8c7fffc4 	addi	r17,r17,-1
1000b394:	18c1ffcc 	andi	r3,r3,2047
1000b398:	3029883a 	mov	r20,r6
1000b39c:	3c62703a 	and	r17,r7,r17
1000b3a0:	bf003fcc 	andi	fp,r23,255
1000b3a4:	18006e26 	beq	r3,zero,1000b560 <__divdf3+0x254>
1000b3a8:	0081ffc4 	movi	r2,2047
1000b3ac:	18806626 	beq	r3,r2,1000b548 <__divdf3+0x23c>
1000b3b0:	88800434 	orhi	r2,r17,16
1000b3b4:	100490fa 	slli	r2,r2,3
1000b3b8:	3022d77a 	srli	r17,r6,29
1000b3bc:	302890fa 	slli	r20,r6,3
1000b3c0:	18ff0044 	addi	r3,r3,-1023
1000b3c4:	88a2b03a 	or	r17,r17,r2
1000b3c8:	000f883a 	mov	r7,zero
1000b3cc:	b5e6f03a 	xor	r19,r22,r23
1000b3d0:	3a4cb03a 	or	r6,r7,r9
1000b3d4:	008003c4 	movi	r2,15
1000b3d8:	9809883a 	mov	r4,r19
1000b3dc:	90c7c83a 	sub	r3,r18,r3
1000b3e0:	9cc03fcc 	andi	r19,r19,255
1000b3e4:	11809636 	bltu	r2,r6,1000b640 <__divdf3+0x334>
1000b3e8:	300c90ba 	slli	r6,r6,2
1000b3ec:	00840074 	movhi	r2,4097
1000b3f0:	10ad0004 	addi	r2,r2,-19456
1000b3f4:	308d883a 	add	r6,r6,r2
1000b3f8:	30800017 	ldw	r2,0(r6)
1000b3fc:	1000683a 	jmp	r2
1000b400:	1000b640 	call	11000b64 <_gp+0xfe7410>
1000b404:	1000b478 	rdprs	zero,r2,721
1000b408:	1000b630 	cmpltui	zero,r2,728
1000b40c:	1000b46c 	andhi	zero,r2,721
1000b410:	1000b630 	cmpltui	zero,r2,728
1000b414:	1000b604 	addi	zero,r2,728
1000b418:	1000b630 	cmpltui	zero,r2,728
1000b41c:	1000b46c 	andhi	zero,r2,721
1000b420:	1000b478 	rdprs	zero,r2,721
1000b424:	1000b478 	rdprs	zero,r2,721
1000b428:	1000b604 	addi	zero,r2,728
1000b42c:	1000b46c 	andhi	zero,r2,721
1000b430:	1000b45c 	xori	zero,r2,721
1000b434:	1000b45c 	xori	zero,r2,721
1000b438:	1000b45c 	xori	zero,r2,721
1000b43c:	1000b9c8 	cmpgei	zero,r2,743
1000b440:	2404b03a 	or	r2,r4,r16
1000b444:	10006c1e 	bne	r2,zero,1000b5f8 <__divdf3+0x2ec>
1000b448:	02400204 	movi	r9,8
1000b44c:	0021883a 	mov	r16,zero
1000b450:	002b883a 	mov	r21,zero
1000b454:	01400084 	movi	r5,2
1000b458:	003fca06 	br	1000b384 <__alt_data_end+0xf800b384>
1000b45c:	8023883a 	mov	r17,r16
1000b460:	a829883a 	mov	r20,r21
1000b464:	4039883a 	mov	fp,r8
1000b468:	280f883a 	mov	r7,r5
1000b46c:	00800084 	movi	r2,2
1000b470:	3881601e 	bne	r7,r2,1000b9f4 <__divdf3+0x6e8>
1000b474:	e027883a 	mov	r19,fp
1000b478:	9900004c 	andi	r4,r19,1
1000b47c:	0081ffc4 	movi	r2,2047
1000b480:	0021883a 	mov	r16,zero
1000b484:	002b883a 	mov	r21,zero
1000b488:	1004953a 	slli	r2,r2,20
1000b48c:	20c03fcc 	andi	r3,r4,255
1000b490:	01400434 	movhi	r5,16
1000b494:	297fffc4 	addi	r5,r5,-1
1000b498:	180697fa 	slli	r3,r3,31
1000b49c:	8160703a 	and	r16,r16,r5
1000b4a0:	80a0b03a 	or	r16,r16,r2
1000b4a4:	80c6b03a 	or	r3,r16,r3
1000b4a8:	a805883a 	mov	r2,r21
1000b4ac:	dfc00f17 	ldw	ra,60(sp)
1000b4b0:	df000e17 	ldw	fp,56(sp)
1000b4b4:	ddc00d17 	ldw	r23,52(sp)
1000b4b8:	dd800c17 	ldw	r22,48(sp)
1000b4bc:	dd400b17 	ldw	r21,44(sp)
1000b4c0:	dd000a17 	ldw	r20,40(sp)
1000b4c4:	dcc00917 	ldw	r19,36(sp)
1000b4c8:	dc800817 	ldw	r18,32(sp)
1000b4cc:	dc400717 	ldw	r17,28(sp)
1000b4d0:	dc000617 	ldw	r16,24(sp)
1000b4d4:	dec01004 	addi	sp,sp,64
1000b4d8:	f800283a 	ret
1000b4dc:	2404b03a 	or	r2,r4,r16
1000b4e0:	2023883a 	mov	r17,r4
1000b4e4:	10003f26 	beq	r2,zero,1000b5e4 <__divdf3+0x2d8>
1000b4e8:	80015e26 	beq	r16,zero,1000ba64 <__divdf3+0x758>
1000b4ec:	8009883a 	mov	r4,r16
1000b4f0:	d9800215 	stw	r6,8(sp)
1000b4f4:	d9c00515 	stw	r7,20(sp)
1000b4f8:	da000415 	stw	r8,16(sp)
1000b4fc:	000d2a00 	call	1000d2a0 <__clzsi2>
1000b500:	d9800217 	ldw	r6,8(sp)
1000b504:	d9c00517 	ldw	r7,20(sp)
1000b508:	da000417 	ldw	r8,16(sp)
1000b50c:	113ffd44 	addi	r4,r2,-11
1000b510:	00c00704 	movi	r3,28
1000b514:	19014f16 	blt	r3,r4,1000ba54 <__divdf3+0x748>
1000b518:	00c00744 	movi	r3,29
1000b51c:	157ffe04 	addi	r21,r2,-8
1000b520:	1907c83a 	sub	r3,r3,r4
1000b524:	8560983a 	sll	r16,r16,r21
1000b528:	88c6d83a 	srl	r3,r17,r3
1000b52c:	8d6a983a 	sll	r21,r17,r21
1000b530:	1c20b03a 	or	r16,r3,r16
1000b534:	1080fcc4 	addi	r2,r2,1011
1000b538:	00a5c83a 	sub	r18,zero,r2
1000b53c:	0013883a 	mov	r9,zero
1000b540:	000b883a 	mov	r5,zero
1000b544:	003f8f06 	br	1000b384 <__alt_data_end+0xf800b384>
1000b548:	3444b03a 	or	r2,r6,r17
1000b54c:	1000231e 	bne	r2,zero,1000b5dc <__divdf3+0x2d0>
1000b550:	0023883a 	mov	r17,zero
1000b554:	0029883a 	mov	r20,zero
1000b558:	01c00084 	movi	r7,2
1000b55c:	003f9b06 	br	1000b3cc <__alt_data_end+0xf800b3cc>
1000b560:	3444b03a 	or	r2,r6,r17
1000b564:	10001926 	beq	r2,zero,1000b5cc <__divdf3+0x2c0>
1000b568:	88014b26 	beq	r17,zero,1000ba98 <__divdf3+0x78c>
1000b56c:	8809883a 	mov	r4,r17
1000b570:	d9400115 	stw	r5,4(sp)
1000b574:	d9800215 	stw	r6,8(sp)
1000b578:	da000415 	stw	r8,16(sp)
1000b57c:	da400315 	stw	r9,12(sp)
1000b580:	000d2a00 	call	1000d2a0 <__clzsi2>
1000b584:	d9400117 	ldw	r5,4(sp)
1000b588:	d9800217 	ldw	r6,8(sp)
1000b58c:	da000417 	ldw	r8,16(sp)
1000b590:	da400317 	ldw	r9,12(sp)
1000b594:	113ffd44 	addi	r4,r2,-11
1000b598:	00c00704 	movi	r3,28
1000b59c:	19013a16 	blt	r3,r4,1000ba88 <__divdf3+0x77c>
1000b5a0:	00c00744 	movi	r3,29
1000b5a4:	153ffe04 	addi	r20,r2,-8
1000b5a8:	1907c83a 	sub	r3,r3,r4
1000b5ac:	8d22983a 	sll	r17,r17,r20
1000b5b0:	30c6d83a 	srl	r3,r6,r3
1000b5b4:	3528983a 	sll	r20,r6,r20
1000b5b8:	1c62b03a 	or	r17,r3,r17
1000b5bc:	1080fcc4 	addi	r2,r2,1011
1000b5c0:	0087c83a 	sub	r3,zero,r2
1000b5c4:	000f883a 	mov	r7,zero
1000b5c8:	003f8006 	br	1000b3cc <__alt_data_end+0xf800b3cc>
1000b5cc:	0023883a 	mov	r17,zero
1000b5d0:	0029883a 	mov	r20,zero
1000b5d4:	01c00044 	movi	r7,1
1000b5d8:	003f7c06 	br	1000b3cc <__alt_data_end+0xf800b3cc>
1000b5dc:	01c000c4 	movi	r7,3
1000b5e0:	003f7a06 	br	1000b3cc <__alt_data_end+0xf800b3cc>
1000b5e4:	02400104 	movi	r9,4
1000b5e8:	0021883a 	mov	r16,zero
1000b5ec:	002b883a 	mov	r21,zero
1000b5f0:	01400044 	movi	r5,1
1000b5f4:	003f6306 	br	1000b384 <__alt_data_end+0xf800b384>
1000b5f8:	02400304 	movi	r9,12
1000b5fc:	014000c4 	movi	r5,3
1000b600:	003f6006 	br	1000b384 <__alt_data_end+0xf800b384>
1000b604:	04000434 	movhi	r16,16
1000b608:	0009883a 	mov	r4,zero
1000b60c:	843fffc4 	addi	r16,r16,-1
1000b610:	057fffc4 	movi	r21,-1
1000b614:	0081ffc4 	movi	r2,2047
1000b618:	003f9b06 	br	1000b488 <__alt_data_end+0xf800b488>
1000b61c:	00c00044 	movi	r3,1
1000b620:	1887c83a 	sub	r3,r3,r2
1000b624:	01000e04 	movi	r4,56
1000b628:	20c1530e 	bge	r4,r3,1000bb78 <__divdf3+0x86c>
1000b62c:	9900004c 	andi	r4,r19,1
1000b630:	0005883a 	mov	r2,zero
1000b634:	0021883a 	mov	r16,zero
1000b638:	002b883a 	mov	r21,zero
1000b63c:	003f9206 	br	1000b488 <__alt_data_end+0xf800b488>
1000b640:	8c012e36 	bltu	r17,r16,1000bafc <__divdf3+0x7f0>
1000b644:	84412c26 	beq	r16,r17,1000baf8 <__divdf3+0x7ec>
1000b648:	a82f883a 	mov	r23,r21
1000b64c:	18ffffc4 	addi	r3,r3,-1
1000b650:	002b883a 	mov	r21,zero
1000b654:	a004d63a 	srli	r2,r20,24
1000b658:	8822923a 	slli	r17,r17,8
1000b65c:	a028923a 	slli	r20,r20,8
1000b660:	8009883a 	mov	r4,r16
1000b664:	88acb03a 	or	r22,r17,r2
1000b668:	dd000015 	stw	r20,0(sp)
1000b66c:	b028d43a 	srli	r20,r22,16
1000b670:	d8c00215 	stw	r3,8(sp)
1000b674:	b4bfffcc 	andi	r18,r22,65535
1000b678:	a00b883a 	mov	r5,r20
1000b67c:	000a97c0 	call	1000a97c <__udivsi3>
1000b680:	100b883a 	mov	r5,r2
1000b684:	9009883a 	mov	r4,r18
1000b688:	1023883a 	mov	r17,r2
1000b68c:	000aa380 	call	1000aa38 <__mulsi3>
1000b690:	8009883a 	mov	r4,r16
1000b694:	a00b883a 	mov	r5,r20
1000b698:	1039883a 	mov	fp,r2
1000b69c:	000a9e00 	call	1000a9e0 <__umodsi3>
1000b6a0:	1004943a 	slli	r2,r2,16
1000b6a4:	b808d43a 	srli	r4,r23,16
1000b6a8:	d8c00217 	ldw	r3,8(sp)
1000b6ac:	2084b03a 	or	r2,r4,r2
1000b6b0:	1700062e 	bgeu	r2,fp,1000b6cc <__divdf3+0x3c0>
1000b6b4:	1585883a 	add	r2,r2,r22
1000b6b8:	893fffc4 	addi	r4,r17,-1
1000b6bc:	15811d36 	bltu	r2,r22,1000bb34 <__divdf3+0x828>
1000b6c0:	17011c2e 	bgeu	r2,fp,1000bb34 <__divdf3+0x828>
1000b6c4:	8c7fff84 	addi	r17,r17,-2
1000b6c8:	1585883a 	add	r2,r2,r22
1000b6cc:	1739c83a 	sub	fp,r2,fp
1000b6d0:	a00b883a 	mov	r5,r20
1000b6d4:	e009883a 	mov	r4,fp
1000b6d8:	d8c00215 	stw	r3,8(sp)
1000b6dc:	000a97c0 	call	1000a97c <__udivsi3>
1000b6e0:	100b883a 	mov	r5,r2
1000b6e4:	9009883a 	mov	r4,r18
1000b6e8:	1021883a 	mov	r16,r2
1000b6ec:	000aa380 	call	1000aa38 <__mulsi3>
1000b6f0:	a00b883a 	mov	r5,r20
1000b6f4:	e009883a 	mov	r4,fp
1000b6f8:	d8800415 	stw	r2,16(sp)
1000b6fc:	000a9e00 	call	1000a9e0 <__umodsi3>
1000b700:	1004943a 	slli	r2,r2,16
1000b704:	da000417 	ldw	r8,16(sp)
1000b708:	bdffffcc 	andi	r23,r23,65535
1000b70c:	b884b03a 	or	r2,r23,r2
1000b710:	d8c00217 	ldw	r3,8(sp)
1000b714:	1200062e 	bgeu	r2,r8,1000b730 <__divdf3+0x424>
1000b718:	1585883a 	add	r2,r2,r22
1000b71c:	813fffc4 	addi	r4,r16,-1
1000b720:	15810236 	bltu	r2,r22,1000bb2c <__divdf3+0x820>
1000b724:	1201012e 	bgeu	r2,r8,1000bb2c <__divdf3+0x820>
1000b728:	843fff84 	addi	r16,r16,-2
1000b72c:	1585883a 	add	r2,r2,r22
1000b730:	8822943a 	slli	r17,r17,16
1000b734:	d9800017 	ldw	r6,0(sp)
1000b738:	1211c83a 	sub	r8,r2,r8
1000b73c:	8c22b03a 	or	r17,r17,r16
1000b740:	373fffcc 	andi	fp,r6,65535
1000b744:	8abfffcc 	andi	r10,r17,65535
1000b748:	8820d43a 	srli	r16,r17,16
1000b74c:	5009883a 	mov	r4,r10
1000b750:	e00b883a 	mov	r5,fp
1000b754:	302ed43a 	srli	r23,r6,16
1000b758:	d8c00215 	stw	r3,8(sp)
1000b75c:	da000415 	stw	r8,16(sp)
1000b760:	da800115 	stw	r10,4(sp)
1000b764:	000aa380 	call	1000aa38 <__mulsi3>
1000b768:	800b883a 	mov	r5,r16
1000b76c:	e009883a 	mov	r4,fp
1000b770:	d8800515 	stw	r2,20(sp)
1000b774:	000aa380 	call	1000aa38 <__mulsi3>
1000b778:	8009883a 	mov	r4,r16
1000b77c:	b80b883a 	mov	r5,r23
1000b780:	d8800315 	stw	r2,12(sp)
1000b784:	000aa380 	call	1000aa38 <__mulsi3>
1000b788:	da800117 	ldw	r10,4(sp)
1000b78c:	b80b883a 	mov	r5,r23
1000b790:	1021883a 	mov	r16,r2
1000b794:	5009883a 	mov	r4,r10
1000b798:	000aa380 	call	1000aa38 <__mulsi3>
1000b79c:	d9c00517 	ldw	r7,20(sp)
1000b7a0:	da400317 	ldw	r9,12(sp)
1000b7a4:	d8c00217 	ldw	r3,8(sp)
1000b7a8:	3808d43a 	srli	r4,r7,16
1000b7ac:	1245883a 	add	r2,r2,r9
1000b7b0:	da000417 	ldw	r8,16(sp)
1000b7b4:	2085883a 	add	r2,r4,r2
1000b7b8:	1240022e 	bgeu	r2,r9,1000b7c4 <__divdf3+0x4b8>
1000b7bc:	01000074 	movhi	r4,1
1000b7c0:	8121883a 	add	r16,r16,r4
1000b7c4:	1008d43a 	srli	r4,r2,16
1000b7c8:	1004943a 	slli	r2,r2,16
1000b7cc:	39ffffcc 	andi	r7,r7,65535
1000b7d0:	2409883a 	add	r4,r4,r16
1000b7d4:	11c5883a 	add	r2,r2,r7
1000b7d8:	4100bb36 	bltu	r8,r4,1000bac8 <__divdf3+0x7bc>
1000b7dc:	4100d726 	beq	r8,r4,1000bb3c <__divdf3+0x830>
1000b7e0:	4109c83a 	sub	r4,r8,r4
1000b7e4:	a8a1c83a 	sub	r16,r21,r2
1000b7e8:	ac2b803a 	cmpltu	r21,r21,r16
1000b7ec:	256bc83a 	sub	r21,r4,r21
1000b7f0:	b540d926 	beq	r22,r21,1000bb58 <__divdf3+0x84c>
1000b7f4:	a00b883a 	mov	r5,r20
1000b7f8:	a809883a 	mov	r4,r21
1000b7fc:	d8c00215 	stw	r3,8(sp)
1000b800:	000a97c0 	call	1000a97c <__udivsi3>
1000b804:	100b883a 	mov	r5,r2
1000b808:	9009883a 	mov	r4,r18
1000b80c:	d8800515 	stw	r2,20(sp)
1000b810:	000aa380 	call	1000aa38 <__mulsi3>
1000b814:	a809883a 	mov	r4,r21
1000b818:	a00b883a 	mov	r5,r20
1000b81c:	d8800415 	stw	r2,16(sp)
1000b820:	000a9e00 	call	1000a9e0 <__umodsi3>
1000b824:	1004943a 	slli	r2,r2,16
1000b828:	8008d43a 	srli	r4,r16,16
1000b82c:	da000417 	ldw	r8,16(sp)
1000b830:	d8c00217 	ldw	r3,8(sp)
1000b834:	2084b03a 	or	r2,r4,r2
1000b838:	d9c00517 	ldw	r7,20(sp)
1000b83c:	1200062e 	bgeu	r2,r8,1000b858 <__divdf3+0x54c>
1000b840:	1585883a 	add	r2,r2,r22
1000b844:	393fffc4 	addi	r4,r7,-1
1000b848:	1580c536 	bltu	r2,r22,1000bb60 <__divdf3+0x854>
1000b84c:	1200c42e 	bgeu	r2,r8,1000bb60 <__divdf3+0x854>
1000b850:	39ffff84 	addi	r7,r7,-2
1000b854:	1585883a 	add	r2,r2,r22
1000b858:	122bc83a 	sub	r21,r2,r8
1000b85c:	a00b883a 	mov	r5,r20
1000b860:	a809883a 	mov	r4,r21
1000b864:	d8c00215 	stw	r3,8(sp)
1000b868:	d9c00515 	stw	r7,20(sp)
1000b86c:	000a97c0 	call	1000a97c <__udivsi3>
1000b870:	9009883a 	mov	r4,r18
1000b874:	100b883a 	mov	r5,r2
1000b878:	d8800415 	stw	r2,16(sp)
1000b87c:	000aa380 	call	1000aa38 <__mulsi3>
1000b880:	a809883a 	mov	r4,r21
1000b884:	a00b883a 	mov	r5,r20
1000b888:	1025883a 	mov	r18,r2
1000b88c:	000a9e00 	call	1000a9e0 <__umodsi3>
1000b890:	1004943a 	slli	r2,r2,16
1000b894:	813fffcc 	andi	r4,r16,65535
1000b898:	d8c00217 	ldw	r3,8(sp)
1000b89c:	20a0b03a 	or	r16,r4,r2
1000b8a0:	d9c00517 	ldw	r7,20(sp)
1000b8a4:	da000417 	ldw	r8,16(sp)
1000b8a8:	8480062e 	bgeu	r16,r18,1000b8c4 <__divdf3+0x5b8>
1000b8ac:	85a1883a 	add	r16,r16,r22
1000b8b0:	40bfffc4 	addi	r2,r8,-1
1000b8b4:	8580ac36 	bltu	r16,r22,1000bb68 <__divdf3+0x85c>
1000b8b8:	8480ab2e 	bgeu	r16,r18,1000bb68 <__divdf3+0x85c>
1000b8bc:	423fff84 	addi	r8,r8,-2
1000b8c0:	85a1883a 	add	r16,r16,r22
1000b8c4:	3804943a 	slli	r2,r7,16
1000b8c8:	84a1c83a 	sub	r16,r16,r18
1000b8cc:	e009883a 	mov	r4,fp
1000b8d0:	1228b03a 	or	r20,r2,r8
1000b8d4:	a1ffffcc 	andi	r7,r20,65535
1000b8d8:	a024d43a 	srli	r18,r20,16
1000b8dc:	380b883a 	mov	r5,r7
1000b8e0:	d8c00215 	stw	r3,8(sp)
1000b8e4:	d9c00515 	stw	r7,20(sp)
1000b8e8:	000aa380 	call	1000aa38 <__mulsi3>
1000b8ec:	900b883a 	mov	r5,r18
1000b8f0:	e009883a 	mov	r4,fp
1000b8f4:	102b883a 	mov	r21,r2
1000b8f8:	000aa380 	call	1000aa38 <__mulsi3>
1000b8fc:	900b883a 	mov	r5,r18
1000b900:	b809883a 	mov	r4,r23
1000b904:	1039883a 	mov	fp,r2
1000b908:	000aa380 	call	1000aa38 <__mulsi3>
1000b90c:	d9c00517 	ldw	r7,20(sp)
1000b910:	b80b883a 	mov	r5,r23
1000b914:	1025883a 	mov	r18,r2
1000b918:	3809883a 	mov	r4,r7
1000b91c:	000aa380 	call	1000aa38 <__mulsi3>
1000b920:	a808d43a 	srli	r4,r21,16
1000b924:	1705883a 	add	r2,r2,fp
1000b928:	d8c00217 	ldw	r3,8(sp)
1000b92c:	2085883a 	add	r2,r4,r2
1000b930:	1700022e 	bgeu	r2,fp,1000b93c <__divdf3+0x630>
1000b934:	01000074 	movhi	r4,1
1000b938:	9125883a 	add	r18,r18,r4
1000b93c:	1008d43a 	srli	r4,r2,16
1000b940:	1004943a 	slli	r2,r2,16
1000b944:	ad7fffcc 	andi	r21,r21,65535
1000b948:	2489883a 	add	r4,r4,r18
1000b94c:	1545883a 	add	r2,r2,r21
1000b950:	81003836 	bltu	r16,r4,1000ba34 <__divdf3+0x728>
1000b954:	81003626 	beq	r16,r4,1000ba30 <__divdf3+0x724>
1000b958:	a5000054 	ori	r20,r20,1
1000b95c:	1880ffc4 	addi	r2,r3,1023
1000b960:	00bf2e0e 	bge	zero,r2,1000b61c <__alt_data_end+0xf800b61c>
1000b964:	a10001cc 	andi	r4,r20,7
1000b968:	20000726 	beq	r4,zero,1000b988 <__divdf3+0x67c>
1000b96c:	a10003cc 	andi	r4,r20,15
1000b970:	01400104 	movi	r5,4
1000b974:	21400426 	beq	r4,r5,1000b988 <__divdf3+0x67c>
1000b978:	a149883a 	add	r4,r20,r5
1000b97c:	2529803a 	cmpltu	r20,r4,r20
1000b980:	8d23883a 	add	r17,r17,r20
1000b984:	2029883a 	mov	r20,r4
1000b988:	8900402c 	andhi	r4,r17,256
1000b98c:	20000426 	beq	r4,zero,1000b9a0 <__divdf3+0x694>
1000b990:	18810004 	addi	r2,r3,1024
1000b994:	00ffc034 	movhi	r3,65280
1000b998:	18ffffc4 	addi	r3,r3,-1
1000b99c:	88e2703a 	and	r17,r17,r3
1000b9a0:	00c1ff84 	movi	r3,2046
1000b9a4:	18beb416 	blt	r3,r2,1000b478 <__alt_data_end+0xf800b478>
1000b9a8:	a028d0fa 	srli	r20,r20,3
1000b9ac:	882a977a 	slli	r21,r17,29
1000b9b0:	8820927a 	slli	r16,r17,9
1000b9b4:	1081ffcc 	andi	r2,r2,2047
1000b9b8:	ad2ab03a 	or	r21,r21,r20
1000b9bc:	8020d33a 	srli	r16,r16,12
1000b9c0:	9900004c 	andi	r4,r19,1
1000b9c4:	003eb006 	br	1000b488 <__alt_data_end+0xf800b488>
1000b9c8:	8080022c 	andhi	r2,r16,8
1000b9cc:	10001226 	beq	r2,zero,1000ba18 <__divdf3+0x70c>
1000b9d0:	8880022c 	andhi	r2,r17,8
1000b9d4:	1000101e 	bne	r2,zero,1000ba18 <__divdf3+0x70c>
1000b9d8:	00800434 	movhi	r2,16
1000b9dc:	8c000234 	orhi	r16,r17,8
1000b9e0:	10bfffc4 	addi	r2,r2,-1
1000b9e4:	b809883a 	mov	r4,r23
1000b9e8:	80a0703a 	and	r16,r16,r2
1000b9ec:	a02b883a 	mov	r21,r20
1000b9f0:	003f0806 	br	1000b614 <__alt_data_end+0xf800b614>
1000b9f4:	008000c4 	movi	r2,3
1000b9f8:	3880b126 	beq	r7,r2,1000bcc0 <__divdf3+0x9b4>
1000b9fc:	00800044 	movi	r2,1
1000ba00:	38805b1e 	bne	r7,r2,1000bb70 <__divdf3+0x864>
1000ba04:	e009883a 	mov	r4,fp
1000ba08:	0005883a 	mov	r2,zero
1000ba0c:	0021883a 	mov	r16,zero
1000ba10:	002b883a 	mov	r21,zero
1000ba14:	003e9c06 	br	1000b488 <__alt_data_end+0xf800b488>
1000ba18:	00800434 	movhi	r2,16
1000ba1c:	84000234 	orhi	r16,r16,8
1000ba20:	10bfffc4 	addi	r2,r2,-1
1000ba24:	b009883a 	mov	r4,r22
1000ba28:	80a0703a 	and	r16,r16,r2
1000ba2c:	003ef906 	br	1000b614 <__alt_data_end+0xf800b614>
1000ba30:	103fca26 	beq	r2,zero,1000b95c <__alt_data_end+0xf800b95c>
1000ba34:	b421883a 	add	r16,r22,r16
1000ba38:	a17fffc4 	addi	r5,r20,-1
1000ba3c:	8580422e 	bgeu	r16,r22,1000bb48 <__divdf3+0x83c>
1000ba40:	2829883a 	mov	r20,r5
1000ba44:	813fc41e 	bne	r16,r4,1000b958 <__alt_data_end+0xf800b958>
1000ba48:	d9800017 	ldw	r6,0(sp)
1000ba4c:	30bfc21e 	bne	r6,r2,1000b958 <__alt_data_end+0xf800b958>
1000ba50:	003fc206 	br	1000b95c <__alt_data_end+0xf800b95c>
1000ba54:	143ff604 	addi	r16,r2,-40
1000ba58:	8c20983a 	sll	r16,r17,r16
1000ba5c:	002b883a 	mov	r21,zero
1000ba60:	003eb406 	br	1000b534 <__alt_data_end+0xf800b534>
1000ba64:	d9800215 	stw	r6,8(sp)
1000ba68:	d9c00515 	stw	r7,20(sp)
1000ba6c:	da000415 	stw	r8,16(sp)
1000ba70:	000d2a00 	call	1000d2a0 <__clzsi2>
1000ba74:	10800804 	addi	r2,r2,32
1000ba78:	da000417 	ldw	r8,16(sp)
1000ba7c:	d9c00517 	ldw	r7,20(sp)
1000ba80:	d9800217 	ldw	r6,8(sp)
1000ba84:	003ea106 	br	1000b50c <__alt_data_end+0xf800b50c>
1000ba88:	147ff604 	addi	r17,r2,-40
1000ba8c:	3462983a 	sll	r17,r6,r17
1000ba90:	0029883a 	mov	r20,zero
1000ba94:	003ec906 	br	1000b5bc <__alt_data_end+0xf800b5bc>
1000ba98:	3009883a 	mov	r4,r6
1000ba9c:	d9400115 	stw	r5,4(sp)
1000baa0:	d9800215 	stw	r6,8(sp)
1000baa4:	da000415 	stw	r8,16(sp)
1000baa8:	da400315 	stw	r9,12(sp)
1000baac:	000d2a00 	call	1000d2a0 <__clzsi2>
1000bab0:	10800804 	addi	r2,r2,32
1000bab4:	da400317 	ldw	r9,12(sp)
1000bab8:	da000417 	ldw	r8,16(sp)
1000babc:	d9800217 	ldw	r6,8(sp)
1000bac0:	d9400117 	ldw	r5,4(sp)
1000bac4:	003eb306 	br	1000b594 <__alt_data_end+0xf800b594>
1000bac8:	d9800017 	ldw	r6,0(sp)
1000bacc:	a9ab883a 	add	r21,r21,r6
1000bad0:	a98b803a 	cmpltu	r5,r21,r6
1000bad4:	2d8b883a 	add	r5,r5,r22
1000bad8:	2a11883a 	add	r8,r5,r8
1000badc:	897fffc4 	addi	r5,r17,-1
1000bae0:	b2000c2e 	bgeu	r22,r8,1000bb14 <__divdf3+0x808>
1000bae4:	41003f36 	bltu	r8,r4,1000bbe4 <__divdf3+0x8d8>
1000bae8:	22006c26 	beq	r4,r8,1000bc9c <__divdf3+0x990>
1000baec:	4109c83a 	sub	r4,r8,r4
1000baf0:	2823883a 	mov	r17,r5
1000baf4:	003f3b06 	br	1000b7e4 <__alt_data_end+0xf800b7e4>
1000baf8:	ad3ed336 	bltu	r21,r20,1000b648 <__alt_data_end+0xf800b648>
1000bafc:	a804d07a 	srli	r2,r21,1
1000bb00:	802e97fa 	slli	r23,r16,31
1000bb04:	a82a97fa 	slli	r21,r21,31
1000bb08:	8020d07a 	srli	r16,r16,1
1000bb0c:	b8aeb03a 	or	r23,r23,r2
1000bb10:	003ed006 	br	1000b654 <__alt_data_end+0xf800b654>
1000bb14:	b23ff51e 	bne	r22,r8,1000baec <__alt_data_end+0xf800baec>
1000bb18:	d9800017 	ldw	r6,0(sp)
1000bb1c:	a9bff12e 	bgeu	r21,r6,1000bae4 <__alt_data_end+0xf800bae4>
1000bb20:	b109c83a 	sub	r4,r22,r4
1000bb24:	2823883a 	mov	r17,r5
1000bb28:	003f2e06 	br	1000b7e4 <__alt_data_end+0xf800b7e4>
1000bb2c:	2021883a 	mov	r16,r4
1000bb30:	003eff06 	br	1000b730 <__alt_data_end+0xf800b730>
1000bb34:	2023883a 	mov	r17,r4
1000bb38:	003ee406 	br	1000b6cc <__alt_data_end+0xf800b6cc>
1000bb3c:	a8bfe236 	bltu	r21,r2,1000bac8 <__alt_data_end+0xf800bac8>
1000bb40:	0009883a 	mov	r4,zero
1000bb44:	003f2706 	br	1000b7e4 <__alt_data_end+0xf800b7e4>
1000bb48:	81002d36 	bltu	r16,r4,1000bc00 <__divdf3+0x8f4>
1000bb4c:	24005626 	beq	r4,r16,1000bca8 <__divdf3+0x99c>
1000bb50:	2829883a 	mov	r20,r5
1000bb54:	003f8006 	br	1000b958 <__alt_data_end+0xf800b958>
1000bb58:	053fffc4 	movi	r20,-1
1000bb5c:	003f7f06 	br	1000b95c <__alt_data_end+0xf800b95c>
1000bb60:	200f883a 	mov	r7,r4
1000bb64:	003f3c06 	br	1000b858 <__alt_data_end+0xf800b858>
1000bb68:	1011883a 	mov	r8,r2
1000bb6c:	003f5506 	br	1000b8c4 <__alt_data_end+0xf800b8c4>
1000bb70:	e027883a 	mov	r19,fp
1000bb74:	003f7906 	br	1000b95c <__alt_data_end+0xf800b95c>
1000bb78:	010007c4 	movi	r4,31
1000bb7c:	20c02816 	blt	r4,r3,1000bc20 <__divdf3+0x914>
1000bb80:	00800804 	movi	r2,32
1000bb84:	10c5c83a 	sub	r2,r2,r3
1000bb88:	888a983a 	sll	r5,r17,r2
1000bb8c:	a0c8d83a 	srl	r4,r20,r3
1000bb90:	a084983a 	sll	r2,r20,r2
1000bb94:	88e2d83a 	srl	r17,r17,r3
1000bb98:	2906b03a 	or	r3,r5,r4
1000bb9c:	1004c03a 	cmpne	r2,r2,zero
1000bba0:	1886b03a 	or	r3,r3,r2
1000bba4:	188001cc 	andi	r2,r3,7
1000bba8:	10000726 	beq	r2,zero,1000bbc8 <__divdf3+0x8bc>
1000bbac:	188003cc 	andi	r2,r3,15
1000bbb0:	01000104 	movi	r4,4
1000bbb4:	11000426 	beq	r2,r4,1000bbc8 <__divdf3+0x8bc>
1000bbb8:	1805883a 	mov	r2,r3
1000bbbc:	10c00104 	addi	r3,r2,4
1000bbc0:	1885803a 	cmpltu	r2,r3,r2
1000bbc4:	88a3883a 	add	r17,r17,r2
1000bbc8:	8880202c 	andhi	r2,r17,128
1000bbcc:	10002926 	beq	r2,zero,1000bc74 <__divdf3+0x968>
1000bbd0:	9900004c 	andi	r4,r19,1
1000bbd4:	00800044 	movi	r2,1
1000bbd8:	0021883a 	mov	r16,zero
1000bbdc:	002b883a 	mov	r21,zero
1000bbe0:	003e2906 	br	1000b488 <__alt_data_end+0xf800b488>
1000bbe4:	d9800017 	ldw	r6,0(sp)
1000bbe8:	8c7fff84 	addi	r17,r17,-2
1000bbec:	a9ab883a 	add	r21,r21,r6
1000bbf0:	a98b803a 	cmpltu	r5,r21,r6
1000bbf4:	2d8b883a 	add	r5,r5,r22
1000bbf8:	2a11883a 	add	r8,r5,r8
1000bbfc:	003ef806 	br	1000b7e0 <__alt_data_end+0xf800b7e0>
1000bc00:	d9800017 	ldw	r6,0(sp)
1000bc04:	318f883a 	add	r7,r6,r6
1000bc08:	398b803a 	cmpltu	r5,r7,r6
1000bc0c:	2d8d883a 	add	r6,r5,r22
1000bc10:	81a1883a 	add	r16,r16,r6
1000bc14:	a17fff84 	addi	r5,r20,-2
1000bc18:	d9c00015 	stw	r7,0(sp)
1000bc1c:	003f8806 	br	1000ba40 <__alt_data_end+0xf800ba40>
1000bc20:	013ff844 	movi	r4,-31
1000bc24:	2085c83a 	sub	r2,r4,r2
1000bc28:	8888d83a 	srl	r4,r17,r2
1000bc2c:	00800804 	movi	r2,32
1000bc30:	18802126 	beq	r3,r2,1000bcb8 <__divdf3+0x9ac>
1000bc34:	04001004 	movi	r16,64
1000bc38:	80c7c83a 	sub	r3,r16,r3
1000bc3c:	88e0983a 	sll	r16,r17,r3
1000bc40:	8504b03a 	or	r2,r16,r20
1000bc44:	1004c03a 	cmpne	r2,r2,zero
1000bc48:	2084b03a 	or	r2,r4,r2
1000bc4c:	144001cc 	andi	r17,r2,7
1000bc50:	88000d1e 	bne	r17,zero,1000bc88 <__divdf3+0x97c>
1000bc54:	0021883a 	mov	r16,zero
1000bc58:	102ad0fa 	srli	r21,r2,3
1000bc5c:	9900004c 	andi	r4,r19,1
1000bc60:	0005883a 	mov	r2,zero
1000bc64:	ac6ab03a 	or	r21,r21,r17
1000bc68:	003e0706 	br	1000b488 <__alt_data_end+0xf800b488>
1000bc6c:	1007883a 	mov	r3,r2
1000bc70:	0023883a 	mov	r17,zero
1000bc74:	8820927a 	slli	r16,r17,9
1000bc78:	1805883a 	mov	r2,r3
1000bc7c:	8822977a 	slli	r17,r17,29
1000bc80:	8020d33a 	srli	r16,r16,12
1000bc84:	003ff406 	br	1000bc58 <__alt_data_end+0xf800bc58>
1000bc88:	10c003cc 	andi	r3,r2,15
1000bc8c:	01000104 	movi	r4,4
1000bc90:	193ff626 	beq	r3,r4,1000bc6c <__alt_data_end+0xf800bc6c>
1000bc94:	0023883a 	mov	r17,zero
1000bc98:	003fc806 	br	1000bbbc <__alt_data_end+0xf800bbbc>
1000bc9c:	a8bfd136 	bltu	r21,r2,1000bbe4 <__alt_data_end+0xf800bbe4>
1000bca0:	2823883a 	mov	r17,r5
1000bca4:	003fa606 	br	1000bb40 <__alt_data_end+0xf800bb40>
1000bca8:	d9800017 	ldw	r6,0(sp)
1000bcac:	30bfd436 	bltu	r6,r2,1000bc00 <__alt_data_end+0xf800bc00>
1000bcb0:	2829883a 	mov	r20,r5
1000bcb4:	003f6406 	br	1000ba48 <__alt_data_end+0xf800ba48>
1000bcb8:	0021883a 	mov	r16,zero
1000bcbc:	003fe006 	br	1000bc40 <__alt_data_end+0xf800bc40>
1000bcc0:	00800434 	movhi	r2,16
1000bcc4:	8c000234 	orhi	r16,r17,8
1000bcc8:	10bfffc4 	addi	r2,r2,-1
1000bccc:	e009883a 	mov	r4,fp
1000bcd0:	80a0703a 	and	r16,r16,r2
1000bcd4:	a02b883a 	mov	r21,r20
1000bcd8:	003e4e06 	br	1000b614 <__alt_data_end+0xf800b614>

1000bcdc <__eqdf2>:
1000bcdc:	2804d53a 	srli	r2,r5,20
1000bce0:	3806d53a 	srli	r3,r7,20
1000bce4:	02000434 	movhi	r8,16
1000bce8:	423fffc4 	addi	r8,r8,-1
1000bcec:	1081ffcc 	andi	r2,r2,2047
1000bcf0:	0281ffc4 	movi	r10,2047
1000bcf4:	2a12703a 	and	r9,r5,r8
1000bcf8:	18c1ffcc 	andi	r3,r3,2047
1000bcfc:	3a10703a 	and	r8,r7,r8
1000bd00:	280ad7fa 	srli	r5,r5,31
1000bd04:	380ed7fa 	srli	r7,r7,31
1000bd08:	12801026 	beq	r2,r10,1000bd4c <__eqdf2+0x70>
1000bd0c:	0281ffc4 	movi	r10,2047
1000bd10:	1a800a26 	beq	r3,r10,1000bd3c <__eqdf2+0x60>
1000bd14:	10c00226 	beq	r2,r3,1000bd20 <__eqdf2+0x44>
1000bd18:	00800044 	movi	r2,1
1000bd1c:	f800283a 	ret
1000bd20:	4a3ffd1e 	bne	r9,r8,1000bd18 <__alt_data_end+0xf800bd18>
1000bd24:	21bffc1e 	bne	r4,r6,1000bd18 <__alt_data_end+0xf800bd18>
1000bd28:	29c00c26 	beq	r5,r7,1000bd5c <__eqdf2+0x80>
1000bd2c:	103ffa1e 	bne	r2,zero,1000bd18 <__alt_data_end+0xf800bd18>
1000bd30:	2244b03a 	or	r2,r4,r9
1000bd34:	1004c03a 	cmpne	r2,r2,zero
1000bd38:	f800283a 	ret
1000bd3c:	3214b03a 	or	r10,r6,r8
1000bd40:	503ff426 	beq	r10,zero,1000bd14 <__alt_data_end+0xf800bd14>
1000bd44:	00800044 	movi	r2,1
1000bd48:	f800283a 	ret
1000bd4c:	2254b03a 	or	r10,r4,r9
1000bd50:	503fee26 	beq	r10,zero,1000bd0c <__alt_data_end+0xf800bd0c>
1000bd54:	00800044 	movi	r2,1
1000bd58:	f800283a 	ret
1000bd5c:	0005883a 	mov	r2,zero
1000bd60:	f800283a 	ret

1000bd64 <__gedf2>:
1000bd64:	2804d53a 	srli	r2,r5,20
1000bd68:	3806d53a 	srli	r3,r7,20
1000bd6c:	02000434 	movhi	r8,16
1000bd70:	423fffc4 	addi	r8,r8,-1
1000bd74:	1081ffcc 	andi	r2,r2,2047
1000bd78:	0241ffc4 	movi	r9,2047
1000bd7c:	2a14703a 	and	r10,r5,r8
1000bd80:	18c1ffcc 	andi	r3,r3,2047
1000bd84:	3a10703a 	and	r8,r7,r8
1000bd88:	280ad7fa 	srli	r5,r5,31
1000bd8c:	380ed7fa 	srli	r7,r7,31
1000bd90:	12401d26 	beq	r2,r9,1000be08 <__gedf2+0xa4>
1000bd94:	0241ffc4 	movi	r9,2047
1000bd98:	1a401226 	beq	r3,r9,1000bde4 <__gedf2+0x80>
1000bd9c:	1000081e 	bne	r2,zero,1000bdc0 <__gedf2+0x5c>
1000bda0:	2296b03a 	or	r11,r4,r10
1000bda4:	5813003a 	cmpeq	r9,r11,zero
1000bda8:	1800091e 	bne	r3,zero,1000bdd0 <__gedf2+0x6c>
1000bdac:	3218b03a 	or	r12,r6,r8
1000bdb0:	6000071e 	bne	r12,zero,1000bdd0 <__gedf2+0x6c>
1000bdb4:	0005883a 	mov	r2,zero
1000bdb8:	5800101e 	bne	r11,zero,1000bdfc <__gedf2+0x98>
1000bdbc:	f800283a 	ret
1000bdc0:	18000c1e 	bne	r3,zero,1000bdf4 <__gedf2+0x90>
1000bdc4:	3212b03a 	or	r9,r6,r8
1000bdc8:	48000c26 	beq	r9,zero,1000bdfc <__gedf2+0x98>
1000bdcc:	0013883a 	mov	r9,zero
1000bdd0:	39c03fcc 	andi	r7,r7,255
1000bdd4:	48000826 	beq	r9,zero,1000bdf8 <__gedf2+0x94>
1000bdd8:	38000926 	beq	r7,zero,1000be00 <__gedf2+0x9c>
1000bddc:	00800044 	movi	r2,1
1000bde0:	f800283a 	ret
1000bde4:	3212b03a 	or	r9,r6,r8
1000bde8:	483fec26 	beq	r9,zero,1000bd9c <__alt_data_end+0xf800bd9c>
1000bdec:	00bfff84 	movi	r2,-2
1000bdf0:	f800283a 	ret
1000bdf4:	39c03fcc 	andi	r7,r7,255
1000bdf8:	29c00626 	beq	r5,r7,1000be14 <__gedf2+0xb0>
1000bdfc:	283ff726 	beq	r5,zero,1000bddc <__alt_data_end+0xf800bddc>
1000be00:	00bfffc4 	movi	r2,-1
1000be04:	f800283a 	ret
1000be08:	2292b03a 	or	r9,r4,r10
1000be0c:	483fe126 	beq	r9,zero,1000bd94 <__alt_data_end+0xf800bd94>
1000be10:	003ff606 	br	1000bdec <__alt_data_end+0xf800bdec>
1000be14:	18bff916 	blt	r3,r2,1000bdfc <__alt_data_end+0xf800bdfc>
1000be18:	10c00316 	blt	r2,r3,1000be28 <__gedf2+0xc4>
1000be1c:	42bff736 	bltu	r8,r10,1000bdfc <__alt_data_end+0xf800bdfc>
1000be20:	52000326 	beq	r10,r8,1000be30 <__gedf2+0xcc>
1000be24:	5200042e 	bgeu	r10,r8,1000be38 <__gedf2+0xd4>
1000be28:	283fec1e 	bne	r5,zero,1000bddc <__alt_data_end+0xf800bddc>
1000be2c:	003ff406 	br	1000be00 <__alt_data_end+0xf800be00>
1000be30:	313ff236 	bltu	r6,r4,1000bdfc <__alt_data_end+0xf800bdfc>
1000be34:	21bffc36 	bltu	r4,r6,1000be28 <__alt_data_end+0xf800be28>
1000be38:	0005883a 	mov	r2,zero
1000be3c:	f800283a 	ret

1000be40 <__ledf2>:
1000be40:	2804d53a 	srli	r2,r5,20
1000be44:	3810d53a 	srli	r8,r7,20
1000be48:	00c00434 	movhi	r3,16
1000be4c:	18ffffc4 	addi	r3,r3,-1
1000be50:	1081ffcc 	andi	r2,r2,2047
1000be54:	0241ffc4 	movi	r9,2047
1000be58:	28d4703a 	and	r10,r5,r3
1000be5c:	4201ffcc 	andi	r8,r8,2047
1000be60:	38c6703a 	and	r3,r7,r3
1000be64:	280ad7fa 	srli	r5,r5,31
1000be68:	380ed7fa 	srli	r7,r7,31
1000be6c:	12401f26 	beq	r2,r9,1000beec <__ledf2+0xac>
1000be70:	0241ffc4 	movi	r9,2047
1000be74:	42401426 	beq	r8,r9,1000bec8 <__ledf2+0x88>
1000be78:	1000091e 	bne	r2,zero,1000bea0 <__ledf2+0x60>
1000be7c:	2296b03a 	or	r11,r4,r10
1000be80:	5813003a 	cmpeq	r9,r11,zero
1000be84:	29403fcc 	andi	r5,r5,255
1000be88:	40000a1e 	bne	r8,zero,1000beb4 <__ledf2+0x74>
1000be8c:	30d8b03a 	or	r12,r6,r3
1000be90:	6000081e 	bne	r12,zero,1000beb4 <__ledf2+0x74>
1000be94:	0005883a 	mov	r2,zero
1000be98:	5800111e 	bne	r11,zero,1000bee0 <__ledf2+0xa0>
1000be9c:	f800283a 	ret
1000bea0:	29403fcc 	andi	r5,r5,255
1000bea4:	40000c1e 	bne	r8,zero,1000bed8 <__ledf2+0x98>
1000bea8:	30d2b03a 	or	r9,r6,r3
1000beac:	48000c26 	beq	r9,zero,1000bee0 <__ledf2+0xa0>
1000beb0:	0013883a 	mov	r9,zero
1000beb4:	39c03fcc 	andi	r7,r7,255
1000beb8:	48000826 	beq	r9,zero,1000bedc <__ledf2+0x9c>
1000bebc:	38001126 	beq	r7,zero,1000bf04 <__ledf2+0xc4>
1000bec0:	00800044 	movi	r2,1
1000bec4:	f800283a 	ret
1000bec8:	30d2b03a 	or	r9,r6,r3
1000becc:	483fea26 	beq	r9,zero,1000be78 <__alt_data_end+0xf800be78>
1000bed0:	00800084 	movi	r2,2
1000bed4:	f800283a 	ret
1000bed8:	39c03fcc 	andi	r7,r7,255
1000bedc:	39400726 	beq	r7,r5,1000befc <__ledf2+0xbc>
1000bee0:	2800081e 	bne	r5,zero,1000bf04 <__ledf2+0xc4>
1000bee4:	00800044 	movi	r2,1
1000bee8:	f800283a 	ret
1000beec:	2292b03a 	or	r9,r4,r10
1000bef0:	483fdf26 	beq	r9,zero,1000be70 <__alt_data_end+0xf800be70>
1000bef4:	00800084 	movi	r2,2
1000bef8:	f800283a 	ret
1000befc:	4080030e 	bge	r8,r2,1000bf0c <__ledf2+0xcc>
1000bf00:	383fef26 	beq	r7,zero,1000bec0 <__alt_data_end+0xf800bec0>
1000bf04:	00bfffc4 	movi	r2,-1
1000bf08:	f800283a 	ret
1000bf0c:	123feb16 	blt	r2,r8,1000bebc <__alt_data_end+0xf800bebc>
1000bf10:	1abff336 	bltu	r3,r10,1000bee0 <__alt_data_end+0xf800bee0>
1000bf14:	50c00326 	beq	r10,r3,1000bf24 <__ledf2+0xe4>
1000bf18:	50c0042e 	bgeu	r10,r3,1000bf2c <__ledf2+0xec>
1000bf1c:	283fe81e 	bne	r5,zero,1000bec0 <__alt_data_end+0xf800bec0>
1000bf20:	003ff806 	br	1000bf04 <__alt_data_end+0xf800bf04>
1000bf24:	313fee36 	bltu	r6,r4,1000bee0 <__alt_data_end+0xf800bee0>
1000bf28:	21bffc36 	bltu	r4,r6,1000bf1c <__alt_data_end+0xf800bf1c>
1000bf2c:	0005883a 	mov	r2,zero
1000bf30:	f800283a 	ret

1000bf34 <__muldf3>:
1000bf34:	deffee04 	addi	sp,sp,-72
1000bf38:	dd000c15 	stw	r20,48(sp)
1000bf3c:	2828d53a 	srli	r20,r5,20
1000bf40:	ddc00f15 	stw	r23,60(sp)
1000bf44:	282ed7fa 	srli	r23,r5,31
1000bf48:	dc000815 	stw	r16,32(sp)
1000bf4c:	04000434 	movhi	r16,16
1000bf50:	dcc00b15 	stw	r19,44(sp)
1000bf54:	843fffc4 	addi	r16,r16,-1
1000bf58:	dfc01115 	stw	ra,68(sp)
1000bf5c:	df001015 	stw	fp,64(sp)
1000bf60:	dd800e15 	stw	r22,56(sp)
1000bf64:	dd400d15 	stw	r21,52(sp)
1000bf68:	dc800a15 	stw	r18,40(sp)
1000bf6c:	dc400915 	stw	r17,36(sp)
1000bf70:	a501ffcc 	andi	r20,r20,2047
1000bf74:	2c20703a 	and	r16,r5,r16
1000bf78:	b827883a 	mov	r19,r23
1000bf7c:	ba403fcc 	andi	r9,r23,255
1000bf80:	a0006026 	beq	r20,zero,1000c104 <__muldf3+0x1d0>
1000bf84:	0081ffc4 	movi	r2,2047
1000bf88:	202d883a 	mov	r22,r4
1000bf8c:	a0803626 	beq	r20,r2,1000c068 <__muldf3+0x134>
1000bf90:	84000434 	orhi	r16,r16,16
1000bf94:	200ad77a 	srli	r5,r4,29
1000bf98:	800490fa 	slli	r2,r16,3
1000bf9c:	202c90fa 	slli	r22,r4,3
1000bfa0:	a53f0044 	addi	r20,r20,-1023
1000bfa4:	28a0b03a 	or	r16,r5,r2
1000bfa8:	002b883a 	mov	r21,zero
1000bfac:	000b883a 	mov	r5,zero
1000bfb0:	3804d53a 	srli	r2,r7,20
1000bfb4:	3838d7fa 	srli	fp,r7,31
1000bfb8:	04400434 	movhi	r17,16
1000bfbc:	8c7fffc4 	addi	r17,r17,-1
1000bfc0:	1081ffcc 	andi	r2,r2,2047
1000bfc4:	3025883a 	mov	r18,r6
1000bfc8:	3c62703a 	and	r17,r7,r17
1000bfcc:	e2803fcc 	andi	r10,fp,255
1000bfd0:	10006d26 	beq	r2,zero,1000c188 <__muldf3+0x254>
1000bfd4:	00c1ffc4 	movi	r3,2047
1000bfd8:	10c06526 	beq	r2,r3,1000c170 <__muldf3+0x23c>
1000bfdc:	8c400434 	orhi	r17,r17,16
1000bfe0:	300ed77a 	srli	r7,r6,29
1000bfe4:	880690fa 	slli	r3,r17,3
1000bfe8:	302490fa 	slli	r18,r6,3
1000bfec:	10bf0044 	addi	r2,r2,-1023
1000bff0:	38e2b03a 	or	r17,r7,r3
1000bff4:	000f883a 	mov	r7,zero
1000bff8:	a087883a 	add	r3,r20,r2
1000bffc:	010003c4 	movi	r4,15
1000c000:	3d44b03a 	or	r2,r7,r21
1000c004:	e5ccf03a 	xor	r6,fp,r23
1000c008:	1a000044 	addi	r8,r3,1
1000c00c:	20809b36 	bltu	r4,r2,1000c27c <__muldf3+0x348>
1000c010:	100490ba 	slli	r2,r2,2
1000c014:	01040074 	movhi	r4,4097
1000c018:	21300a04 	addi	r4,r4,-16344
1000c01c:	1105883a 	add	r2,r2,r4
1000c020:	10800017 	ldw	r2,0(r2)
1000c024:	1000683a 	jmp	r2
1000c028:	1000c27c 	xorhi	zero,r2,777
1000c02c:	1000c088 	cmpgei	zero,r2,770
1000c030:	1000c088 	cmpgei	zero,r2,770
1000c034:	1000c084 	addi	zero,r2,770
1000c038:	1000c258 	cmpnei	zero,r2,777
1000c03c:	1000c258 	cmpnei	zero,r2,777
1000c040:	1000c240 	call	11000c24 <_gp+0xfe74d0>
1000c044:	1000c084 	addi	zero,r2,770
1000c048:	1000c258 	cmpnei	zero,r2,777
1000c04c:	1000c240 	call	11000c24 <_gp+0xfe74d0>
1000c050:	1000c258 	cmpnei	zero,r2,777
1000c054:	1000c084 	addi	zero,r2,770
1000c058:	1000c268 	cmpgeui	zero,r2,777
1000c05c:	1000c268 	cmpgeui	zero,r2,777
1000c060:	1000c268 	cmpgeui	zero,r2,777
1000c064:	1000c5c8 	cmpgei	zero,r2,791
1000c068:	2404b03a 	or	r2,r4,r16
1000c06c:	1000711e 	bne	r2,zero,1000c234 <__muldf3+0x300>
1000c070:	05400204 	movi	r21,8
1000c074:	0021883a 	mov	r16,zero
1000c078:	002d883a 	mov	r22,zero
1000c07c:	01400084 	movi	r5,2
1000c080:	003fcb06 	br	1000bfb0 <__alt_data_end+0xf800bfb0>
1000c084:	500d883a 	mov	r6,r10
1000c088:	00800084 	movi	r2,2
1000c08c:	38805926 	beq	r7,r2,1000c1f4 <__muldf3+0x2c0>
1000c090:	008000c4 	movi	r2,3
1000c094:	3881bb26 	beq	r7,r2,1000c784 <__muldf3+0x850>
1000c098:	00800044 	movi	r2,1
1000c09c:	3881961e 	bne	r7,r2,1000c6f8 <__muldf3+0x7c4>
1000c0a0:	3027883a 	mov	r19,r6
1000c0a4:	0005883a 	mov	r2,zero
1000c0a8:	0021883a 	mov	r16,zero
1000c0ac:	002d883a 	mov	r22,zero
1000c0b0:	1004953a 	slli	r2,r2,20
1000c0b4:	98c03fcc 	andi	r3,r19,255
1000c0b8:	04400434 	movhi	r17,16
1000c0bc:	8c7fffc4 	addi	r17,r17,-1
1000c0c0:	180697fa 	slli	r3,r3,31
1000c0c4:	8460703a 	and	r16,r16,r17
1000c0c8:	80a0b03a 	or	r16,r16,r2
1000c0cc:	80c6b03a 	or	r3,r16,r3
1000c0d0:	b005883a 	mov	r2,r22
1000c0d4:	dfc01117 	ldw	ra,68(sp)
1000c0d8:	df001017 	ldw	fp,64(sp)
1000c0dc:	ddc00f17 	ldw	r23,60(sp)
1000c0e0:	dd800e17 	ldw	r22,56(sp)
1000c0e4:	dd400d17 	ldw	r21,52(sp)
1000c0e8:	dd000c17 	ldw	r20,48(sp)
1000c0ec:	dcc00b17 	ldw	r19,44(sp)
1000c0f0:	dc800a17 	ldw	r18,40(sp)
1000c0f4:	dc400917 	ldw	r17,36(sp)
1000c0f8:	dc000817 	ldw	r16,32(sp)
1000c0fc:	dec01204 	addi	sp,sp,72
1000c100:	f800283a 	ret
1000c104:	2404b03a 	or	r2,r4,r16
1000c108:	202b883a 	mov	r21,r4
1000c10c:	10004426 	beq	r2,zero,1000c220 <__muldf3+0x2ec>
1000c110:	80015126 	beq	r16,zero,1000c658 <__muldf3+0x724>
1000c114:	8009883a 	mov	r4,r16
1000c118:	d9800715 	stw	r6,28(sp)
1000c11c:	d9c00215 	stw	r7,8(sp)
1000c120:	da400415 	stw	r9,16(sp)
1000c124:	000d2a00 	call	1000d2a0 <__clzsi2>
1000c128:	d9800717 	ldw	r6,28(sp)
1000c12c:	d9c00217 	ldw	r7,8(sp)
1000c130:	da400417 	ldw	r9,16(sp)
1000c134:	113ffd44 	addi	r4,r2,-11
1000c138:	00c00704 	movi	r3,28
1000c13c:	19014216 	blt	r3,r4,1000c648 <__muldf3+0x714>
1000c140:	00c00744 	movi	r3,29
1000c144:	15bffe04 	addi	r22,r2,-8
1000c148:	1907c83a 	sub	r3,r3,r4
1000c14c:	85a0983a 	sll	r16,r16,r22
1000c150:	a8c6d83a 	srl	r3,r21,r3
1000c154:	adac983a 	sll	r22,r21,r22
1000c158:	1c20b03a 	or	r16,r3,r16
1000c15c:	1080fcc4 	addi	r2,r2,1011
1000c160:	00a9c83a 	sub	r20,zero,r2
1000c164:	002b883a 	mov	r21,zero
1000c168:	000b883a 	mov	r5,zero
1000c16c:	003f9006 	br	1000bfb0 <__alt_data_end+0xf800bfb0>
1000c170:	3446b03a 	or	r3,r6,r17
1000c174:	1800281e 	bne	r3,zero,1000c218 <__muldf3+0x2e4>
1000c178:	0023883a 	mov	r17,zero
1000c17c:	0025883a 	mov	r18,zero
1000c180:	01c00084 	movi	r7,2
1000c184:	003f9c06 	br	1000bff8 <__alt_data_end+0xf800bff8>
1000c188:	3446b03a 	or	r3,r6,r17
1000c18c:	18001e26 	beq	r3,zero,1000c208 <__muldf3+0x2d4>
1000c190:	88012126 	beq	r17,zero,1000c618 <__muldf3+0x6e4>
1000c194:	8809883a 	mov	r4,r17
1000c198:	d9400215 	stw	r5,8(sp)
1000c19c:	d9800715 	stw	r6,28(sp)
1000c1a0:	da400415 	stw	r9,16(sp)
1000c1a4:	da800315 	stw	r10,12(sp)
1000c1a8:	000d2a00 	call	1000d2a0 <__clzsi2>
1000c1ac:	d9400217 	ldw	r5,8(sp)
1000c1b0:	d9800717 	ldw	r6,28(sp)
1000c1b4:	da400417 	ldw	r9,16(sp)
1000c1b8:	da800317 	ldw	r10,12(sp)
1000c1bc:	113ffd44 	addi	r4,r2,-11
1000c1c0:	00c00704 	movi	r3,28
1000c1c4:	19011016 	blt	r3,r4,1000c608 <__muldf3+0x6d4>
1000c1c8:	00c00744 	movi	r3,29
1000c1cc:	14bffe04 	addi	r18,r2,-8
1000c1d0:	1907c83a 	sub	r3,r3,r4
1000c1d4:	8ca2983a 	sll	r17,r17,r18
1000c1d8:	30c6d83a 	srl	r3,r6,r3
1000c1dc:	34a4983a 	sll	r18,r6,r18
1000c1e0:	1c62b03a 	or	r17,r3,r17
1000c1e4:	1080fcc4 	addi	r2,r2,1011
1000c1e8:	0085c83a 	sub	r2,zero,r2
1000c1ec:	000f883a 	mov	r7,zero
1000c1f0:	003f8106 	br	1000bff8 <__alt_data_end+0xf800bff8>
1000c1f4:	3027883a 	mov	r19,r6
1000c1f8:	0081ffc4 	movi	r2,2047
1000c1fc:	0021883a 	mov	r16,zero
1000c200:	002d883a 	mov	r22,zero
1000c204:	003faa06 	br	1000c0b0 <__alt_data_end+0xf800c0b0>
1000c208:	0023883a 	mov	r17,zero
1000c20c:	0025883a 	mov	r18,zero
1000c210:	01c00044 	movi	r7,1
1000c214:	003f7806 	br	1000bff8 <__alt_data_end+0xf800bff8>
1000c218:	01c000c4 	movi	r7,3
1000c21c:	003f7606 	br	1000bff8 <__alt_data_end+0xf800bff8>
1000c220:	05400104 	movi	r21,4
1000c224:	0021883a 	mov	r16,zero
1000c228:	002d883a 	mov	r22,zero
1000c22c:	01400044 	movi	r5,1
1000c230:	003f5f06 	br	1000bfb0 <__alt_data_end+0xf800bfb0>
1000c234:	05400304 	movi	r21,12
1000c238:	014000c4 	movi	r5,3
1000c23c:	003f5c06 	br	1000bfb0 <__alt_data_end+0xf800bfb0>
1000c240:	04000434 	movhi	r16,16
1000c244:	0027883a 	mov	r19,zero
1000c248:	843fffc4 	addi	r16,r16,-1
1000c24c:	05bfffc4 	movi	r22,-1
1000c250:	0081ffc4 	movi	r2,2047
1000c254:	003f9606 	br	1000c0b0 <__alt_data_end+0xf800c0b0>
1000c258:	8023883a 	mov	r17,r16
1000c25c:	b025883a 	mov	r18,r22
1000c260:	280f883a 	mov	r7,r5
1000c264:	003f8806 	br	1000c088 <__alt_data_end+0xf800c088>
1000c268:	8023883a 	mov	r17,r16
1000c26c:	b025883a 	mov	r18,r22
1000c270:	480d883a 	mov	r6,r9
1000c274:	280f883a 	mov	r7,r5
1000c278:	003f8306 	br	1000c088 <__alt_data_end+0xf800c088>
1000c27c:	b026d43a 	srli	r19,r22,16
1000c280:	902ed43a 	srli	r23,r18,16
1000c284:	b5bfffcc 	andi	r22,r22,65535
1000c288:	94bfffcc 	andi	r18,r18,65535
1000c28c:	b00b883a 	mov	r5,r22
1000c290:	9009883a 	mov	r4,r18
1000c294:	d8c00515 	stw	r3,20(sp)
1000c298:	d9800715 	stw	r6,28(sp)
1000c29c:	da000615 	stw	r8,24(sp)
1000c2a0:	000aa380 	call	1000aa38 <__mulsi3>
1000c2a4:	980b883a 	mov	r5,r19
1000c2a8:	9009883a 	mov	r4,r18
1000c2ac:	1029883a 	mov	r20,r2
1000c2b0:	000aa380 	call	1000aa38 <__mulsi3>
1000c2b4:	b80b883a 	mov	r5,r23
1000c2b8:	9809883a 	mov	r4,r19
1000c2bc:	102b883a 	mov	r21,r2
1000c2c0:	000aa380 	call	1000aa38 <__mulsi3>
1000c2c4:	b809883a 	mov	r4,r23
1000c2c8:	b00b883a 	mov	r5,r22
1000c2cc:	1039883a 	mov	fp,r2
1000c2d0:	000aa380 	call	1000aa38 <__mulsi3>
1000c2d4:	a008d43a 	srli	r4,r20,16
1000c2d8:	1545883a 	add	r2,r2,r21
1000c2dc:	d8c00517 	ldw	r3,20(sp)
1000c2e0:	2085883a 	add	r2,r4,r2
1000c2e4:	d9800717 	ldw	r6,28(sp)
1000c2e8:	da000617 	ldw	r8,24(sp)
1000c2ec:	1540022e 	bgeu	r2,r21,1000c2f8 <__muldf3+0x3c4>
1000c2f0:	01000074 	movhi	r4,1
1000c2f4:	e139883a 	add	fp,fp,r4
1000c2f8:	100e943a 	slli	r7,r2,16
1000c2fc:	1004d43a 	srli	r2,r2,16
1000c300:	882ad43a 	srli	r21,r17,16
1000c304:	a53fffcc 	andi	r20,r20,65535
1000c308:	8c7fffcc 	andi	r17,r17,65535
1000c30c:	3d29883a 	add	r20,r7,r20
1000c310:	b00b883a 	mov	r5,r22
1000c314:	8809883a 	mov	r4,r17
1000c318:	d8c00515 	stw	r3,20(sp)
1000c31c:	d9800715 	stw	r6,28(sp)
1000c320:	da000615 	stw	r8,24(sp)
1000c324:	dd000115 	stw	r20,4(sp)
1000c328:	d8800015 	stw	r2,0(sp)
1000c32c:	000aa380 	call	1000aa38 <__mulsi3>
1000c330:	980b883a 	mov	r5,r19
1000c334:	8809883a 	mov	r4,r17
1000c338:	d8800215 	stw	r2,8(sp)
1000c33c:	000aa380 	call	1000aa38 <__mulsi3>
1000c340:	9809883a 	mov	r4,r19
1000c344:	a80b883a 	mov	r5,r21
1000c348:	1029883a 	mov	r20,r2
1000c34c:	000aa380 	call	1000aa38 <__mulsi3>
1000c350:	b00b883a 	mov	r5,r22
1000c354:	a809883a 	mov	r4,r21
1000c358:	d8800415 	stw	r2,16(sp)
1000c35c:	000aa380 	call	1000aa38 <__mulsi3>
1000c360:	d9c00217 	ldw	r7,8(sp)
1000c364:	1505883a 	add	r2,r2,r20
1000c368:	d8c00517 	ldw	r3,20(sp)
1000c36c:	3826d43a 	srli	r19,r7,16
1000c370:	d9800717 	ldw	r6,28(sp)
1000c374:	da000617 	ldw	r8,24(sp)
1000c378:	9885883a 	add	r2,r19,r2
1000c37c:	da400417 	ldw	r9,16(sp)
1000c380:	1500022e 	bgeu	r2,r20,1000c38c <__muldf3+0x458>
1000c384:	01000074 	movhi	r4,1
1000c388:	4913883a 	add	r9,r9,r4
1000c38c:	1028d43a 	srli	r20,r2,16
1000c390:	1004943a 	slli	r2,r2,16
1000c394:	802cd43a 	srli	r22,r16,16
1000c398:	843fffcc 	andi	r16,r16,65535
1000c39c:	3cffffcc 	andi	r19,r7,65535
1000c3a0:	9009883a 	mov	r4,r18
1000c3a4:	800b883a 	mov	r5,r16
1000c3a8:	a269883a 	add	r20,r20,r9
1000c3ac:	d8c00515 	stw	r3,20(sp)
1000c3b0:	d9800715 	stw	r6,28(sp)
1000c3b4:	da000615 	stw	r8,24(sp)
1000c3b8:	14e7883a 	add	r19,r2,r19
1000c3bc:	000aa380 	call	1000aa38 <__mulsi3>
1000c3c0:	9009883a 	mov	r4,r18
1000c3c4:	b00b883a 	mov	r5,r22
1000c3c8:	d8800315 	stw	r2,12(sp)
1000c3cc:	000aa380 	call	1000aa38 <__mulsi3>
1000c3d0:	b809883a 	mov	r4,r23
1000c3d4:	b00b883a 	mov	r5,r22
1000c3d8:	d8800215 	stw	r2,8(sp)
1000c3dc:	000aa380 	call	1000aa38 <__mulsi3>
1000c3e0:	b80b883a 	mov	r5,r23
1000c3e4:	8009883a 	mov	r4,r16
1000c3e8:	d8800415 	stw	r2,16(sp)
1000c3ec:	000aa380 	call	1000aa38 <__mulsi3>
1000c3f0:	da800317 	ldw	r10,12(sp)
1000c3f4:	d9c00217 	ldw	r7,8(sp)
1000c3f8:	d9000017 	ldw	r4,0(sp)
1000c3fc:	502ed43a 	srli	r23,r10,16
1000c400:	11c5883a 	add	r2,r2,r7
1000c404:	24e5883a 	add	r18,r4,r19
1000c408:	b885883a 	add	r2,r23,r2
1000c40c:	d8c00517 	ldw	r3,20(sp)
1000c410:	d9800717 	ldw	r6,28(sp)
1000c414:	da000617 	ldw	r8,24(sp)
1000c418:	da400417 	ldw	r9,16(sp)
1000c41c:	11c0022e 	bgeu	r2,r7,1000c428 <__muldf3+0x4f4>
1000c420:	01000074 	movhi	r4,1
1000c424:	4913883a 	add	r9,r9,r4
1000c428:	100ed43a 	srli	r7,r2,16
1000c42c:	1004943a 	slli	r2,r2,16
1000c430:	55ffffcc 	andi	r23,r10,65535
1000c434:	3a53883a 	add	r9,r7,r9
1000c438:	8809883a 	mov	r4,r17
1000c43c:	800b883a 	mov	r5,r16
1000c440:	d8c00515 	stw	r3,20(sp)
1000c444:	d9800715 	stw	r6,28(sp)
1000c448:	da000615 	stw	r8,24(sp)
1000c44c:	da400415 	stw	r9,16(sp)
1000c450:	15ef883a 	add	r23,r2,r23
1000c454:	000aa380 	call	1000aa38 <__mulsi3>
1000c458:	8809883a 	mov	r4,r17
1000c45c:	b00b883a 	mov	r5,r22
1000c460:	d8800215 	stw	r2,8(sp)
1000c464:	000aa380 	call	1000aa38 <__mulsi3>
1000c468:	b00b883a 	mov	r5,r22
1000c46c:	a809883a 	mov	r4,r21
1000c470:	d8800315 	stw	r2,12(sp)
1000c474:	000aa380 	call	1000aa38 <__mulsi3>
1000c478:	8009883a 	mov	r4,r16
1000c47c:	a80b883a 	mov	r5,r21
1000c480:	1023883a 	mov	r17,r2
1000c484:	000aa380 	call	1000aa38 <__mulsi3>
1000c488:	d9c00217 	ldw	r7,8(sp)
1000c48c:	da800317 	ldw	r10,12(sp)
1000c490:	d8c00517 	ldw	r3,20(sp)
1000c494:	3808d43a 	srli	r4,r7,16
1000c498:	1285883a 	add	r2,r2,r10
1000c49c:	d9800717 	ldw	r6,28(sp)
1000c4a0:	2085883a 	add	r2,r4,r2
1000c4a4:	da000617 	ldw	r8,24(sp)
1000c4a8:	da400417 	ldw	r9,16(sp)
1000c4ac:	1280022e 	bgeu	r2,r10,1000c4b8 <__muldf3+0x584>
1000c4b0:	01000074 	movhi	r4,1
1000c4b4:	8923883a 	add	r17,r17,r4
1000c4b8:	1008943a 	slli	r4,r2,16
1000c4bc:	39ffffcc 	andi	r7,r7,65535
1000c4c0:	e4b9883a 	add	fp,fp,r18
1000c4c4:	21cf883a 	add	r7,r4,r7
1000c4c8:	e4e7803a 	cmpltu	r19,fp,r19
1000c4cc:	3d0f883a 	add	r7,r7,r20
1000c4d0:	bf39883a 	add	fp,r23,fp
1000c4d4:	99c9883a 	add	r4,r19,r7
1000c4d8:	e5ef803a 	cmpltu	r23,fp,r23
1000c4dc:	490b883a 	add	r5,r9,r4
1000c4e0:	1004d43a 	srli	r2,r2,16
1000c4e4:	b965883a 	add	r18,r23,r5
1000c4e8:	24c9803a 	cmpltu	r4,r4,r19
1000c4ec:	3d29803a 	cmpltu	r20,r7,r20
1000c4f0:	a128b03a 	or	r20,r20,r4
1000c4f4:	95ef803a 	cmpltu	r23,r18,r23
1000c4f8:	2a53803a 	cmpltu	r9,r5,r9
1000c4fc:	a0a9883a 	add	r20,r20,r2
1000c500:	4deeb03a 	or	r23,r9,r23
1000c504:	a5ef883a 	add	r23,r20,r23
1000c508:	bc63883a 	add	r17,r23,r17
1000c50c:	e004927a 	slli	r2,fp,9
1000c510:	d9000117 	ldw	r4,4(sp)
1000c514:	882e927a 	slli	r23,r17,9
1000c518:	9022d5fa 	srli	r17,r18,23
1000c51c:	e038d5fa 	srli	fp,fp,23
1000c520:	1104b03a 	or	r2,r2,r4
1000c524:	9024927a 	slli	r18,r18,9
1000c528:	1004c03a 	cmpne	r2,r2,zero
1000c52c:	bc62b03a 	or	r17,r23,r17
1000c530:	1738b03a 	or	fp,r2,fp
1000c534:	8880402c 	andhi	r2,r17,256
1000c538:	e4a4b03a 	or	r18,fp,r18
1000c53c:	10000726 	beq	r2,zero,1000c55c <__muldf3+0x628>
1000c540:	9006d07a 	srli	r3,r18,1
1000c544:	880497fa 	slli	r2,r17,31
1000c548:	9480004c 	andi	r18,r18,1
1000c54c:	8822d07a 	srli	r17,r17,1
1000c550:	1ca4b03a 	or	r18,r3,r18
1000c554:	14a4b03a 	or	r18,r2,r18
1000c558:	4007883a 	mov	r3,r8
1000c55c:	1880ffc4 	addi	r2,r3,1023
1000c560:	0080460e 	bge	zero,r2,1000c67c <__muldf3+0x748>
1000c564:	910001cc 	andi	r4,r18,7
1000c568:	20000726 	beq	r4,zero,1000c588 <__muldf3+0x654>
1000c56c:	910003cc 	andi	r4,r18,15
1000c570:	01400104 	movi	r5,4
1000c574:	21400426 	beq	r4,r5,1000c588 <__muldf3+0x654>
1000c578:	9149883a 	add	r4,r18,r5
1000c57c:	24a5803a 	cmpltu	r18,r4,r18
1000c580:	8ca3883a 	add	r17,r17,r18
1000c584:	2025883a 	mov	r18,r4
1000c588:	8900402c 	andhi	r4,r17,256
1000c58c:	20000426 	beq	r4,zero,1000c5a0 <__muldf3+0x66c>
1000c590:	18810004 	addi	r2,r3,1024
1000c594:	00ffc034 	movhi	r3,65280
1000c598:	18ffffc4 	addi	r3,r3,-1
1000c59c:	88e2703a 	and	r17,r17,r3
1000c5a0:	00c1ff84 	movi	r3,2046
1000c5a4:	18bf1316 	blt	r3,r2,1000c1f4 <__alt_data_end+0xf800c1f4>
1000c5a8:	882c977a 	slli	r22,r17,29
1000c5ac:	9024d0fa 	srli	r18,r18,3
1000c5b0:	8822927a 	slli	r17,r17,9
1000c5b4:	1081ffcc 	andi	r2,r2,2047
1000c5b8:	b4acb03a 	or	r22,r22,r18
1000c5bc:	8820d33a 	srli	r16,r17,12
1000c5c0:	3027883a 	mov	r19,r6
1000c5c4:	003eba06 	br	1000c0b0 <__alt_data_end+0xf800c0b0>
1000c5c8:	8080022c 	andhi	r2,r16,8
1000c5cc:	10000926 	beq	r2,zero,1000c5f4 <__muldf3+0x6c0>
1000c5d0:	8880022c 	andhi	r2,r17,8
1000c5d4:	1000071e 	bne	r2,zero,1000c5f4 <__muldf3+0x6c0>
1000c5d8:	00800434 	movhi	r2,16
1000c5dc:	8c000234 	orhi	r16,r17,8
1000c5e0:	10bfffc4 	addi	r2,r2,-1
1000c5e4:	e027883a 	mov	r19,fp
1000c5e8:	80a0703a 	and	r16,r16,r2
1000c5ec:	902d883a 	mov	r22,r18
1000c5f0:	003f1706 	br	1000c250 <__alt_data_end+0xf800c250>
1000c5f4:	00800434 	movhi	r2,16
1000c5f8:	84000234 	orhi	r16,r16,8
1000c5fc:	10bfffc4 	addi	r2,r2,-1
1000c600:	80a0703a 	and	r16,r16,r2
1000c604:	003f1206 	br	1000c250 <__alt_data_end+0xf800c250>
1000c608:	147ff604 	addi	r17,r2,-40
1000c60c:	3462983a 	sll	r17,r6,r17
1000c610:	0025883a 	mov	r18,zero
1000c614:	003ef306 	br	1000c1e4 <__alt_data_end+0xf800c1e4>
1000c618:	3009883a 	mov	r4,r6
1000c61c:	d9400215 	stw	r5,8(sp)
1000c620:	d9800715 	stw	r6,28(sp)
1000c624:	da400415 	stw	r9,16(sp)
1000c628:	da800315 	stw	r10,12(sp)
1000c62c:	000d2a00 	call	1000d2a0 <__clzsi2>
1000c630:	10800804 	addi	r2,r2,32
1000c634:	da800317 	ldw	r10,12(sp)
1000c638:	da400417 	ldw	r9,16(sp)
1000c63c:	d9800717 	ldw	r6,28(sp)
1000c640:	d9400217 	ldw	r5,8(sp)
1000c644:	003edd06 	br	1000c1bc <__alt_data_end+0xf800c1bc>
1000c648:	143ff604 	addi	r16,r2,-40
1000c64c:	ac20983a 	sll	r16,r21,r16
1000c650:	002d883a 	mov	r22,zero
1000c654:	003ec106 	br	1000c15c <__alt_data_end+0xf800c15c>
1000c658:	d9800715 	stw	r6,28(sp)
1000c65c:	d9c00215 	stw	r7,8(sp)
1000c660:	da400415 	stw	r9,16(sp)
1000c664:	000d2a00 	call	1000d2a0 <__clzsi2>
1000c668:	10800804 	addi	r2,r2,32
1000c66c:	da400417 	ldw	r9,16(sp)
1000c670:	d9c00217 	ldw	r7,8(sp)
1000c674:	d9800717 	ldw	r6,28(sp)
1000c678:	003eae06 	br	1000c134 <__alt_data_end+0xf800c134>
1000c67c:	00c00044 	movi	r3,1
1000c680:	1887c83a 	sub	r3,r3,r2
1000c684:	01000e04 	movi	r4,56
1000c688:	20fe8516 	blt	r4,r3,1000c0a0 <__alt_data_end+0xf800c0a0>
1000c68c:	010007c4 	movi	r4,31
1000c690:	20c01b16 	blt	r4,r3,1000c700 <__muldf3+0x7cc>
1000c694:	00800804 	movi	r2,32
1000c698:	10c5c83a 	sub	r2,r2,r3
1000c69c:	888a983a 	sll	r5,r17,r2
1000c6a0:	90c8d83a 	srl	r4,r18,r3
1000c6a4:	9084983a 	sll	r2,r18,r2
1000c6a8:	88e2d83a 	srl	r17,r17,r3
1000c6ac:	2906b03a 	or	r3,r5,r4
1000c6b0:	1004c03a 	cmpne	r2,r2,zero
1000c6b4:	1886b03a 	or	r3,r3,r2
1000c6b8:	188001cc 	andi	r2,r3,7
1000c6bc:	10000726 	beq	r2,zero,1000c6dc <__muldf3+0x7a8>
1000c6c0:	188003cc 	andi	r2,r3,15
1000c6c4:	01000104 	movi	r4,4
1000c6c8:	11000426 	beq	r2,r4,1000c6dc <__muldf3+0x7a8>
1000c6cc:	1805883a 	mov	r2,r3
1000c6d0:	10c00104 	addi	r3,r2,4
1000c6d4:	1885803a 	cmpltu	r2,r3,r2
1000c6d8:	88a3883a 	add	r17,r17,r2
1000c6dc:	8880202c 	andhi	r2,r17,128
1000c6e0:	10001c26 	beq	r2,zero,1000c754 <__muldf3+0x820>
1000c6e4:	3027883a 	mov	r19,r6
1000c6e8:	00800044 	movi	r2,1
1000c6ec:	0021883a 	mov	r16,zero
1000c6f0:	002d883a 	mov	r22,zero
1000c6f4:	003e6e06 	br	1000c0b0 <__alt_data_end+0xf800c0b0>
1000c6f8:	4007883a 	mov	r3,r8
1000c6fc:	003f9706 	br	1000c55c <__alt_data_end+0xf800c55c>
1000c700:	017ff844 	movi	r5,-31
1000c704:	2885c83a 	sub	r2,r5,r2
1000c708:	888ad83a 	srl	r5,r17,r2
1000c70c:	00800804 	movi	r2,32
1000c710:	18801a26 	beq	r3,r2,1000c77c <__muldf3+0x848>
1000c714:	01001004 	movi	r4,64
1000c718:	20c7c83a 	sub	r3,r4,r3
1000c71c:	88e2983a 	sll	r17,r17,r3
1000c720:	8ca4b03a 	or	r18,r17,r18
1000c724:	9004c03a 	cmpne	r2,r18,zero
1000c728:	2884b03a 	or	r2,r5,r2
1000c72c:	144001cc 	andi	r17,r2,7
1000c730:	88000d1e 	bne	r17,zero,1000c768 <__muldf3+0x834>
1000c734:	0021883a 	mov	r16,zero
1000c738:	102cd0fa 	srli	r22,r2,3
1000c73c:	3027883a 	mov	r19,r6
1000c740:	0005883a 	mov	r2,zero
1000c744:	b46cb03a 	or	r22,r22,r17
1000c748:	003e5906 	br	1000c0b0 <__alt_data_end+0xf800c0b0>
1000c74c:	1007883a 	mov	r3,r2
1000c750:	0023883a 	mov	r17,zero
1000c754:	8820927a 	slli	r16,r17,9
1000c758:	1805883a 	mov	r2,r3
1000c75c:	8822977a 	slli	r17,r17,29
1000c760:	8020d33a 	srli	r16,r16,12
1000c764:	003ff406 	br	1000c738 <__alt_data_end+0xf800c738>
1000c768:	10c003cc 	andi	r3,r2,15
1000c76c:	01000104 	movi	r4,4
1000c770:	193ff626 	beq	r3,r4,1000c74c <__alt_data_end+0xf800c74c>
1000c774:	0023883a 	mov	r17,zero
1000c778:	003fd506 	br	1000c6d0 <__alt_data_end+0xf800c6d0>
1000c77c:	0023883a 	mov	r17,zero
1000c780:	003fe706 	br	1000c720 <__alt_data_end+0xf800c720>
1000c784:	00800434 	movhi	r2,16
1000c788:	8c000234 	orhi	r16,r17,8
1000c78c:	10bfffc4 	addi	r2,r2,-1
1000c790:	3027883a 	mov	r19,r6
1000c794:	80a0703a 	and	r16,r16,r2
1000c798:	902d883a 	mov	r22,r18
1000c79c:	003eac06 	br	1000c250 <__alt_data_end+0xf800c250>

1000c7a0 <__subdf3>:
1000c7a0:	02000434 	movhi	r8,16
1000c7a4:	423fffc4 	addi	r8,r8,-1
1000c7a8:	defffb04 	addi	sp,sp,-20
1000c7ac:	2a14703a 	and	r10,r5,r8
1000c7b0:	3812d53a 	srli	r9,r7,20
1000c7b4:	3a10703a 	and	r8,r7,r8
1000c7b8:	2006d77a 	srli	r3,r4,29
1000c7bc:	3004d77a 	srli	r2,r6,29
1000c7c0:	dc000015 	stw	r16,0(sp)
1000c7c4:	501490fa 	slli	r10,r10,3
1000c7c8:	2820d53a 	srli	r16,r5,20
1000c7cc:	401090fa 	slli	r8,r8,3
1000c7d0:	dc800215 	stw	r18,8(sp)
1000c7d4:	dc400115 	stw	r17,4(sp)
1000c7d8:	dfc00415 	stw	ra,16(sp)
1000c7dc:	202290fa 	slli	r17,r4,3
1000c7e0:	dcc00315 	stw	r19,12(sp)
1000c7e4:	4a41ffcc 	andi	r9,r9,2047
1000c7e8:	0101ffc4 	movi	r4,2047
1000c7ec:	2824d7fa 	srli	r18,r5,31
1000c7f0:	8401ffcc 	andi	r16,r16,2047
1000c7f4:	50c6b03a 	or	r3,r10,r3
1000c7f8:	380ed7fa 	srli	r7,r7,31
1000c7fc:	408ab03a 	or	r5,r8,r2
1000c800:	300c90fa 	slli	r6,r6,3
1000c804:	49009626 	beq	r9,r4,1000ca60 <__subdf3+0x2c0>
1000c808:	39c0005c 	xori	r7,r7,1
1000c80c:	8245c83a 	sub	r2,r16,r9
1000c810:	3c807426 	beq	r7,r18,1000c9e4 <__subdf3+0x244>
1000c814:	0080af0e 	bge	zero,r2,1000cad4 <__subdf3+0x334>
1000c818:	48002a1e 	bne	r9,zero,1000c8c4 <__subdf3+0x124>
1000c81c:	2988b03a 	or	r4,r5,r6
1000c820:	20009a1e 	bne	r4,zero,1000ca8c <__subdf3+0x2ec>
1000c824:	888001cc 	andi	r2,r17,7
1000c828:	10000726 	beq	r2,zero,1000c848 <__subdf3+0xa8>
1000c82c:	888003cc 	andi	r2,r17,15
1000c830:	01000104 	movi	r4,4
1000c834:	11000426 	beq	r2,r4,1000c848 <__subdf3+0xa8>
1000c838:	890b883a 	add	r5,r17,r4
1000c83c:	2c63803a 	cmpltu	r17,r5,r17
1000c840:	1c47883a 	add	r3,r3,r17
1000c844:	2823883a 	mov	r17,r5
1000c848:	1880202c 	andhi	r2,r3,128
1000c84c:	10005926 	beq	r2,zero,1000c9b4 <__subdf3+0x214>
1000c850:	84000044 	addi	r16,r16,1
1000c854:	0081ffc4 	movi	r2,2047
1000c858:	8080be26 	beq	r16,r2,1000cb54 <__subdf3+0x3b4>
1000c85c:	017fe034 	movhi	r5,65408
1000c860:	297fffc4 	addi	r5,r5,-1
1000c864:	1946703a 	and	r3,r3,r5
1000c868:	1804977a 	slli	r2,r3,29
1000c86c:	1806927a 	slli	r3,r3,9
1000c870:	8822d0fa 	srli	r17,r17,3
1000c874:	8401ffcc 	andi	r16,r16,2047
1000c878:	180ad33a 	srli	r5,r3,12
1000c87c:	9100004c 	andi	r4,r18,1
1000c880:	1444b03a 	or	r2,r2,r17
1000c884:	80c1ffcc 	andi	r3,r16,2047
1000c888:	1820953a 	slli	r16,r3,20
1000c88c:	20c03fcc 	andi	r3,r4,255
1000c890:	180897fa 	slli	r4,r3,31
1000c894:	00c00434 	movhi	r3,16
1000c898:	18ffffc4 	addi	r3,r3,-1
1000c89c:	28c6703a 	and	r3,r5,r3
1000c8a0:	1c06b03a 	or	r3,r3,r16
1000c8a4:	1906b03a 	or	r3,r3,r4
1000c8a8:	dfc00417 	ldw	ra,16(sp)
1000c8ac:	dcc00317 	ldw	r19,12(sp)
1000c8b0:	dc800217 	ldw	r18,8(sp)
1000c8b4:	dc400117 	ldw	r17,4(sp)
1000c8b8:	dc000017 	ldw	r16,0(sp)
1000c8bc:	dec00504 	addi	sp,sp,20
1000c8c0:	f800283a 	ret
1000c8c4:	0101ffc4 	movi	r4,2047
1000c8c8:	813fd626 	beq	r16,r4,1000c824 <__alt_data_end+0xf800c824>
1000c8cc:	29402034 	orhi	r5,r5,128
1000c8d0:	01000e04 	movi	r4,56
1000c8d4:	2080a316 	blt	r4,r2,1000cb64 <__subdf3+0x3c4>
1000c8d8:	010007c4 	movi	r4,31
1000c8dc:	2080c616 	blt	r4,r2,1000cbf8 <__subdf3+0x458>
1000c8e0:	01000804 	movi	r4,32
1000c8e4:	2089c83a 	sub	r4,r4,r2
1000c8e8:	2910983a 	sll	r8,r5,r4
1000c8ec:	308ed83a 	srl	r7,r6,r2
1000c8f0:	3108983a 	sll	r4,r6,r4
1000c8f4:	2884d83a 	srl	r2,r5,r2
1000c8f8:	41ccb03a 	or	r6,r8,r7
1000c8fc:	2008c03a 	cmpne	r4,r4,zero
1000c900:	310cb03a 	or	r6,r6,r4
1000c904:	898dc83a 	sub	r6,r17,r6
1000c908:	89a3803a 	cmpltu	r17,r17,r6
1000c90c:	1887c83a 	sub	r3,r3,r2
1000c910:	1c47c83a 	sub	r3,r3,r17
1000c914:	3023883a 	mov	r17,r6
1000c918:	1880202c 	andhi	r2,r3,128
1000c91c:	10002326 	beq	r2,zero,1000c9ac <__subdf3+0x20c>
1000c920:	04c02034 	movhi	r19,128
1000c924:	9cffffc4 	addi	r19,r19,-1
1000c928:	1ce6703a 	and	r19,r3,r19
1000c92c:	98007a26 	beq	r19,zero,1000cb18 <__subdf3+0x378>
1000c930:	9809883a 	mov	r4,r19
1000c934:	000d2a00 	call	1000d2a0 <__clzsi2>
1000c938:	113ffe04 	addi	r4,r2,-8
1000c93c:	00c007c4 	movi	r3,31
1000c940:	19007b16 	blt	r3,r4,1000cb30 <__subdf3+0x390>
1000c944:	00800804 	movi	r2,32
1000c948:	1105c83a 	sub	r2,r2,r4
1000c94c:	8884d83a 	srl	r2,r17,r2
1000c950:	9906983a 	sll	r3,r19,r4
1000c954:	8922983a 	sll	r17,r17,r4
1000c958:	10c4b03a 	or	r2,r2,r3
1000c95c:	24007816 	blt	r4,r16,1000cb40 <__subdf3+0x3a0>
1000c960:	2421c83a 	sub	r16,r4,r16
1000c964:	80c00044 	addi	r3,r16,1
1000c968:	010007c4 	movi	r4,31
1000c96c:	20c09516 	blt	r4,r3,1000cbc4 <__subdf3+0x424>
1000c970:	01400804 	movi	r5,32
1000c974:	28cbc83a 	sub	r5,r5,r3
1000c978:	88c8d83a 	srl	r4,r17,r3
1000c97c:	8962983a 	sll	r17,r17,r5
1000c980:	114a983a 	sll	r5,r2,r5
1000c984:	10c6d83a 	srl	r3,r2,r3
1000c988:	8804c03a 	cmpne	r2,r17,zero
1000c98c:	290ab03a 	or	r5,r5,r4
1000c990:	28a2b03a 	or	r17,r5,r2
1000c994:	0021883a 	mov	r16,zero
1000c998:	003fa206 	br	1000c824 <__alt_data_end+0xf800c824>
1000c99c:	2090b03a 	or	r8,r4,r2
1000c9a0:	40018e26 	beq	r8,zero,1000cfdc <__subdf3+0x83c>
1000c9a4:	1007883a 	mov	r3,r2
1000c9a8:	2023883a 	mov	r17,r4
1000c9ac:	888001cc 	andi	r2,r17,7
1000c9b0:	103f9e1e 	bne	r2,zero,1000c82c <__alt_data_end+0xf800c82c>
1000c9b4:	1804977a 	slli	r2,r3,29
1000c9b8:	8822d0fa 	srli	r17,r17,3
1000c9bc:	1810d0fa 	srli	r8,r3,3
1000c9c0:	9100004c 	andi	r4,r18,1
1000c9c4:	1444b03a 	or	r2,r2,r17
1000c9c8:	00c1ffc4 	movi	r3,2047
1000c9cc:	80c02826 	beq	r16,r3,1000ca70 <__subdf3+0x2d0>
1000c9d0:	01400434 	movhi	r5,16
1000c9d4:	297fffc4 	addi	r5,r5,-1
1000c9d8:	80e0703a 	and	r16,r16,r3
1000c9dc:	414a703a 	and	r5,r8,r5
1000c9e0:	003fa806 	br	1000c884 <__alt_data_end+0xf800c884>
1000c9e4:	0080630e 	bge	zero,r2,1000cb74 <__subdf3+0x3d4>
1000c9e8:	48003026 	beq	r9,zero,1000caac <__subdf3+0x30c>
1000c9ec:	0101ffc4 	movi	r4,2047
1000c9f0:	813f8c26 	beq	r16,r4,1000c824 <__alt_data_end+0xf800c824>
1000c9f4:	29402034 	orhi	r5,r5,128
1000c9f8:	01000e04 	movi	r4,56
1000c9fc:	2080a90e 	bge	r4,r2,1000cca4 <__subdf3+0x504>
1000ca00:	298cb03a 	or	r6,r5,r6
1000ca04:	3012c03a 	cmpne	r9,r6,zero
1000ca08:	0005883a 	mov	r2,zero
1000ca0c:	4c53883a 	add	r9,r9,r17
1000ca10:	4c63803a 	cmpltu	r17,r9,r17
1000ca14:	10c7883a 	add	r3,r2,r3
1000ca18:	88c7883a 	add	r3,r17,r3
1000ca1c:	4823883a 	mov	r17,r9
1000ca20:	1880202c 	andhi	r2,r3,128
1000ca24:	1000d026 	beq	r2,zero,1000cd68 <__subdf3+0x5c8>
1000ca28:	84000044 	addi	r16,r16,1
1000ca2c:	0081ffc4 	movi	r2,2047
1000ca30:	8080fe26 	beq	r16,r2,1000ce2c <__subdf3+0x68c>
1000ca34:	00bfe034 	movhi	r2,65408
1000ca38:	10bfffc4 	addi	r2,r2,-1
1000ca3c:	1886703a 	and	r3,r3,r2
1000ca40:	880ad07a 	srli	r5,r17,1
1000ca44:	180497fa 	slli	r2,r3,31
1000ca48:	8900004c 	andi	r4,r17,1
1000ca4c:	2922b03a 	or	r17,r5,r4
1000ca50:	1806d07a 	srli	r3,r3,1
1000ca54:	1462b03a 	or	r17,r2,r17
1000ca58:	3825883a 	mov	r18,r7
1000ca5c:	003f7106 	br	1000c824 <__alt_data_end+0xf800c824>
1000ca60:	2984b03a 	or	r2,r5,r6
1000ca64:	103f6826 	beq	r2,zero,1000c808 <__alt_data_end+0xf800c808>
1000ca68:	39c03fcc 	andi	r7,r7,255
1000ca6c:	003f6706 	br	1000c80c <__alt_data_end+0xf800c80c>
1000ca70:	4086b03a 	or	r3,r8,r2
1000ca74:	18015226 	beq	r3,zero,1000cfc0 <__subdf3+0x820>
1000ca78:	00c00434 	movhi	r3,16
1000ca7c:	41400234 	orhi	r5,r8,8
1000ca80:	18ffffc4 	addi	r3,r3,-1
1000ca84:	28ca703a 	and	r5,r5,r3
1000ca88:	003f7e06 	br	1000c884 <__alt_data_end+0xf800c884>
1000ca8c:	10bfffc4 	addi	r2,r2,-1
1000ca90:	1000491e 	bne	r2,zero,1000cbb8 <__subdf3+0x418>
1000ca94:	898fc83a 	sub	r7,r17,r6
1000ca98:	89e3803a 	cmpltu	r17,r17,r7
1000ca9c:	1947c83a 	sub	r3,r3,r5
1000caa0:	1c47c83a 	sub	r3,r3,r17
1000caa4:	3823883a 	mov	r17,r7
1000caa8:	003f9b06 	br	1000c918 <__alt_data_end+0xf800c918>
1000caac:	2988b03a 	or	r4,r5,r6
1000cab0:	203f5c26 	beq	r4,zero,1000c824 <__alt_data_end+0xf800c824>
1000cab4:	10bfffc4 	addi	r2,r2,-1
1000cab8:	1000931e 	bne	r2,zero,1000cd08 <__subdf3+0x568>
1000cabc:	898d883a 	add	r6,r17,r6
1000cac0:	3463803a 	cmpltu	r17,r6,r17
1000cac4:	1947883a 	add	r3,r3,r5
1000cac8:	88c7883a 	add	r3,r17,r3
1000cacc:	3023883a 	mov	r17,r6
1000cad0:	003fd306 	br	1000ca20 <__alt_data_end+0xf800ca20>
1000cad4:	1000541e 	bne	r2,zero,1000cc28 <__subdf3+0x488>
1000cad8:	80800044 	addi	r2,r16,1
1000cadc:	1081ffcc 	andi	r2,r2,2047
1000cae0:	01000044 	movi	r4,1
1000cae4:	2080a20e 	bge	r4,r2,1000cd70 <__subdf3+0x5d0>
1000cae8:	8989c83a 	sub	r4,r17,r6
1000caec:	8905803a 	cmpltu	r2,r17,r4
1000caf0:	1967c83a 	sub	r19,r3,r5
1000caf4:	98a7c83a 	sub	r19,r19,r2
1000caf8:	9880202c 	andhi	r2,r19,128
1000cafc:	10006326 	beq	r2,zero,1000cc8c <__subdf3+0x4ec>
1000cb00:	3463c83a 	sub	r17,r6,r17
1000cb04:	28c7c83a 	sub	r3,r5,r3
1000cb08:	344d803a 	cmpltu	r6,r6,r17
1000cb0c:	19a7c83a 	sub	r19,r3,r6
1000cb10:	3825883a 	mov	r18,r7
1000cb14:	983f861e 	bne	r19,zero,1000c930 <__alt_data_end+0xf800c930>
1000cb18:	8809883a 	mov	r4,r17
1000cb1c:	000d2a00 	call	1000d2a0 <__clzsi2>
1000cb20:	10800804 	addi	r2,r2,32
1000cb24:	113ffe04 	addi	r4,r2,-8
1000cb28:	00c007c4 	movi	r3,31
1000cb2c:	193f850e 	bge	r3,r4,1000c944 <__alt_data_end+0xf800c944>
1000cb30:	10bff604 	addi	r2,r2,-40
1000cb34:	8884983a 	sll	r2,r17,r2
1000cb38:	0023883a 	mov	r17,zero
1000cb3c:	243f880e 	bge	r4,r16,1000c960 <__alt_data_end+0xf800c960>
1000cb40:	00ffe034 	movhi	r3,65408
1000cb44:	18ffffc4 	addi	r3,r3,-1
1000cb48:	8121c83a 	sub	r16,r16,r4
1000cb4c:	10c6703a 	and	r3,r2,r3
1000cb50:	003f3406 	br	1000c824 <__alt_data_end+0xf800c824>
1000cb54:	9100004c 	andi	r4,r18,1
1000cb58:	000b883a 	mov	r5,zero
1000cb5c:	0005883a 	mov	r2,zero
1000cb60:	003f4806 	br	1000c884 <__alt_data_end+0xf800c884>
1000cb64:	298cb03a 	or	r6,r5,r6
1000cb68:	300cc03a 	cmpne	r6,r6,zero
1000cb6c:	0005883a 	mov	r2,zero
1000cb70:	003f6406 	br	1000c904 <__alt_data_end+0xf800c904>
1000cb74:	10009a1e 	bne	r2,zero,1000cde0 <__subdf3+0x640>
1000cb78:	82400044 	addi	r9,r16,1
1000cb7c:	4881ffcc 	andi	r2,r9,2047
1000cb80:	02800044 	movi	r10,1
1000cb84:	5080670e 	bge	r10,r2,1000cd24 <__subdf3+0x584>
1000cb88:	0081ffc4 	movi	r2,2047
1000cb8c:	4880af26 	beq	r9,r2,1000ce4c <__subdf3+0x6ac>
1000cb90:	898d883a 	add	r6,r17,r6
1000cb94:	1945883a 	add	r2,r3,r5
1000cb98:	3447803a 	cmpltu	r3,r6,r17
1000cb9c:	1887883a 	add	r3,r3,r2
1000cba0:	182297fa 	slli	r17,r3,31
1000cba4:	300cd07a 	srli	r6,r6,1
1000cba8:	1806d07a 	srli	r3,r3,1
1000cbac:	4821883a 	mov	r16,r9
1000cbb0:	89a2b03a 	or	r17,r17,r6
1000cbb4:	003f1b06 	br	1000c824 <__alt_data_end+0xf800c824>
1000cbb8:	0101ffc4 	movi	r4,2047
1000cbbc:	813f441e 	bne	r16,r4,1000c8d0 <__alt_data_end+0xf800c8d0>
1000cbc0:	003f1806 	br	1000c824 <__alt_data_end+0xf800c824>
1000cbc4:	843ff844 	addi	r16,r16,-31
1000cbc8:	01400804 	movi	r5,32
1000cbcc:	1408d83a 	srl	r4,r2,r16
1000cbd0:	19405026 	beq	r3,r5,1000cd14 <__subdf3+0x574>
1000cbd4:	01401004 	movi	r5,64
1000cbd8:	28c7c83a 	sub	r3,r5,r3
1000cbdc:	10c4983a 	sll	r2,r2,r3
1000cbe0:	88a2b03a 	or	r17,r17,r2
1000cbe4:	8822c03a 	cmpne	r17,r17,zero
1000cbe8:	2462b03a 	or	r17,r4,r17
1000cbec:	0007883a 	mov	r3,zero
1000cbf0:	0021883a 	mov	r16,zero
1000cbf4:	003f6d06 	br	1000c9ac <__alt_data_end+0xf800c9ac>
1000cbf8:	11fff804 	addi	r7,r2,-32
1000cbfc:	01000804 	movi	r4,32
1000cc00:	29ced83a 	srl	r7,r5,r7
1000cc04:	11004526 	beq	r2,r4,1000cd1c <__subdf3+0x57c>
1000cc08:	01001004 	movi	r4,64
1000cc0c:	2089c83a 	sub	r4,r4,r2
1000cc10:	2904983a 	sll	r2,r5,r4
1000cc14:	118cb03a 	or	r6,r2,r6
1000cc18:	300cc03a 	cmpne	r6,r6,zero
1000cc1c:	398cb03a 	or	r6,r7,r6
1000cc20:	0005883a 	mov	r2,zero
1000cc24:	003f3706 	br	1000c904 <__alt_data_end+0xf800c904>
1000cc28:	80002a26 	beq	r16,zero,1000ccd4 <__subdf3+0x534>
1000cc2c:	0101ffc4 	movi	r4,2047
1000cc30:	49006626 	beq	r9,r4,1000cdcc <__subdf3+0x62c>
1000cc34:	0085c83a 	sub	r2,zero,r2
1000cc38:	18c02034 	orhi	r3,r3,128
1000cc3c:	01000e04 	movi	r4,56
1000cc40:	20807e16 	blt	r4,r2,1000ce3c <__subdf3+0x69c>
1000cc44:	010007c4 	movi	r4,31
1000cc48:	2080e716 	blt	r4,r2,1000cfe8 <__subdf3+0x848>
1000cc4c:	01000804 	movi	r4,32
1000cc50:	2089c83a 	sub	r4,r4,r2
1000cc54:	1914983a 	sll	r10,r3,r4
1000cc58:	8890d83a 	srl	r8,r17,r2
1000cc5c:	8908983a 	sll	r4,r17,r4
1000cc60:	1884d83a 	srl	r2,r3,r2
1000cc64:	5222b03a 	or	r17,r10,r8
1000cc68:	2006c03a 	cmpne	r3,r4,zero
1000cc6c:	88e2b03a 	or	r17,r17,r3
1000cc70:	3463c83a 	sub	r17,r6,r17
1000cc74:	2885c83a 	sub	r2,r5,r2
1000cc78:	344d803a 	cmpltu	r6,r6,r17
1000cc7c:	1187c83a 	sub	r3,r2,r6
1000cc80:	4821883a 	mov	r16,r9
1000cc84:	3825883a 	mov	r18,r7
1000cc88:	003f2306 	br	1000c918 <__alt_data_end+0xf800c918>
1000cc8c:	24d0b03a 	or	r8,r4,r19
1000cc90:	40001b1e 	bne	r8,zero,1000cd00 <__subdf3+0x560>
1000cc94:	0005883a 	mov	r2,zero
1000cc98:	0009883a 	mov	r4,zero
1000cc9c:	0021883a 	mov	r16,zero
1000cca0:	003f4906 	br	1000c9c8 <__alt_data_end+0xf800c9c8>
1000cca4:	010007c4 	movi	r4,31
1000cca8:	20803a16 	blt	r4,r2,1000cd94 <__subdf3+0x5f4>
1000ccac:	01000804 	movi	r4,32
1000ccb0:	2089c83a 	sub	r4,r4,r2
1000ccb4:	2912983a 	sll	r9,r5,r4
1000ccb8:	3090d83a 	srl	r8,r6,r2
1000ccbc:	3108983a 	sll	r4,r6,r4
1000ccc0:	2884d83a 	srl	r2,r5,r2
1000ccc4:	4a12b03a 	or	r9,r9,r8
1000ccc8:	2008c03a 	cmpne	r4,r4,zero
1000cccc:	4912b03a 	or	r9,r9,r4
1000ccd0:	003f4e06 	br	1000ca0c <__alt_data_end+0xf800ca0c>
1000ccd4:	1c48b03a 	or	r4,r3,r17
1000ccd8:	20003c26 	beq	r4,zero,1000cdcc <__subdf3+0x62c>
1000ccdc:	0084303a 	nor	r2,zero,r2
1000cce0:	1000381e 	bne	r2,zero,1000cdc4 <__subdf3+0x624>
1000cce4:	3463c83a 	sub	r17,r6,r17
1000cce8:	28c5c83a 	sub	r2,r5,r3
1000ccec:	344d803a 	cmpltu	r6,r6,r17
1000ccf0:	1187c83a 	sub	r3,r2,r6
1000ccf4:	4821883a 	mov	r16,r9
1000ccf8:	3825883a 	mov	r18,r7
1000ccfc:	003f0606 	br	1000c918 <__alt_data_end+0xf800c918>
1000cd00:	2023883a 	mov	r17,r4
1000cd04:	003f0906 	br	1000c92c <__alt_data_end+0xf800c92c>
1000cd08:	0101ffc4 	movi	r4,2047
1000cd0c:	813f3a1e 	bne	r16,r4,1000c9f8 <__alt_data_end+0xf800c9f8>
1000cd10:	003ec406 	br	1000c824 <__alt_data_end+0xf800c824>
1000cd14:	0005883a 	mov	r2,zero
1000cd18:	003fb106 	br	1000cbe0 <__alt_data_end+0xf800cbe0>
1000cd1c:	0005883a 	mov	r2,zero
1000cd20:	003fbc06 	br	1000cc14 <__alt_data_end+0xf800cc14>
1000cd24:	1c44b03a 	or	r2,r3,r17
1000cd28:	80008e1e 	bne	r16,zero,1000cf64 <__subdf3+0x7c4>
1000cd2c:	1000c826 	beq	r2,zero,1000d050 <__subdf3+0x8b0>
1000cd30:	2984b03a 	or	r2,r5,r6
1000cd34:	103ebb26 	beq	r2,zero,1000c824 <__alt_data_end+0xf800c824>
1000cd38:	8989883a 	add	r4,r17,r6
1000cd3c:	1945883a 	add	r2,r3,r5
1000cd40:	2447803a 	cmpltu	r3,r4,r17
1000cd44:	1887883a 	add	r3,r3,r2
1000cd48:	1880202c 	andhi	r2,r3,128
1000cd4c:	2023883a 	mov	r17,r4
1000cd50:	103f1626 	beq	r2,zero,1000c9ac <__alt_data_end+0xf800c9ac>
1000cd54:	00bfe034 	movhi	r2,65408
1000cd58:	10bfffc4 	addi	r2,r2,-1
1000cd5c:	5021883a 	mov	r16,r10
1000cd60:	1886703a 	and	r3,r3,r2
1000cd64:	003eaf06 	br	1000c824 <__alt_data_end+0xf800c824>
1000cd68:	3825883a 	mov	r18,r7
1000cd6c:	003f0f06 	br	1000c9ac <__alt_data_end+0xf800c9ac>
1000cd70:	1c44b03a 	or	r2,r3,r17
1000cd74:	8000251e 	bne	r16,zero,1000ce0c <__subdf3+0x66c>
1000cd78:	1000661e 	bne	r2,zero,1000cf14 <__subdf3+0x774>
1000cd7c:	2990b03a 	or	r8,r5,r6
1000cd80:	40009626 	beq	r8,zero,1000cfdc <__subdf3+0x83c>
1000cd84:	2807883a 	mov	r3,r5
1000cd88:	3023883a 	mov	r17,r6
1000cd8c:	3825883a 	mov	r18,r7
1000cd90:	003ea406 	br	1000c824 <__alt_data_end+0xf800c824>
1000cd94:	127ff804 	addi	r9,r2,-32
1000cd98:	01000804 	movi	r4,32
1000cd9c:	2a52d83a 	srl	r9,r5,r9
1000cda0:	11008c26 	beq	r2,r4,1000cfd4 <__subdf3+0x834>
1000cda4:	01001004 	movi	r4,64
1000cda8:	2085c83a 	sub	r2,r4,r2
1000cdac:	2884983a 	sll	r2,r5,r2
1000cdb0:	118cb03a 	or	r6,r2,r6
1000cdb4:	300cc03a 	cmpne	r6,r6,zero
1000cdb8:	4992b03a 	or	r9,r9,r6
1000cdbc:	0005883a 	mov	r2,zero
1000cdc0:	003f1206 	br	1000ca0c <__alt_data_end+0xf800ca0c>
1000cdc4:	0101ffc4 	movi	r4,2047
1000cdc8:	493f9c1e 	bne	r9,r4,1000cc3c <__alt_data_end+0xf800cc3c>
1000cdcc:	2807883a 	mov	r3,r5
1000cdd0:	3023883a 	mov	r17,r6
1000cdd4:	4821883a 	mov	r16,r9
1000cdd8:	3825883a 	mov	r18,r7
1000cddc:	003e9106 	br	1000c824 <__alt_data_end+0xf800c824>
1000cde0:	80001f1e 	bne	r16,zero,1000ce60 <__subdf3+0x6c0>
1000cde4:	1c48b03a 	or	r4,r3,r17
1000cde8:	20005a26 	beq	r4,zero,1000cf54 <__subdf3+0x7b4>
1000cdec:	0084303a 	nor	r2,zero,r2
1000cdf0:	1000561e 	bne	r2,zero,1000cf4c <__subdf3+0x7ac>
1000cdf4:	89a3883a 	add	r17,r17,r6
1000cdf8:	1945883a 	add	r2,r3,r5
1000cdfc:	898d803a 	cmpltu	r6,r17,r6
1000ce00:	3087883a 	add	r3,r6,r2
1000ce04:	4821883a 	mov	r16,r9
1000ce08:	003f0506 	br	1000ca20 <__alt_data_end+0xf800ca20>
1000ce0c:	10002b1e 	bne	r2,zero,1000cebc <__subdf3+0x71c>
1000ce10:	2984b03a 	or	r2,r5,r6
1000ce14:	10008026 	beq	r2,zero,1000d018 <__subdf3+0x878>
1000ce18:	2807883a 	mov	r3,r5
1000ce1c:	3023883a 	mov	r17,r6
1000ce20:	3825883a 	mov	r18,r7
1000ce24:	0401ffc4 	movi	r16,2047
1000ce28:	003e7e06 	br	1000c824 <__alt_data_end+0xf800c824>
1000ce2c:	3809883a 	mov	r4,r7
1000ce30:	0011883a 	mov	r8,zero
1000ce34:	0005883a 	mov	r2,zero
1000ce38:	003ee306 	br	1000c9c8 <__alt_data_end+0xf800c9c8>
1000ce3c:	1c62b03a 	or	r17,r3,r17
1000ce40:	8822c03a 	cmpne	r17,r17,zero
1000ce44:	0005883a 	mov	r2,zero
1000ce48:	003f8906 	br	1000cc70 <__alt_data_end+0xf800cc70>
1000ce4c:	3809883a 	mov	r4,r7
1000ce50:	4821883a 	mov	r16,r9
1000ce54:	0011883a 	mov	r8,zero
1000ce58:	0005883a 	mov	r2,zero
1000ce5c:	003eda06 	br	1000c9c8 <__alt_data_end+0xf800c9c8>
1000ce60:	0101ffc4 	movi	r4,2047
1000ce64:	49003b26 	beq	r9,r4,1000cf54 <__subdf3+0x7b4>
1000ce68:	0085c83a 	sub	r2,zero,r2
1000ce6c:	18c02034 	orhi	r3,r3,128
1000ce70:	01000e04 	movi	r4,56
1000ce74:	20806e16 	blt	r4,r2,1000d030 <__subdf3+0x890>
1000ce78:	010007c4 	movi	r4,31
1000ce7c:	20807716 	blt	r4,r2,1000d05c <__subdf3+0x8bc>
1000ce80:	01000804 	movi	r4,32
1000ce84:	2089c83a 	sub	r4,r4,r2
1000ce88:	1914983a 	sll	r10,r3,r4
1000ce8c:	8890d83a 	srl	r8,r17,r2
1000ce90:	8908983a 	sll	r4,r17,r4
1000ce94:	1884d83a 	srl	r2,r3,r2
1000ce98:	5222b03a 	or	r17,r10,r8
1000ce9c:	2006c03a 	cmpne	r3,r4,zero
1000cea0:	88e2b03a 	or	r17,r17,r3
1000cea4:	89a3883a 	add	r17,r17,r6
1000cea8:	1145883a 	add	r2,r2,r5
1000ceac:	898d803a 	cmpltu	r6,r17,r6
1000ceb0:	3087883a 	add	r3,r6,r2
1000ceb4:	4821883a 	mov	r16,r9
1000ceb8:	003ed906 	br	1000ca20 <__alt_data_end+0xf800ca20>
1000cebc:	2984b03a 	or	r2,r5,r6
1000cec0:	10004226 	beq	r2,zero,1000cfcc <__subdf3+0x82c>
1000cec4:	1808d0fa 	srli	r4,r3,3
1000cec8:	8822d0fa 	srli	r17,r17,3
1000cecc:	1806977a 	slli	r3,r3,29
1000ced0:	2080022c 	andhi	r2,r4,8
1000ced4:	1c62b03a 	or	r17,r3,r17
1000ced8:	10000826 	beq	r2,zero,1000cefc <__subdf3+0x75c>
1000cedc:	2812d0fa 	srli	r9,r5,3
1000cee0:	4880022c 	andhi	r2,r9,8
1000cee4:	1000051e 	bne	r2,zero,1000cefc <__subdf3+0x75c>
1000cee8:	300cd0fa 	srli	r6,r6,3
1000ceec:	2804977a 	slli	r2,r5,29
1000cef0:	4809883a 	mov	r4,r9
1000cef4:	3825883a 	mov	r18,r7
1000cef8:	11a2b03a 	or	r17,r2,r6
1000cefc:	8806d77a 	srli	r3,r17,29
1000cf00:	200890fa 	slli	r4,r4,3
1000cf04:	882290fa 	slli	r17,r17,3
1000cf08:	0401ffc4 	movi	r16,2047
1000cf0c:	1906b03a 	or	r3,r3,r4
1000cf10:	003e4406 	br	1000c824 <__alt_data_end+0xf800c824>
1000cf14:	2984b03a 	or	r2,r5,r6
1000cf18:	103e4226 	beq	r2,zero,1000c824 <__alt_data_end+0xf800c824>
1000cf1c:	8989c83a 	sub	r4,r17,r6
1000cf20:	8911803a 	cmpltu	r8,r17,r4
1000cf24:	1945c83a 	sub	r2,r3,r5
1000cf28:	1205c83a 	sub	r2,r2,r8
1000cf2c:	1200202c 	andhi	r8,r2,128
1000cf30:	403e9a26 	beq	r8,zero,1000c99c <__alt_data_end+0xf800c99c>
1000cf34:	3463c83a 	sub	r17,r6,r17
1000cf38:	28c5c83a 	sub	r2,r5,r3
1000cf3c:	344d803a 	cmpltu	r6,r6,r17
1000cf40:	1187c83a 	sub	r3,r2,r6
1000cf44:	3825883a 	mov	r18,r7
1000cf48:	003e3606 	br	1000c824 <__alt_data_end+0xf800c824>
1000cf4c:	0101ffc4 	movi	r4,2047
1000cf50:	493fc71e 	bne	r9,r4,1000ce70 <__alt_data_end+0xf800ce70>
1000cf54:	2807883a 	mov	r3,r5
1000cf58:	3023883a 	mov	r17,r6
1000cf5c:	4821883a 	mov	r16,r9
1000cf60:	003e3006 	br	1000c824 <__alt_data_end+0xf800c824>
1000cf64:	10003626 	beq	r2,zero,1000d040 <__subdf3+0x8a0>
1000cf68:	2984b03a 	or	r2,r5,r6
1000cf6c:	10001726 	beq	r2,zero,1000cfcc <__subdf3+0x82c>
1000cf70:	1808d0fa 	srli	r4,r3,3
1000cf74:	8822d0fa 	srli	r17,r17,3
1000cf78:	1806977a 	slli	r3,r3,29
1000cf7c:	2080022c 	andhi	r2,r4,8
1000cf80:	1c62b03a 	or	r17,r3,r17
1000cf84:	10000726 	beq	r2,zero,1000cfa4 <__subdf3+0x804>
1000cf88:	2812d0fa 	srli	r9,r5,3
1000cf8c:	4880022c 	andhi	r2,r9,8
1000cf90:	1000041e 	bne	r2,zero,1000cfa4 <__subdf3+0x804>
1000cf94:	300cd0fa 	srli	r6,r6,3
1000cf98:	2804977a 	slli	r2,r5,29
1000cf9c:	4809883a 	mov	r4,r9
1000cfa0:	11a2b03a 	or	r17,r2,r6
1000cfa4:	8806d77a 	srli	r3,r17,29
1000cfa8:	200890fa 	slli	r4,r4,3
1000cfac:	882290fa 	slli	r17,r17,3
1000cfb0:	3825883a 	mov	r18,r7
1000cfb4:	1906b03a 	or	r3,r3,r4
1000cfb8:	0401ffc4 	movi	r16,2047
1000cfbc:	003e1906 	br	1000c824 <__alt_data_end+0xf800c824>
1000cfc0:	000b883a 	mov	r5,zero
1000cfc4:	0005883a 	mov	r2,zero
1000cfc8:	003e2e06 	br	1000c884 <__alt_data_end+0xf800c884>
1000cfcc:	0401ffc4 	movi	r16,2047
1000cfd0:	003e1406 	br	1000c824 <__alt_data_end+0xf800c824>
1000cfd4:	0005883a 	mov	r2,zero
1000cfd8:	003f7506 	br	1000cdb0 <__alt_data_end+0xf800cdb0>
1000cfdc:	0005883a 	mov	r2,zero
1000cfe0:	0009883a 	mov	r4,zero
1000cfe4:	003e7806 	br	1000c9c8 <__alt_data_end+0xf800c9c8>
1000cfe8:	123ff804 	addi	r8,r2,-32
1000cfec:	01000804 	movi	r4,32
1000cff0:	1a10d83a 	srl	r8,r3,r8
1000cff4:	11002526 	beq	r2,r4,1000d08c <__subdf3+0x8ec>
1000cff8:	01001004 	movi	r4,64
1000cffc:	2085c83a 	sub	r2,r4,r2
1000d000:	1884983a 	sll	r2,r3,r2
1000d004:	1444b03a 	or	r2,r2,r17
1000d008:	1004c03a 	cmpne	r2,r2,zero
1000d00c:	40a2b03a 	or	r17,r8,r2
1000d010:	0005883a 	mov	r2,zero
1000d014:	003f1606 	br	1000cc70 <__alt_data_end+0xf800cc70>
1000d018:	02000434 	movhi	r8,16
1000d01c:	0009883a 	mov	r4,zero
1000d020:	423fffc4 	addi	r8,r8,-1
1000d024:	00bfffc4 	movi	r2,-1
1000d028:	0401ffc4 	movi	r16,2047
1000d02c:	003e6606 	br	1000c9c8 <__alt_data_end+0xf800c9c8>
1000d030:	1c62b03a 	or	r17,r3,r17
1000d034:	8822c03a 	cmpne	r17,r17,zero
1000d038:	0005883a 	mov	r2,zero
1000d03c:	003f9906 	br	1000cea4 <__alt_data_end+0xf800cea4>
1000d040:	2807883a 	mov	r3,r5
1000d044:	3023883a 	mov	r17,r6
1000d048:	0401ffc4 	movi	r16,2047
1000d04c:	003df506 	br	1000c824 <__alt_data_end+0xf800c824>
1000d050:	2807883a 	mov	r3,r5
1000d054:	3023883a 	mov	r17,r6
1000d058:	003df206 	br	1000c824 <__alt_data_end+0xf800c824>
1000d05c:	123ff804 	addi	r8,r2,-32
1000d060:	01000804 	movi	r4,32
1000d064:	1a10d83a 	srl	r8,r3,r8
1000d068:	11000a26 	beq	r2,r4,1000d094 <__subdf3+0x8f4>
1000d06c:	01001004 	movi	r4,64
1000d070:	2085c83a 	sub	r2,r4,r2
1000d074:	1884983a 	sll	r2,r3,r2
1000d078:	1444b03a 	or	r2,r2,r17
1000d07c:	1004c03a 	cmpne	r2,r2,zero
1000d080:	40a2b03a 	or	r17,r8,r2
1000d084:	0005883a 	mov	r2,zero
1000d088:	003f8606 	br	1000cea4 <__alt_data_end+0xf800cea4>
1000d08c:	0005883a 	mov	r2,zero
1000d090:	003fdc06 	br	1000d004 <__alt_data_end+0xf800d004>
1000d094:	0005883a 	mov	r2,zero
1000d098:	003ff706 	br	1000d078 <__alt_data_end+0xf800d078>

1000d09c <__fixdfsi>:
1000d09c:	280cd53a 	srli	r6,r5,20
1000d0a0:	00c00434 	movhi	r3,16
1000d0a4:	18ffffc4 	addi	r3,r3,-1
1000d0a8:	3181ffcc 	andi	r6,r6,2047
1000d0ac:	01c0ff84 	movi	r7,1022
1000d0b0:	28c6703a 	and	r3,r5,r3
1000d0b4:	280ad7fa 	srli	r5,r5,31
1000d0b8:	3980120e 	bge	r7,r6,1000d104 <__fixdfsi+0x68>
1000d0bc:	00810744 	movi	r2,1053
1000d0c0:	11800c16 	blt	r2,r6,1000d0f4 <__fixdfsi+0x58>
1000d0c4:	00810cc4 	movi	r2,1075
1000d0c8:	1185c83a 	sub	r2,r2,r6
1000d0cc:	01c007c4 	movi	r7,31
1000d0d0:	18c00434 	orhi	r3,r3,16
1000d0d4:	38800d16 	blt	r7,r2,1000d10c <__fixdfsi+0x70>
1000d0d8:	31befb44 	addi	r6,r6,-1043
1000d0dc:	2084d83a 	srl	r2,r4,r2
1000d0e0:	1986983a 	sll	r3,r3,r6
1000d0e4:	1884b03a 	or	r2,r3,r2
1000d0e8:	28000726 	beq	r5,zero,1000d108 <__fixdfsi+0x6c>
1000d0ec:	0085c83a 	sub	r2,zero,r2
1000d0f0:	f800283a 	ret
1000d0f4:	00a00034 	movhi	r2,32768
1000d0f8:	10bfffc4 	addi	r2,r2,-1
1000d0fc:	2885883a 	add	r2,r5,r2
1000d100:	f800283a 	ret
1000d104:	0005883a 	mov	r2,zero
1000d108:	f800283a 	ret
1000d10c:	008104c4 	movi	r2,1043
1000d110:	1185c83a 	sub	r2,r2,r6
1000d114:	1884d83a 	srl	r2,r3,r2
1000d118:	003ff306 	br	1000d0e8 <__alt_data_end+0xf800d0e8>

1000d11c <__floatsidf>:
1000d11c:	defffd04 	addi	sp,sp,-12
1000d120:	dfc00215 	stw	ra,8(sp)
1000d124:	dc400115 	stw	r17,4(sp)
1000d128:	dc000015 	stw	r16,0(sp)
1000d12c:	20002b26 	beq	r4,zero,1000d1dc <__floatsidf+0xc0>
1000d130:	2023883a 	mov	r17,r4
1000d134:	2020d7fa 	srli	r16,r4,31
1000d138:	20002d16 	blt	r4,zero,1000d1f0 <__floatsidf+0xd4>
1000d13c:	8809883a 	mov	r4,r17
1000d140:	000d2a00 	call	1000d2a0 <__clzsi2>
1000d144:	01410784 	movi	r5,1054
1000d148:	288bc83a 	sub	r5,r5,r2
1000d14c:	01010cc4 	movi	r4,1075
1000d150:	2149c83a 	sub	r4,r4,r5
1000d154:	00c007c4 	movi	r3,31
1000d158:	1900160e 	bge	r3,r4,1000d1b4 <__floatsidf+0x98>
1000d15c:	00c104c4 	movi	r3,1043
1000d160:	1947c83a 	sub	r3,r3,r5
1000d164:	88c6983a 	sll	r3,r17,r3
1000d168:	00800434 	movhi	r2,16
1000d16c:	10bfffc4 	addi	r2,r2,-1
1000d170:	1886703a 	and	r3,r3,r2
1000d174:	2941ffcc 	andi	r5,r5,2047
1000d178:	800d883a 	mov	r6,r16
1000d17c:	0005883a 	mov	r2,zero
1000d180:	280a953a 	slli	r5,r5,20
1000d184:	31803fcc 	andi	r6,r6,255
1000d188:	01000434 	movhi	r4,16
1000d18c:	300c97fa 	slli	r6,r6,31
1000d190:	213fffc4 	addi	r4,r4,-1
1000d194:	1906703a 	and	r3,r3,r4
1000d198:	1946b03a 	or	r3,r3,r5
1000d19c:	1986b03a 	or	r3,r3,r6
1000d1a0:	dfc00217 	ldw	ra,8(sp)
1000d1a4:	dc400117 	ldw	r17,4(sp)
1000d1a8:	dc000017 	ldw	r16,0(sp)
1000d1ac:	dec00304 	addi	sp,sp,12
1000d1b0:	f800283a 	ret
1000d1b4:	00c002c4 	movi	r3,11
1000d1b8:	1887c83a 	sub	r3,r3,r2
1000d1bc:	88c6d83a 	srl	r3,r17,r3
1000d1c0:	8904983a 	sll	r2,r17,r4
1000d1c4:	01000434 	movhi	r4,16
1000d1c8:	213fffc4 	addi	r4,r4,-1
1000d1cc:	2941ffcc 	andi	r5,r5,2047
1000d1d0:	1906703a 	and	r3,r3,r4
1000d1d4:	800d883a 	mov	r6,r16
1000d1d8:	003fe906 	br	1000d180 <__alt_data_end+0xf800d180>
1000d1dc:	000d883a 	mov	r6,zero
1000d1e0:	000b883a 	mov	r5,zero
1000d1e4:	0007883a 	mov	r3,zero
1000d1e8:	0005883a 	mov	r2,zero
1000d1ec:	003fe406 	br	1000d180 <__alt_data_end+0xf800d180>
1000d1f0:	0123c83a 	sub	r17,zero,r4
1000d1f4:	003fd106 	br	1000d13c <__alt_data_end+0xf800d13c>

1000d1f8 <__floatunsidf>:
1000d1f8:	defffe04 	addi	sp,sp,-8
1000d1fc:	dc000015 	stw	r16,0(sp)
1000d200:	dfc00115 	stw	ra,4(sp)
1000d204:	2021883a 	mov	r16,r4
1000d208:	20002226 	beq	r4,zero,1000d294 <__floatunsidf+0x9c>
1000d20c:	000d2a00 	call	1000d2a0 <__clzsi2>
1000d210:	01010784 	movi	r4,1054
1000d214:	2089c83a 	sub	r4,r4,r2
1000d218:	01810cc4 	movi	r6,1075
1000d21c:	310dc83a 	sub	r6,r6,r4
1000d220:	00c007c4 	movi	r3,31
1000d224:	1980120e 	bge	r3,r6,1000d270 <__floatunsidf+0x78>
1000d228:	00c104c4 	movi	r3,1043
1000d22c:	1907c83a 	sub	r3,r3,r4
1000d230:	80ca983a 	sll	r5,r16,r3
1000d234:	00800434 	movhi	r2,16
1000d238:	10bfffc4 	addi	r2,r2,-1
1000d23c:	2101ffcc 	andi	r4,r4,2047
1000d240:	0021883a 	mov	r16,zero
1000d244:	288a703a 	and	r5,r5,r2
1000d248:	2008953a 	slli	r4,r4,20
1000d24c:	00c00434 	movhi	r3,16
1000d250:	18ffffc4 	addi	r3,r3,-1
1000d254:	28c6703a 	and	r3,r5,r3
1000d258:	8005883a 	mov	r2,r16
1000d25c:	1906b03a 	or	r3,r3,r4
1000d260:	dfc00117 	ldw	ra,4(sp)
1000d264:	dc000017 	ldw	r16,0(sp)
1000d268:	dec00204 	addi	sp,sp,8
1000d26c:	f800283a 	ret
1000d270:	00c002c4 	movi	r3,11
1000d274:	188bc83a 	sub	r5,r3,r2
1000d278:	814ad83a 	srl	r5,r16,r5
1000d27c:	00c00434 	movhi	r3,16
1000d280:	18ffffc4 	addi	r3,r3,-1
1000d284:	81a0983a 	sll	r16,r16,r6
1000d288:	2101ffcc 	andi	r4,r4,2047
1000d28c:	28ca703a 	and	r5,r5,r3
1000d290:	003fed06 	br	1000d248 <__alt_data_end+0xf800d248>
1000d294:	0009883a 	mov	r4,zero
1000d298:	000b883a 	mov	r5,zero
1000d29c:	003fea06 	br	1000d248 <__alt_data_end+0xf800d248>

1000d2a0 <__clzsi2>:
1000d2a0:	00bfffd4 	movui	r2,65535
1000d2a4:	11000536 	bltu	r2,r4,1000d2bc <__clzsi2+0x1c>
1000d2a8:	00803fc4 	movi	r2,255
1000d2ac:	11000f36 	bltu	r2,r4,1000d2ec <__clzsi2+0x4c>
1000d2b0:	00800804 	movi	r2,32
1000d2b4:	0007883a 	mov	r3,zero
1000d2b8:	00000506 	br	1000d2d0 <__clzsi2+0x30>
1000d2bc:	00804034 	movhi	r2,256
1000d2c0:	10bfffc4 	addi	r2,r2,-1
1000d2c4:	11000c2e 	bgeu	r2,r4,1000d2f8 <__clzsi2+0x58>
1000d2c8:	00800204 	movi	r2,8
1000d2cc:	00c00604 	movi	r3,24
1000d2d0:	20c8d83a 	srl	r4,r4,r3
1000d2d4:	00c40074 	movhi	r3,4097
1000d2d8:	18fedd04 	addi	r3,r3,-1164
1000d2dc:	1909883a 	add	r4,r3,r4
1000d2e0:	20c00003 	ldbu	r3,0(r4)
1000d2e4:	10c5c83a 	sub	r2,r2,r3
1000d2e8:	f800283a 	ret
1000d2ec:	00800604 	movi	r2,24
1000d2f0:	00c00204 	movi	r3,8
1000d2f4:	003ff606 	br	1000d2d0 <__alt_data_end+0xf800d2d0>
1000d2f8:	00800404 	movi	r2,16
1000d2fc:	1007883a 	mov	r3,r2
1000d300:	003ff306 	br	1000d2d0 <__alt_data_end+0xf800d2d0>

1000d304 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1000d304:	defffe04 	addi	sp,sp,-8
1000d308:	dfc00115 	stw	ra,4(sp)
1000d30c:	df000015 	stw	fp,0(sp)
1000d310:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1000d314:	d0a00c17 	ldw	r2,-32720(gp)
1000d318:	10000326 	beq	r2,zero,1000d328 <alt_get_errno+0x24>
1000d31c:	d0a00c17 	ldw	r2,-32720(gp)
1000d320:	103ee83a 	callr	r2
1000d324:	00000106 	br	1000d32c <alt_get_errno+0x28>
1000d328:	d0a6d304 	addi	r2,gp,-25780
}
1000d32c:	e037883a 	mov	sp,fp
1000d330:	dfc00117 	ldw	ra,4(sp)
1000d334:	df000017 	ldw	fp,0(sp)
1000d338:	dec00204 	addi	sp,sp,8
1000d33c:	f800283a 	ret

1000d340 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
1000d340:	defffb04 	addi	sp,sp,-20
1000d344:	dfc00415 	stw	ra,16(sp)
1000d348:	df000315 	stw	fp,12(sp)
1000d34c:	df000304 	addi	fp,sp,12
1000d350:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
1000d354:	e0bfff17 	ldw	r2,-4(fp)
1000d358:	10000816 	blt	r2,zero,1000d37c <close+0x3c>
1000d35c:	01400304 	movi	r5,12
1000d360:	e13fff17 	ldw	r4,-4(fp)
1000d364:	000aa380 	call	1000aa38 <__mulsi3>
1000d368:	1007883a 	mov	r3,r2
1000d36c:	00840074 	movhi	r2,4097
1000d370:	10815d04 	addi	r2,r2,1396
1000d374:	1885883a 	add	r2,r3,r2
1000d378:	00000106 	br	1000d380 <close+0x40>
1000d37c:	0005883a 	mov	r2,zero
1000d380:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
1000d384:	e0bffd17 	ldw	r2,-12(fp)
1000d388:	10001926 	beq	r2,zero,1000d3f0 <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
1000d38c:	e0bffd17 	ldw	r2,-12(fp)
1000d390:	10800017 	ldw	r2,0(r2)
1000d394:	10800417 	ldw	r2,16(r2)
1000d398:	10000626 	beq	r2,zero,1000d3b4 <close+0x74>
1000d39c:	e0bffd17 	ldw	r2,-12(fp)
1000d3a0:	10800017 	ldw	r2,0(r2)
1000d3a4:	10800417 	ldw	r2,16(r2)
1000d3a8:	e13ffd17 	ldw	r4,-12(fp)
1000d3ac:	103ee83a 	callr	r2
1000d3b0:	00000106 	br	1000d3b8 <close+0x78>
1000d3b4:	0005883a 	mov	r2,zero
1000d3b8:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
1000d3bc:	e13fff17 	ldw	r4,-4(fp)
1000d3c0:	000da280 	call	1000da28 <alt_release_fd>
    if (rval < 0)
1000d3c4:	e0bffe17 	ldw	r2,-8(fp)
1000d3c8:	1000070e 	bge	r2,zero,1000d3e8 <close+0xa8>
    {
      ALT_ERRNO = -rval;
1000d3cc:	000d3040 	call	1000d304 <alt_get_errno>
1000d3d0:	1007883a 	mov	r3,r2
1000d3d4:	e0bffe17 	ldw	r2,-8(fp)
1000d3d8:	0085c83a 	sub	r2,zero,r2
1000d3dc:	18800015 	stw	r2,0(r3)
      return -1;
1000d3e0:	00bfffc4 	movi	r2,-1
1000d3e4:	00000706 	br	1000d404 <close+0xc4>
    }
    return 0;
1000d3e8:	0005883a 	mov	r2,zero
1000d3ec:	00000506 	br	1000d404 <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
1000d3f0:	000d3040 	call	1000d304 <alt_get_errno>
1000d3f4:	1007883a 	mov	r3,r2
1000d3f8:	00801444 	movi	r2,81
1000d3fc:	18800015 	stw	r2,0(r3)
    return -1;
1000d400:	00bfffc4 	movi	r2,-1
  }
}
1000d404:	e037883a 	mov	sp,fp
1000d408:	dfc00117 	ldw	ra,4(sp)
1000d40c:	df000017 	ldw	fp,0(sp)
1000d410:	dec00204 	addi	sp,sp,8
1000d414:	f800283a 	ret

1000d418 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
1000d418:	defffc04 	addi	sp,sp,-16
1000d41c:	df000315 	stw	fp,12(sp)
1000d420:	df000304 	addi	fp,sp,12
1000d424:	e13ffd15 	stw	r4,-12(fp)
1000d428:	e17ffe15 	stw	r5,-8(fp)
1000d42c:	e1bfff15 	stw	r6,-4(fp)
  return len;
1000d430:	e0bfff17 	ldw	r2,-4(fp)
}
1000d434:	e037883a 	mov	sp,fp
1000d438:	df000017 	ldw	fp,0(sp)
1000d43c:	dec00104 	addi	sp,sp,4
1000d440:	f800283a 	ret

1000d444 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1000d444:	defffe04 	addi	sp,sp,-8
1000d448:	dfc00115 	stw	ra,4(sp)
1000d44c:	df000015 	stw	fp,0(sp)
1000d450:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1000d454:	d0a00c17 	ldw	r2,-32720(gp)
1000d458:	10000326 	beq	r2,zero,1000d468 <alt_get_errno+0x24>
1000d45c:	d0a00c17 	ldw	r2,-32720(gp)
1000d460:	103ee83a 	callr	r2
1000d464:	00000106 	br	1000d46c <alt_get_errno+0x28>
1000d468:	d0a6d304 	addi	r2,gp,-25780
}
1000d46c:	e037883a 	mov	sp,fp
1000d470:	dfc00117 	ldw	ra,4(sp)
1000d474:	df000017 	ldw	fp,0(sp)
1000d478:	dec00204 	addi	sp,sp,8
1000d47c:	f800283a 	ret

1000d480 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
1000d480:	defffb04 	addi	sp,sp,-20
1000d484:	dfc00415 	stw	ra,16(sp)
1000d488:	df000315 	stw	fp,12(sp)
1000d48c:	df000304 	addi	fp,sp,12
1000d490:	e13ffe15 	stw	r4,-8(fp)
1000d494:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1000d498:	e0bffe17 	ldw	r2,-8(fp)
1000d49c:	10000816 	blt	r2,zero,1000d4c0 <fstat+0x40>
1000d4a0:	01400304 	movi	r5,12
1000d4a4:	e13ffe17 	ldw	r4,-8(fp)
1000d4a8:	000aa380 	call	1000aa38 <__mulsi3>
1000d4ac:	1007883a 	mov	r3,r2
1000d4b0:	00840074 	movhi	r2,4097
1000d4b4:	10815d04 	addi	r2,r2,1396
1000d4b8:	1885883a 	add	r2,r3,r2
1000d4bc:	00000106 	br	1000d4c4 <fstat+0x44>
1000d4c0:	0005883a 	mov	r2,zero
1000d4c4:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
1000d4c8:	e0bffd17 	ldw	r2,-12(fp)
1000d4cc:	10001026 	beq	r2,zero,1000d510 <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
1000d4d0:	e0bffd17 	ldw	r2,-12(fp)
1000d4d4:	10800017 	ldw	r2,0(r2)
1000d4d8:	10800817 	ldw	r2,32(r2)
1000d4dc:	10000726 	beq	r2,zero,1000d4fc <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
1000d4e0:	e0bffd17 	ldw	r2,-12(fp)
1000d4e4:	10800017 	ldw	r2,0(r2)
1000d4e8:	10800817 	ldw	r2,32(r2)
1000d4ec:	e17fff17 	ldw	r5,-4(fp)
1000d4f0:	e13ffd17 	ldw	r4,-12(fp)
1000d4f4:	103ee83a 	callr	r2
1000d4f8:	00000a06 	br	1000d524 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
1000d4fc:	e0bfff17 	ldw	r2,-4(fp)
1000d500:	00c80004 	movi	r3,8192
1000d504:	10c00115 	stw	r3,4(r2)
      return 0;
1000d508:	0005883a 	mov	r2,zero
1000d50c:	00000506 	br	1000d524 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
1000d510:	000d4440 	call	1000d444 <alt_get_errno>
1000d514:	1007883a 	mov	r3,r2
1000d518:	00801444 	movi	r2,81
1000d51c:	18800015 	stw	r2,0(r3)
    return -1;
1000d520:	00bfffc4 	movi	r2,-1
  }
}
1000d524:	e037883a 	mov	sp,fp
1000d528:	dfc00117 	ldw	ra,4(sp)
1000d52c:	df000017 	ldw	fp,0(sp)
1000d530:	dec00204 	addi	sp,sp,8
1000d534:	f800283a 	ret

1000d538 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1000d538:	defffe04 	addi	sp,sp,-8
1000d53c:	dfc00115 	stw	ra,4(sp)
1000d540:	df000015 	stw	fp,0(sp)
1000d544:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1000d548:	d0a00c17 	ldw	r2,-32720(gp)
1000d54c:	10000326 	beq	r2,zero,1000d55c <alt_get_errno+0x24>
1000d550:	d0a00c17 	ldw	r2,-32720(gp)
1000d554:	103ee83a 	callr	r2
1000d558:	00000106 	br	1000d560 <alt_get_errno+0x28>
1000d55c:	d0a6d304 	addi	r2,gp,-25780
}
1000d560:	e037883a 	mov	sp,fp
1000d564:	dfc00117 	ldw	ra,4(sp)
1000d568:	df000017 	ldw	fp,0(sp)
1000d56c:	dec00204 	addi	sp,sp,8
1000d570:	f800283a 	ret

1000d574 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
1000d574:	deffed04 	addi	sp,sp,-76
1000d578:	dfc01215 	stw	ra,72(sp)
1000d57c:	df001115 	stw	fp,68(sp)
1000d580:	df001104 	addi	fp,sp,68
1000d584:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1000d588:	e0bfff17 	ldw	r2,-4(fp)
1000d58c:	10000816 	blt	r2,zero,1000d5b0 <isatty+0x3c>
1000d590:	01400304 	movi	r5,12
1000d594:	e13fff17 	ldw	r4,-4(fp)
1000d598:	000aa380 	call	1000aa38 <__mulsi3>
1000d59c:	1007883a 	mov	r3,r2
1000d5a0:	00840074 	movhi	r2,4097
1000d5a4:	10815d04 	addi	r2,r2,1396
1000d5a8:	1885883a 	add	r2,r3,r2
1000d5ac:	00000106 	br	1000d5b4 <isatty+0x40>
1000d5b0:	0005883a 	mov	r2,zero
1000d5b4:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
1000d5b8:	e0bfef17 	ldw	r2,-68(fp)
1000d5bc:	10000e26 	beq	r2,zero,1000d5f8 <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
1000d5c0:	e0bfef17 	ldw	r2,-68(fp)
1000d5c4:	10800017 	ldw	r2,0(r2)
1000d5c8:	10800817 	ldw	r2,32(r2)
1000d5cc:	1000021e 	bne	r2,zero,1000d5d8 <isatty+0x64>
    {
      return 1;
1000d5d0:	00800044 	movi	r2,1
1000d5d4:	00000d06 	br	1000d60c <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
1000d5d8:	e0bff004 	addi	r2,fp,-64
1000d5dc:	100b883a 	mov	r5,r2
1000d5e0:	e13fff17 	ldw	r4,-4(fp)
1000d5e4:	000d4800 	call	1000d480 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
1000d5e8:	e0bff117 	ldw	r2,-60(fp)
1000d5ec:	10880020 	cmpeqi	r2,r2,8192
1000d5f0:	10803fcc 	andi	r2,r2,255
1000d5f4:	00000506 	br	1000d60c <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
1000d5f8:	000d5380 	call	1000d538 <alt_get_errno>
1000d5fc:	1007883a 	mov	r3,r2
1000d600:	00801444 	movi	r2,81
1000d604:	18800015 	stw	r2,0(r3)
    return 0;
1000d608:	0005883a 	mov	r2,zero
  }
}
1000d60c:	e037883a 	mov	sp,fp
1000d610:	dfc00117 	ldw	ra,4(sp)
1000d614:	df000017 	ldw	fp,0(sp)
1000d618:	dec00204 	addi	sp,sp,8
1000d61c:	f800283a 	ret

1000d620 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
1000d620:	defffc04 	addi	sp,sp,-16
1000d624:	df000315 	stw	fp,12(sp)
1000d628:	df000304 	addi	fp,sp,12
1000d62c:	e13ffd15 	stw	r4,-12(fp)
1000d630:	e17ffe15 	stw	r5,-8(fp)
1000d634:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
1000d638:	e0fffe17 	ldw	r3,-8(fp)
1000d63c:	e0bffd17 	ldw	r2,-12(fp)
1000d640:	18800c26 	beq	r3,r2,1000d674 <alt_load_section+0x54>
  {
    while( to != end )
1000d644:	00000806 	br	1000d668 <alt_load_section+0x48>
    {
      *to++ = *from++;
1000d648:	e0bffe17 	ldw	r2,-8(fp)
1000d64c:	10c00104 	addi	r3,r2,4
1000d650:	e0fffe15 	stw	r3,-8(fp)
1000d654:	e0fffd17 	ldw	r3,-12(fp)
1000d658:	19000104 	addi	r4,r3,4
1000d65c:	e13ffd15 	stw	r4,-12(fp)
1000d660:	18c00017 	ldw	r3,0(r3)
1000d664:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
1000d668:	e0fffe17 	ldw	r3,-8(fp)
1000d66c:	e0bfff17 	ldw	r2,-4(fp)
1000d670:	18bff51e 	bne	r3,r2,1000d648 <__alt_data_end+0xf800d648>
    {
      *to++ = *from++;
    }
  }
}
1000d674:	0001883a 	nop
1000d678:	e037883a 	mov	sp,fp
1000d67c:	df000017 	ldw	fp,0(sp)
1000d680:	dec00104 	addi	sp,sp,4
1000d684:	f800283a 	ret

1000d688 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
1000d688:	defffe04 	addi	sp,sp,-8
1000d68c:	dfc00115 	stw	ra,4(sp)
1000d690:	df000015 	stw	fp,0(sp)
1000d694:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
1000d698:	01840074 	movhi	r6,4097
1000d69c:	3185e604 	addi	r6,r6,6040
1000d6a0:	01440074 	movhi	r5,4097
1000d6a4:	297f2a04 	addi	r5,r5,-856
1000d6a8:	01040074 	movhi	r4,4097
1000d6ac:	2105e604 	addi	r4,r4,6040
1000d6b0:	000d6200 	call	1000d620 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
1000d6b4:	01840034 	movhi	r6,4096
1000d6b8:	31808c04 	addi	r6,r6,560
1000d6bc:	01440034 	movhi	r5,4096
1000d6c0:	29400804 	addi	r5,r5,32
1000d6c4:	01040034 	movhi	r4,4096
1000d6c8:	21000804 	addi	r4,r4,32
1000d6cc:	000d6200 	call	1000d620 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
1000d6d0:	01840074 	movhi	r6,4097
1000d6d4:	31bf2a04 	addi	r6,r6,-856
1000d6d8:	01440074 	movhi	r5,4097
1000d6dc:	297e6704 	addi	r5,r5,-1636
1000d6e0:	01040074 	movhi	r4,4097
1000d6e4:	213e6704 	addi	r4,r4,-1636
1000d6e8:	000d6200 	call	1000d620 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
1000d6ec:	000e8e40 	call	1000e8e4 <alt_dcache_flush_all>
  alt_icache_flush_all();
1000d6f0:	000eaa40 	call	1000eaa4 <alt_icache_flush_all>
}
1000d6f4:	0001883a 	nop
1000d6f8:	e037883a 	mov	sp,fp
1000d6fc:	dfc00117 	ldw	ra,4(sp)
1000d700:	df000017 	ldw	fp,0(sp)
1000d704:	dec00204 	addi	sp,sp,8
1000d708:	f800283a 	ret

1000d70c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1000d70c:	defffe04 	addi	sp,sp,-8
1000d710:	dfc00115 	stw	ra,4(sp)
1000d714:	df000015 	stw	fp,0(sp)
1000d718:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1000d71c:	d0a00c17 	ldw	r2,-32720(gp)
1000d720:	10000326 	beq	r2,zero,1000d730 <alt_get_errno+0x24>
1000d724:	d0a00c17 	ldw	r2,-32720(gp)
1000d728:	103ee83a 	callr	r2
1000d72c:	00000106 	br	1000d734 <alt_get_errno+0x28>
1000d730:	d0a6d304 	addi	r2,gp,-25780
}
1000d734:	e037883a 	mov	sp,fp
1000d738:	dfc00117 	ldw	ra,4(sp)
1000d73c:	df000017 	ldw	fp,0(sp)
1000d740:	dec00204 	addi	sp,sp,8
1000d744:	f800283a 	ret

1000d748 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
1000d748:	defff904 	addi	sp,sp,-28
1000d74c:	dfc00615 	stw	ra,24(sp)
1000d750:	df000515 	stw	fp,20(sp)
1000d754:	df000504 	addi	fp,sp,20
1000d758:	e13ffd15 	stw	r4,-12(fp)
1000d75c:	e17ffe15 	stw	r5,-8(fp)
1000d760:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
1000d764:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1000d768:	e0bffd17 	ldw	r2,-12(fp)
1000d76c:	10000816 	blt	r2,zero,1000d790 <lseek+0x48>
1000d770:	01400304 	movi	r5,12
1000d774:	e13ffd17 	ldw	r4,-12(fp)
1000d778:	000aa380 	call	1000aa38 <__mulsi3>
1000d77c:	1007883a 	mov	r3,r2
1000d780:	00840074 	movhi	r2,4097
1000d784:	10815d04 	addi	r2,r2,1396
1000d788:	1885883a 	add	r2,r3,r2
1000d78c:	00000106 	br	1000d794 <lseek+0x4c>
1000d790:	0005883a 	mov	r2,zero
1000d794:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
1000d798:	e0bffc17 	ldw	r2,-16(fp)
1000d79c:	10001026 	beq	r2,zero,1000d7e0 <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
1000d7a0:	e0bffc17 	ldw	r2,-16(fp)
1000d7a4:	10800017 	ldw	r2,0(r2)
1000d7a8:	10800717 	ldw	r2,28(r2)
1000d7ac:	10000926 	beq	r2,zero,1000d7d4 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
1000d7b0:	e0bffc17 	ldw	r2,-16(fp)
1000d7b4:	10800017 	ldw	r2,0(r2)
1000d7b8:	10800717 	ldw	r2,28(r2)
1000d7bc:	e1bfff17 	ldw	r6,-4(fp)
1000d7c0:	e17ffe17 	ldw	r5,-8(fp)
1000d7c4:	e13ffc17 	ldw	r4,-16(fp)
1000d7c8:	103ee83a 	callr	r2
1000d7cc:	e0bffb15 	stw	r2,-20(fp)
1000d7d0:	00000506 	br	1000d7e8 <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
1000d7d4:	00bfde84 	movi	r2,-134
1000d7d8:	e0bffb15 	stw	r2,-20(fp)
1000d7dc:	00000206 	br	1000d7e8 <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
1000d7e0:	00bfebc4 	movi	r2,-81
1000d7e4:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
1000d7e8:	e0bffb17 	ldw	r2,-20(fp)
1000d7ec:	1000070e 	bge	r2,zero,1000d80c <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
1000d7f0:	000d70c0 	call	1000d70c <alt_get_errno>
1000d7f4:	1007883a 	mov	r3,r2
1000d7f8:	e0bffb17 	ldw	r2,-20(fp)
1000d7fc:	0085c83a 	sub	r2,zero,r2
1000d800:	18800015 	stw	r2,0(r3)
    rc = -1;
1000d804:	00bfffc4 	movi	r2,-1
1000d808:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
1000d80c:	e0bffb17 	ldw	r2,-20(fp)
}
1000d810:	e037883a 	mov	sp,fp
1000d814:	dfc00117 	ldw	ra,4(sp)
1000d818:	df000017 	ldw	fp,0(sp)
1000d81c:	dec00204 	addi	sp,sp,8
1000d820:	f800283a 	ret

1000d824 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
1000d824:	defffd04 	addi	sp,sp,-12
1000d828:	dfc00215 	stw	ra,8(sp)
1000d82c:	df000115 	stw	fp,4(sp)
1000d830:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
1000d834:	0009883a 	mov	r4,zero
1000d838:	000dccc0 	call	1000dccc <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
1000d83c:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
1000d840:	000dd040 	call	1000dd04 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
1000d844:	01840074 	movhi	r6,4097
1000d848:	31bf2004 	addi	r6,r6,-896
1000d84c:	01440074 	movhi	r5,4097
1000d850:	297f2004 	addi	r5,r5,-896
1000d854:	01040074 	movhi	r4,4097
1000d858:	213f2004 	addi	r4,r4,-896
1000d85c:	000ee480 	call	1000ee48 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
1000d860:	000e9e40 	call	1000e9e4 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
1000d864:	01040074 	movhi	r4,4097
1000d868:	213a9104 	addi	r4,r4,-5564
1000d86c:	000f6080 	call	1000f608 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
1000d870:	d0a6d417 	ldw	r2,-25776(gp)
1000d874:	d0e6d517 	ldw	r3,-25772(gp)
1000d878:	d126d617 	ldw	r4,-25768(gp)
1000d87c:	200d883a 	mov	r6,r4
1000d880:	180b883a 	mov	r5,r3
1000d884:	1009883a 	mov	r4,r2
1000d888:	000026c0 	call	1000026c <main>
1000d88c:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
1000d890:	01000044 	movi	r4,1
1000d894:	000d3400 	call	1000d340 <close>
  exit (result);
1000d898:	e13fff17 	ldw	r4,-4(fp)
1000d89c:	000f61c0 	call	1000f61c <exit>

1000d8a0 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
1000d8a0:	defffe04 	addi	sp,sp,-8
1000d8a4:	df000115 	stw	fp,4(sp)
1000d8a8:	df000104 	addi	fp,sp,4
1000d8ac:	e13fff15 	stw	r4,-4(fp)
}
1000d8b0:	0001883a 	nop
1000d8b4:	e037883a 	mov	sp,fp
1000d8b8:	df000017 	ldw	fp,0(sp)
1000d8bc:	dec00104 	addi	sp,sp,4
1000d8c0:	f800283a 	ret

1000d8c4 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
1000d8c4:	defffe04 	addi	sp,sp,-8
1000d8c8:	df000115 	stw	fp,4(sp)
1000d8cc:	df000104 	addi	fp,sp,4
1000d8d0:	e13fff15 	stw	r4,-4(fp)
}
1000d8d4:	0001883a 	nop
1000d8d8:	e037883a 	mov	sp,fp
1000d8dc:	df000017 	ldw	fp,0(sp)
1000d8e0:	dec00104 	addi	sp,sp,4
1000d8e4:	f800283a 	ret

1000d8e8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1000d8e8:	defffe04 	addi	sp,sp,-8
1000d8ec:	dfc00115 	stw	ra,4(sp)
1000d8f0:	df000015 	stw	fp,0(sp)
1000d8f4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1000d8f8:	d0a00c17 	ldw	r2,-32720(gp)
1000d8fc:	10000326 	beq	r2,zero,1000d90c <alt_get_errno+0x24>
1000d900:	d0a00c17 	ldw	r2,-32720(gp)
1000d904:	103ee83a 	callr	r2
1000d908:	00000106 	br	1000d910 <alt_get_errno+0x28>
1000d90c:	d0a6d304 	addi	r2,gp,-25780
}
1000d910:	e037883a 	mov	sp,fp
1000d914:	dfc00117 	ldw	ra,4(sp)
1000d918:	df000017 	ldw	fp,0(sp)
1000d91c:	dec00204 	addi	sp,sp,8
1000d920:	f800283a 	ret

1000d924 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
1000d924:	defff904 	addi	sp,sp,-28
1000d928:	dfc00615 	stw	ra,24(sp)
1000d92c:	df000515 	stw	fp,20(sp)
1000d930:	df000504 	addi	fp,sp,20
1000d934:	e13ffd15 	stw	r4,-12(fp)
1000d938:	e17ffe15 	stw	r5,-8(fp)
1000d93c:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1000d940:	e0bffd17 	ldw	r2,-12(fp)
1000d944:	10000816 	blt	r2,zero,1000d968 <read+0x44>
1000d948:	01400304 	movi	r5,12
1000d94c:	e13ffd17 	ldw	r4,-12(fp)
1000d950:	000aa380 	call	1000aa38 <__mulsi3>
1000d954:	1007883a 	mov	r3,r2
1000d958:	00840074 	movhi	r2,4097
1000d95c:	10815d04 	addi	r2,r2,1396
1000d960:	1885883a 	add	r2,r3,r2
1000d964:	00000106 	br	1000d96c <read+0x48>
1000d968:	0005883a 	mov	r2,zero
1000d96c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
1000d970:	e0bffb17 	ldw	r2,-20(fp)
1000d974:	10002226 	beq	r2,zero,1000da00 <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
1000d978:	e0bffb17 	ldw	r2,-20(fp)
1000d97c:	10800217 	ldw	r2,8(r2)
1000d980:	108000cc 	andi	r2,r2,3
1000d984:	10800060 	cmpeqi	r2,r2,1
1000d988:	1000181e 	bne	r2,zero,1000d9ec <read+0xc8>
        (fd->dev->read))
1000d98c:	e0bffb17 	ldw	r2,-20(fp)
1000d990:	10800017 	ldw	r2,0(r2)
1000d994:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
1000d998:	10001426 	beq	r2,zero,1000d9ec <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
1000d99c:	e0bffb17 	ldw	r2,-20(fp)
1000d9a0:	10800017 	ldw	r2,0(r2)
1000d9a4:	10800517 	ldw	r2,20(r2)
1000d9a8:	e0ffff17 	ldw	r3,-4(fp)
1000d9ac:	180d883a 	mov	r6,r3
1000d9b0:	e17ffe17 	ldw	r5,-8(fp)
1000d9b4:	e13ffb17 	ldw	r4,-20(fp)
1000d9b8:	103ee83a 	callr	r2
1000d9bc:	e0bffc15 	stw	r2,-16(fp)
1000d9c0:	e0bffc17 	ldw	r2,-16(fp)
1000d9c4:	1000070e 	bge	r2,zero,1000d9e4 <read+0xc0>
        {
          ALT_ERRNO = -rval;
1000d9c8:	000d8e80 	call	1000d8e8 <alt_get_errno>
1000d9cc:	1007883a 	mov	r3,r2
1000d9d0:	e0bffc17 	ldw	r2,-16(fp)
1000d9d4:	0085c83a 	sub	r2,zero,r2
1000d9d8:	18800015 	stw	r2,0(r3)
          return -1;
1000d9dc:	00bfffc4 	movi	r2,-1
1000d9e0:	00000c06 	br	1000da14 <read+0xf0>
        }
        return rval;
1000d9e4:	e0bffc17 	ldw	r2,-16(fp)
1000d9e8:	00000a06 	br	1000da14 <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
1000d9ec:	000d8e80 	call	1000d8e8 <alt_get_errno>
1000d9f0:	1007883a 	mov	r3,r2
1000d9f4:	00800344 	movi	r2,13
1000d9f8:	18800015 	stw	r2,0(r3)
1000d9fc:	00000406 	br	1000da10 <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
1000da00:	000d8e80 	call	1000d8e8 <alt_get_errno>
1000da04:	1007883a 	mov	r3,r2
1000da08:	00801444 	movi	r2,81
1000da0c:	18800015 	stw	r2,0(r3)
  }
  return -1;
1000da10:	00bfffc4 	movi	r2,-1
}
1000da14:	e037883a 	mov	sp,fp
1000da18:	dfc00117 	ldw	ra,4(sp)
1000da1c:	df000017 	ldw	fp,0(sp)
1000da20:	dec00204 	addi	sp,sp,8
1000da24:	f800283a 	ret

1000da28 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
1000da28:	defffc04 	addi	sp,sp,-16
1000da2c:	dfc00315 	stw	ra,12(sp)
1000da30:	df000215 	stw	fp,8(sp)
1000da34:	dc000115 	stw	r16,4(sp)
1000da38:	df000204 	addi	fp,sp,8
1000da3c:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
1000da40:	e0bffe17 	ldw	r2,-8(fp)
1000da44:	108000d0 	cmplti	r2,r2,3
1000da48:	1000111e 	bne	r2,zero,1000da90 <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
1000da4c:	04040074 	movhi	r16,4097
1000da50:	84015d04 	addi	r16,r16,1396
1000da54:	e0bffe17 	ldw	r2,-8(fp)
1000da58:	01400304 	movi	r5,12
1000da5c:	1009883a 	mov	r4,r2
1000da60:	000aa380 	call	1000aa38 <__mulsi3>
1000da64:	8085883a 	add	r2,r16,r2
1000da68:	10800204 	addi	r2,r2,8
1000da6c:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
1000da70:	04040074 	movhi	r16,4097
1000da74:	84015d04 	addi	r16,r16,1396
1000da78:	e0bffe17 	ldw	r2,-8(fp)
1000da7c:	01400304 	movi	r5,12
1000da80:	1009883a 	mov	r4,r2
1000da84:	000aa380 	call	1000aa38 <__mulsi3>
1000da88:	8085883a 	add	r2,r16,r2
1000da8c:	10000015 	stw	zero,0(r2)
  }
}
1000da90:	0001883a 	nop
1000da94:	e6ffff04 	addi	sp,fp,-4
1000da98:	dfc00217 	ldw	ra,8(sp)
1000da9c:	df000117 	ldw	fp,4(sp)
1000daa0:	dc000017 	ldw	r16,0(sp)
1000daa4:	dec00304 	addi	sp,sp,12
1000daa8:	f800283a 	ret

1000daac <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
1000daac:	defff904 	addi	sp,sp,-28
1000dab0:	df000615 	stw	fp,24(sp)
1000dab4:	df000604 	addi	fp,sp,24
1000dab8:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1000dabc:	0005303a 	rdctl	r2,status
1000dac0:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1000dac4:	e0fffe17 	ldw	r3,-8(fp)
1000dac8:	00bfff84 	movi	r2,-2
1000dacc:	1884703a 	and	r2,r3,r2
1000dad0:	1001703a 	wrctl	status,r2
  
  return context;
1000dad4:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
1000dad8:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
1000dadc:	d0a00d17 	ldw	r2,-32716(gp)
1000dae0:	10c000c4 	addi	r3,r2,3
1000dae4:	00bfff04 	movi	r2,-4
1000dae8:	1884703a 	and	r2,r3,r2
1000daec:	d0a00d15 	stw	r2,-32716(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
1000daf0:	d0e00d17 	ldw	r3,-32716(gp)
1000daf4:	e0bfff17 	ldw	r2,-4(fp)
1000daf8:	1887883a 	add	r3,r3,r2
1000dafc:	00860034 	movhi	r2,6144
1000db00:	10800004 	addi	r2,r2,0
1000db04:	10c0062e 	bgeu	r2,r3,1000db20 <sbrk+0x74>
1000db08:	e0bffb17 	ldw	r2,-20(fp)
1000db0c:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1000db10:	e0bffa17 	ldw	r2,-24(fp)
1000db14:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
1000db18:	00bfffc4 	movi	r2,-1
1000db1c:	00000b06 	br	1000db4c <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
1000db20:	d0a00d17 	ldw	r2,-32716(gp)
1000db24:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
1000db28:	d0e00d17 	ldw	r3,-32716(gp)
1000db2c:	e0bfff17 	ldw	r2,-4(fp)
1000db30:	1885883a 	add	r2,r3,r2
1000db34:	d0a00d15 	stw	r2,-32716(gp)
1000db38:	e0bffb17 	ldw	r2,-20(fp)
1000db3c:	e0bffc15 	stw	r2,-16(fp)
1000db40:	e0bffc17 	ldw	r2,-16(fp)
1000db44:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
1000db48:	e0bffd17 	ldw	r2,-12(fp)
} 
1000db4c:	e037883a 	mov	sp,fp
1000db50:	df000017 	ldw	fp,0(sp)
1000db54:	dec00104 	addi	sp,sp,4
1000db58:	f800283a 	ret

1000db5c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1000db5c:	defffe04 	addi	sp,sp,-8
1000db60:	dfc00115 	stw	ra,4(sp)
1000db64:	df000015 	stw	fp,0(sp)
1000db68:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1000db6c:	d0a00c17 	ldw	r2,-32720(gp)
1000db70:	10000326 	beq	r2,zero,1000db80 <alt_get_errno+0x24>
1000db74:	d0a00c17 	ldw	r2,-32720(gp)
1000db78:	103ee83a 	callr	r2
1000db7c:	00000106 	br	1000db84 <alt_get_errno+0x28>
1000db80:	d0a6d304 	addi	r2,gp,-25780
}
1000db84:	e037883a 	mov	sp,fp
1000db88:	dfc00117 	ldw	ra,4(sp)
1000db8c:	df000017 	ldw	fp,0(sp)
1000db90:	dec00204 	addi	sp,sp,8
1000db94:	f800283a 	ret

1000db98 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
1000db98:	defff904 	addi	sp,sp,-28
1000db9c:	dfc00615 	stw	ra,24(sp)
1000dba0:	df000515 	stw	fp,20(sp)
1000dba4:	df000504 	addi	fp,sp,20
1000dba8:	e13ffd15 	stw	r4,-12(fp)
1000dbac:	e17ffe15 	stw	r5,-8(fp)
1000dbb0:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1000dbb4:	e0bffd17 	ldw	r2,-12(fp)
1000dbb8:	10000816 	blt	r2,zero,1000dbdc <write+0x44>
1000dbbc:	01400304 	movi	r5,12
1000dbc0:	e13ffd17 	ldw	r4,-12(fp)
1000dbc4:	000aa380 	call	1000aa38 <__mulsi3>
1000dbc8:	1007883a 	mov	r3,r2
1000dbcc:	00840074 	movhi	r2,4097
1000dbd0:	10815d04 	addi	r2,r2,1396
1000dbd4:	1885883a 	add	r2,r3,r2
1000dbd8:	00000106 	br	1000dbe0 <write+0x48>
1000dbdc:	0005883a 	mov	r2,zero
1000dbe0:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
1000dbe4:	e0bffb17 	ldw	r2,-20(fp)
1000dbe8:	10002126 	beq	r2,zero,1000dc70 <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
1000dbec:	e0bffb17 	ldw	r2,-20(fp)
1000dbf0:	10800217 	ldw	r2,8(r2)
1000dbf4:	108000cc 	andi	r2,r2,3
1000dbf8:	10001826 	beq	r2,zero,1000dc5c <write+0xc4>
1000dbfc:	e0bffb17 	ldw	r2,-20(fp)
1000dc00:	10800017 	ldw	r2,0(r2)
1000dc04:	10800617 	ldw	r2,24(r2)
1000dc08:	10001426 	beq	r2,zero,1000dc5c <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
1000dc0c:	e0bffb17 	ldw	r2,-20(fp)
1000dc10:	10800017 	ldw	r2,0(r2)
1000dc14:	10800617 	ldw	r2,24(r2)
1000dc18:	e0ffff17 	ldw	r3,-4(fp)
1000dc1c:	180d883a 	mov	r6,r3
1000dc20:	e17ffe17 	ldw	r5,-8(fp)
1000dc24:	e13ffb17 	ldw	r4,-20(fp)
1000dc28:	103ee83a 	callr	r2
1000dc2c:	e0bffc15 	stw	r2,-16(fp)
1000dc30:	e0bffc17 	ldw	r2,-16(fp)
1000dc34:	1000070e 	bge	r2,zero,1000dc54 <write+0xbc>
      {
        ALT_ERRNO = -rval;
1000dc38:	000db5c0 	call	1000db5c <alt_get_errno>
1000dc3c:	1007883a 	mov	r3,r2
1000dc40:	e0bffc17 	ldw	r2,-16(fp)
1000dc44:	0085c83a 	sub	r2,zero,r2
1000dc48:	18800015 	stw	r2,0(r3)
        return -1;
1000dc4c:	00bfffc4 	movi	r2,-1
1000dc50:	00000c06 	br	1000dc84 <write+0xec>
      }
      return rval;
1000dc54:	e0bffc17 	ldw	r2,-16(fp)
1000dc58:	00000a06 	br	1000dc84 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
1000dc5c:	000db5c0 	call	1000db5c <alt_get_errno>
1000dc60:	1007883a 	mov	r3,r2
1000dc64:	00800344 	movi	r2,13
1000dc68:	18800015 	stw	r2,0(r3)
1000dc6c:	00000406 	br	1000dc80 <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
1000dc70:	000db5c0 	call	1000db5c <alt_get_errno>
1000dc74:	1007883a 	mov	r3,r2
1000dc78:	00801444 	movi	r2,81
1000dc7c:	18800015 	stw	r2,0(r3)
  }
  return -1;
1000dc80:	00bfffc4 	movi	r2,-1
}
1000dc84:	e037883a 	mov	sp,fp
1000dc88:	dfc00117 	ldw	ra,4(sp)
1000dc8c:	df000017 	ldw	fp,0(sp)
1000dc90:	dec00204 	addi	sp,sp,8
1000dc94:	f800283a 	ret

1000dc98 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
1000dc98:	defffd04 	addi	sp,sp,-12
1000dc9c:	dfc00215 	stw	ra,8(sp)
1000dca0:	df000115 	stw	fp,4(sp)
1000dca4:	df000104 	addi	fp,sp,4
1000dca8:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
1000dcac:	d1600904 	addi	r5,gp,-32732
1000dcb0:	e13fff17 	ldw	r4,-4(fp)
1000dcb4:	000e9400 	call	1000e940 <alt_dev_llist_insert>
}
1000dcb8:	e037883a 	mov	sp,fp
1000dcbc:	dfc00117 	ldw	ra,4(sp)
1000dcc0:	df000017 	ldw	fp,0(sp)
1000dcc4:	dec00204 	addi	sp,sp,8
1000dcc8:	f800283a 	ret

1000dccc <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
1000dccc:	defffd04 	addi	sp,sp,-12
1000dcd0:	dfc00215 	stw	ra,8(sp)
1000dcd4:	df000115 	stw	fp,4(sp)
1000dcd8:	df000104 	addi	fp,sp,4
1000dcdc:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
1000dce0:	000f2ec0 	call	1000f2ec <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
1000dce4:	00800044 	movi	r2,1
1000dce8:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
1000dcec:	0001883a 	nop
1000dcf0:	e037883a 	mov	sp,fp
1000dcf4:	dfc00117 	ldw	ra,4(sp)
1000dcf8:	df000017 	ldw	fp,0(sp)
1000dcfc:	dec00204 	addi	sp,sp,8
1000dd00:	f800283a 	ret

1000dd04 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
1000dd04:	defffe04 	addi	sp,sp,-8
1000dd08:	dfc00115 	stw	ra,4(sp)
1000dd0c:	df000015 	stw	fp,0(sp)
1000dd10:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
1000dd14:	000d883a 	mov	r6,zero
1000dd18:	000b883a 	mov	r5,zero
1000dd1c:	01040074 	movhi	r4,4097
1000dd20:	2101c704 	addi	r4,r4,1820
1000dd24:	000deb40 	call	1000deb4 <altera_avalon_jtag_uart_init>
1000dd28:	01040074 	movhi	r4,4097
1000dd2c:	2101bd04 	addi	r4,r4,1780
1000dd30:	000dc980 	call	1000dc98 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS_0, sysid_qsys_0);
1000dd34:	0001883a 	nop
}
1000dd38:	0001883a 	nop
1000dd3c:	e037883a 	mov	sp,fp
1000dd40:	dfc00117 	ldw	ra,4(sp)
1000dd44:	df000017 	ldw	fp,0(sp)
1000dd48:	dec00204 	addi	sp,sp,8
1000dd4c:	f800283a 	ret

1000dd50 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
1000dd50:	defffa04 	addi	sp,sp,-24
1000dd54:	dfc00515 	stw	ra,20(sp)
1000dd58:	df000415 	stw	fp,16(sp)
1000dd5c:	df000404 	addi	fp,sp,16
1000dd60:	e13ffd15 	stw	r4,-12(fp)
1000dd64:	e17ffe15 	stw	r5,-8(fp)
1000dd68:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
1000dd6c:	e0bffd17 	ldw	r2,-12(fp)
1000dd70:	10800017 	ldw	r2,0(r2)
1000dd74:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
1000dd78:	e0bffc17 	ldw	r2,-16(fp)
1000dd7c:	10c00a04 	addi	r3,r2,40
1000dd80:	e0bffd17 	ldw	r2,-12(fp)
1000dd84:	10800217 	ldw	r2,8(r2)
1000dd88:	100f883a 	mov	r7,r2
1000dd8c:	e1bfff17 	ldw	r6,-4(fp)
1000dd90:	e17ffe17 	ldw	r5,-8(fp)
1000dd94:	1809883a 	mov	r4,r3
1000dd98:	000e3780 	call	1000e378 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
1000dd9c:	e037883a 	mov	sp,fp
1000dda0:	dfc00117 	ldw	ra,4(sp)
1000dda4:	df000017 	ldw	fp,0(sp)
1000dda8:	dec00204 	addi	sp,sp,8
1000ddac:	f800283a 	ret

1000ddb0 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
1000ddb0:	defffa04 	addi	sp,sp,-24
1000ddb4:	dfc00515 	stw	ra,20(sp)
1000ddb8:	df000415 	stw	fp,16(sp)
1000ddbc:	df000404 	addi	fp,sp,16
1000ddc0:	e13ffd15 	stw	r4,-12(fp)
1000ddc4:	e17ffe15 	stw	r5,-8(fp)
1000ddc8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
1000ddcc:	e0bffd17 	ldw	r2,-12(fp)
1000ddd0:	10800017 	ldw	r2,0(r2)
1000ddd4:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
1000ddd8:	e0bffc17 	ldw	r2,-16(fp)
1000dddc:	10c00a04 	addi	r3,r2,40
1000dde0:	e0bffd17 	ldw	r2,-12(fp)
1000dde4:	10800217 	ldw	r2,8(r2)
1000dde8:	100f883a 	mov	r7,r2
1000ddec:	e1bfff17 	ldw	r6,-4(fp)
1000ddf0:	e17ffe17 	ldw	r5,-8(fp)
1000ddf4:	1809883a 	mov	r4,r3
1000ddf8:	000e5940 	call	1000e594 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
1000ddfc:	e037883a 	mov	sp,fp
1000de00:	dfc00117 	ldw	ra,4(sp)
1000de04:	df000017 	ldw	fp,0(sp)
1000de08:	dec00204 	addi	sp,sp,8
1000de0c:	f800283a 	ret

1000de10 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
1000de10:	defffc04 	addi	sp,sp,-16
1000de14:	dfc00315 	stw	ra,12(sp)
1000de18:	df000215 	stw	fp,8(sp)
1000de1c:	df000204 	addi	fp,sp,8
1000de20:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
1000de24:	e0bfff17 	ldw	r2,-4(fp)
1000de28:	10800017 	ldw	r2,0(r2)
1000de2c:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
1000de30:	e0bffe17 	ldw	r2,-8(fp)
1000de34:	10c00a04 	addi	r3,r2,40
1000de38:	e0bfff17 	ldw	r2,-4(fp)
1000de3c:	10800217 	ldw	r2,8(r2)
1000de40:	100b883a 	mov	r5,r2
1000de44:	1809883a 	mov	r4,r3
1000de48:	000e2200 	call	1000e220 <altera_avalon_jtag_uart_close>
}
1000de4c:	e037883a 	mov	sp,fp
1000de50:	dfc00117 	ldw	ra,4(sp)
1000de54:	df000017 	ldw	fp,0(sp)
1000de58:	dec00204 	addi	sp,sp,8
1000de5c:	f800283a 	ret

1000de60 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
1000de60:	defffa04 	addi	sp,sp,-24
1000de64:	dfc00515 	stw	ra,20(sp)
1000de68:	df000415 	stw	fp,16(sp)
1000de6c:	df000404 	addi	fp,sp,16
1000de70:	e13ffd15 	stw	r4,-12(fp)
1000de74:	e17ffe15 	stw	r5,-8(fp)
1000de78:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
1000de7c:	e0bffd17 	ldw	r2,-12(fp)
1000de80:	10800017 	ldw	r2,0(r2)
1000de84:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
1000de88:	e0bffc17 	ldw	r2,-16(fp)
1000de8c:	10800a04 	addi	r2,r2,40
1000de90:	e1bfff17 	ldw	r6,-4(fp)
1000de94:	e17ffe17 	ldw	r5,-8(fp)
1000de98:	1009883a 	mov	r4,r2
1000de9c:	000e2880 	call	1000e288 <altera_avalon_jtag_uart_ioctl>
}
1000dea0:	e037883a 	mov	sp,fp
1000dea4:	dfc00117 	ldw	ra,4(sp)
1000dea8:	df000017 	ldw	fp,0(sp)
1000deac:	dec00204 	addi	sp,sp,8
1000deb0:	f800283a 	ret

1000deb4 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
1000deb4:	defffa04 	addi	sp,sp,-24
1000deb8:	dfc00515 	stw	ra,20(sp)
1000debc:	df000415 	stw	fp,16(sp)
1000dec0:	df000404 	addi	fp,sp,16
1000dec4:	e13ffd15 	stw	r4,-12(fp)
1000dec8:	e17ffe15 	stw	r5,-8(fp)
1000decc:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
1000ded0:	e0bffd17 	ldw	r2,-12(fp)
1000ded4:	00c00044 	movi	r3,1
1000ded8:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
1000dedc:	e0bffd17 	ldw	r2,-12(fp)
1000dee0:	10800017 	ldw	r2,0(r2)
1000dee4:	10800104 	addi	r2,r2,4
1000dee8:	1007883a 	mov	r3,r2
1000deec:	e0bffd17 	ldw	r2,-12(fp)
1000def0:	10800817 	ldw	r2,32(r2)
1000def4:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
1000def8:	e0bffe17 	ldw	r2,-8(fp)
1000defc:	e0ffff17 	ldw	r3,-4(fp)
1000df00:	d8000015 	stw	zero,0(sp)
1000df04:	e1fffd17 	ldw	r7,-12(fp)
1000df08:	01840074 	movhi	r6,4097
1000df0c:	31b7dd04 	addi	r6,r6,-8332
1000df10:	180b883a 	mov	r5,r3
1000df14:	1009883a 	mov	r4,r2
1000df18:	000eac40 	call	1000eac4 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
1000df1c:	e0bffd17 	ldw	r2,-12(fp)
1000df20:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
1000df24:	e0bffd17 	ldw	r2,-12(fp)
1000df28:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
1000df2c:	d0e6d817 	ldw	r3,-25760(gp)
1000df30:	e1fffd17 	ldw	r7,-12(fp)
1000df34:	01840074 	movhi	r6,4097
1000df38:	31b86004 	addi	r6,r6,-7808
1000df3c:	180b883a 	mov	r5,r3
1000df40:	1009883a 	mov	r4,r2
1000df44:	000e7b80 	call	1000e7b8 <alt_alarm_start>
1000df48:	1000040e 	bge	r2,zero,1000df5c <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
1000df4c:	e0fffd17 	ldw	r3,-12(fp)
1000df50:	00a00034 	movhi	r2,32768
1000df54:	10bfffc4 	addi	r2,r2,-1
1000df58:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
1000df5c:	0001883a 	nop
1000df60:	e037883a 	mov	sp,fp
1000df64:	dfc00117 	ldw	ra,4(sp)
1000df68:	df000017 	ldw	fp,0(sp)
1000df6c:	dec00204 	addi	sp,sp,8
1000df70:	f800283a 	ret

1000df74 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
1000df74:	defff804 	addi	sp,sp,-32
1000df78:	df000715 	stw	fp,28(sp)
1000df7c:	df000704 	addi	fp,sp,28
1000df80:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
1000df84:	e0bfff17 	ldw	r2,-4(fp)
1000df88:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
1000df8c:	e0bffb17 	ldw	r2,-20(fp)
1000df90:	10800017 	ldw	r2,0(r2)
1000df94:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
1000df98:	e0bffc17 	ldw	r2,-16(fp)
1000df9c:	10800104 	addi	r2,r2,4
1000dfa0:	10800037 	ldwio	r2,0(r2)
1000dfa4:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
1000dfa8:	e0bffd17 	ldw	r2,-12(fp)
1000dfac:	1080c00c 	andi	r2,r2,768
1000dfb0:	10006d26 	beq	r2,zero,1000e168 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
1000dfb4:	e0bffd17 	ldw	r2,-12(fp)
1000dfb8:	1080400c 	andi	r2,r2,256
1000dfbc:	10003526 	beq	r2,zero,1000e094 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
1000dfc0:	00800074 	movhi	r2,1
1000dfc4:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1000dfc8:	e0bffb17 	ldw	r2,-20(fp)
1000dfcc:	10800a17 	ldw	r2,40(r2)
1000dfd0:	10800044 	addi	r2,r2,1
1000dfd4:	1081ffcc 	andi	r2,r2,2047
1000dfd8:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
1000dfdc:	e0bffb17 	ldw	r2,-20(fp)
1000dfe0:	10c00b17 	ldw	r3,44(r2)
1000dfe4:	e0bffe17 	ldw	r2,-8(fp)
1000dfe8:	18801526 	beq	r3,r2,1000e040 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
1000dfec:	e0bffc17 	ldw	r2,-16(fp)
1000dff0:	10800037 	ldwio	r2,0(r2)
1000dff4:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
1000dff8:	e0bff917 	ldw	r2,-28(fp)
1000dffc:	10a0000c 	andi	r2,r2,32768
1000e000:	10001126 	beq	r2,zero,1000e048 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
1000e004:	e0bffb17 	ldw	r2,-20(fp)
1000e008:	10800a17 	ldw	r2,40(r2)
1000e00c:	e0fff917 	ldw	r3,-28(fp)
1000e010:	1809883a 	mov	r4,r3
1000e014:	e0fffb17 	ldw	r3,-20(fp)
1000e018:	1885883a 	add	r2,r3,r2
1000e01c:	10800e04 	addi	r2,r2,56
1000e020:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1000e024:	e0bffb17 	ldw	r2,-20(fp)
1000e028:	10800a17 	ldw	r2,40(r2)
1000e02c:	10800044 	addi	r2,r2,1
1000e030:	10c1ffcc 	andi	r3,r2,2047
1000e034:	e0bffb17 	ldw	r2,-20(fp)
1000e038:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
1000e03c:	003fe206 	br	1000dfc8 <__alt_data_end+0xf800dfc8>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
1000e040:	0001883a 	nop
1000e044:	00000106 	br	1000e04c <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
1000e048:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
1000e04c:	e0bff917 	ldw	r2,-28(fp)
1000e050:	10bfffec 	andhi	r2,r2,65535
1000e054:	10000f26 	beq	r2,zero,1000e094 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
1000e058:	e0bffb17 	ldw	r2,-20(fp)
1000e05c:	10c00817 	ldw	r3,32(r2)
1000e060:	00bfff84 	movi	r2,-2
1000e064:	1886703a 	and	r3,r3,r2
1000e068:	e0bffb17 	ldw	r2,-20(fp)
1000e06c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
1000e070:	e0bffc17 	ldw	r2,-16(fp)
1000e074:	10800104 	addi	r2,r2,4
1000e078:	1007883a 	mov	r3,r2
1000e07c:	e0bffb17 	ldw	r2,-20(fp)
1000e080:	10800817 	ldw	r2,32(r2)
1000e084:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
1000e088:	e0bffc17 	ldw	r2,-16(fp)
1000e08c:	10800104 	addi	r2,r2,4
1000e090:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
1000e094:	e0bffd17 	ldw	r2,-12(fp)
1000e098:	1080800c 	andi	r2,r2,512
1000e09c:	103fbe26 	beq	r2,zero,1000df98 <__alt_data_end+0xf800df98>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
1000e0a0:	e0bffd17 	ldw	r2,-12(fp)
1000e0a4:	1004d43a 	srli	r2,r2,16
1000e0a8:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
1000e0ac:	00001406 	br	1000e100 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
1000e0b0:	e0bffc17 	ldw	r2,-16(fp)
1000e0b4:	e0fffb17 	ldw	r3,-20(fp)
1000e0b8:	18c00d17 	ldw	r3,52(r3)
1000e0bc:	e13ffb17 	ldw	r4,-20(fp)
1000e0c0:	20c7883a 	add	r3,r4,r3
1000e0c4:	18c20e04 	addi	r3,r3,2104
1000e0c8:	18c00003 	ldbu	r3,0(r3)
1000e0cc:	18c03fcc 	andi	r3,r3,255
1000e0d0:	18c0201c 	xori	r3,r3,128
1000e0d4:	18ffe004 	addi	r3,r3,-128
1000e0d8:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1000e0dc:	e0bffb17 	ldw	r2,-20(fp)
1000e0e0:	10800d17 	ldw	r2,52(r2)
1000e0e4:	10800044 	addi	r2,r2,1
1000e0e8:	10c1ffcc 	andi	r3,r2,2047
1000e0ec:	e0bffb17 	ldw	r2,-20(fp)
1000e0f0:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
1000e0f4:	e0bffa17 	ldw	r2,-24(fp)
1000e0f8:	10bfffc4 	addi	r2,r2,-1
1000e0fc:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
1000e100:	e0bffa17 	ldw	r2,-24(fp)
1000e104:	10000526 	beq	r2,zero,1000e11c <altera_avalon_jtag_uart_irq+0x1a8>
1000e108:	e0bffb17 	ldw	r2,-20(fp)
1000e10c:	10c00d17 	ldw	r3,52(r2)
1000e110:	e0bffb17 	ldw	r2,-20(fp)
1000e114:	10800c17 	ldw	r2,48(r2)
1000e118:	18bfe51e 	bne	r3,r2,1000e0b0 <__alt_data_end+0xf800e0b0>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
1000e11c:	e0bffa17 	ldw	r2,-24(fp)
1000e120:	103f9d26 	beq	r2,zero,1000df98 <__alt_data_end+0xf800df98>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
1000e124:	e0bffb17 	ldw	r2,-20(fp)
1000e128:	10c00817 	ldw	r3,32(r2)
1000e12c:	00bfff44 	movi	r2,-3
1000e130:	1886703a 	and	r3,r3,r2
1000e134:	e0bffb17 	ldw	r2,-20(fp)
1000e138:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
1000e13c:	e0bffb17 	ldw	r2,-20(fp)
1000e140:	10800017 	ldw	r2,0(r2)
1000e144:	10800104 	addi	r2,r2,4
1000e148:	1007883a 	mov	r3,r2
1000e14c:	e0bffb17 	ldw	r2,-20(fp)
1000e150:	10800817 	ldw	r2,32(r2)
1000e154:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
1000e158:	e0bffc17 	ldw	r2,-16(fp)
1000e15c:	10800104 	addi	r2,r2,4
1000e160:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
1000e164:	003f8c06 	br	1000df98 <__alt_data_end+0xf800df98>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
1000e168:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
1000e16c:	0001883a 	nop
1000e170:	e037883a 	mov	sp,fp
1000e174:	df000017 	ldw	fp,0(sp)
1000e178:	dec00104 	addi	sp,sp,4
1000e17c:	f800283a 	ret

1000e180 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
1000e180:	defff804 	addi	sp,sp,-32
1000e184:	df000715 	stw	fp,28(sp)
1000e188:	df000704 	addi	fp,sp,28
1000e18c:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
1000e190:	e0bffb17 	ldw	r2,-20(fp)
1000e194:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
1000e198:	e0bff917 	ldw	r2,-28(fp)
1000e19c:	10800017 	ldw	r2,0(r2)
1000e1a0:	10800104 	addi	r2,r2,4
1000e1a4:	10800037 	ldwio	r2,0(r2)
1000e1a8:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
1000e1ac:	e0bffa17 	ldw	r2,-24(fp)
1000e1b0:	1081000c 	andi	r2,r2,1024
1000e1b4:	10000b26 	beq	r2,zero,1000e1e4 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
1000e1b8:	e0bff917 	ldw	r2,-28(fp)
1000e1bc:	10800017 	ldw	r2,0(r2)
1000e1c0:	10800104 	addi	r2,r2,4
1000e1c4:	1007883a 	mov	r3,r2
1000e1c8:	e0bff917 	ldw	r2,-28(fp)
1000e1cc:	10800817 	ldw	r2,32(r2)
1000e1d0:	10810014 	ori	r2,r2,1024
1000e1d4:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
1000e1d8:	e0bff917 	ldw	r2,-28(fp)
1000e1dc:	10000915 	stw	zero,36(r2)
1000e1e0:	00000a06 	br	1000e20c <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
1000e1e4:	e0bff917 	ldw	r2,-28(fp)
1000e1e8:	10c00917 	ldw	r3,36(r2)
1000e1ec:	00a00034 	movhi	r2,32768
1000e1f0:	10bfff04 	addi	r2,r2,-4
1000e1f4:	10c00536 	bltu	r2,r3,1000e20c <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
1000e1f8:	e0bff917 	ldw	r2,-28(fp)
1000e1fc:	10800917 	ldw	r2,36(r2)
1000e200:	10c00044 	addi	r3,r2,1
1000e204:	e0bff917 	ldw	r2,-28(fp)
1000e208:	10c00915 	stw	r3,36(r2)
1000e20c:	d0a6d817 	ldw	r2,-25760(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
1000e210:	e037883a 	mov	sp,fp
1000e214:	df000017 	ldw	fp,0(sp)
1000e218:	dec00104 	addi	sp,sp,4
1000e21c:	f800283a 	ret

1000e220 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
1000e220:	defffd04 	addi	sp,sp,-12
1000e224:	df000215 	stw	fp,8(sp)
1000e228:	df000204 	addi	fp,sp,8
1000e22c:	e13ffe15 	stw	r4,-8(fp)
1000e230:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
1000e234:	00000506 	br	1000e24c <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
1000e238:	e0bfff17 	ldw	r2,-4(fp)
1000e23c:	1090000c 	andi	r2,r2,16384
1000e240:	10000226 	beq	r2,zero,1000e24c <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
1000e244:	00bffd44 	movi	r2,-11
1000e248:	00000b06 	br	1000e278 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
1000e24c:	e0bffe17 	ldw	r2,-8(fp)
1000e250:	10c00d17 	ldw	r3,52(r2)
1000e254:	e0bffe17 	ldw	r2,-8(fp)
1000e258:	10800c17 	ldw	r2,48(r2)
1000e25c:	18800526 	beq	r3,r2,1000e274 <altera_avalon_jtag_uart_close+0x54>
1000e260:	e0bffe17 	ldw	r2,-8(fp)
1000e264:	10c00917 	ldw	r3,36(r2)
1000e268:	e0bffe17 	ldw	r2,-8(fp)
1000e26c:	10800117 	ldw	r2,4(r2)
1000e270:	18bff136 	bltu	r3,r2,1000e238 <__alt_data_end+0xf800e238>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
1000e274:	0005883a 	mov	r2,zero
}
1000e278:	e037883a 	mov	sp,fp
1000e27c:	df000017 	ldw	fp,0(sp)
1000e280:	dec00104 	addi	sp,sp,4
1000e284:	f800283a 	ret

1000e288 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
1000e288:	defffa04 	addi	sp,sp,-24
1000e28c:	df000515 	stw	fp,20(sp)
1000e290:	df000504 	addi	fp,sp,20
1000e294:	e13ffd15 	stw	r4,-12(fp)
1000e298:	e17ffe15 	stw	r5,-8(fp)
1000e29c:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
1000e2a0:	00bff9c4 	movi	r2,-25
1000e2a4:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
1000e2a8:	e0bffe17 	ldw	r2,-8(fp)
1000e2ac:	10da8060 	cmpeqi	r3,r2,27137
1000e2b0:	1800031e 	bne	r3,zero,1000e2c0 <altera_avalon_jtag_uart_ioctl+0x38>
1000e2b4:	109a80a0 	cmpeqi	r2,r2,27138
1000e2b8:	1000181e 	bne	r2,zero,1000e31c <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
1000e2bc:	00002906 	br	1000e364 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
1000e2c0:	e0bffd17 	ldw	r2,-12(fp)
1000e2c4:	10c00117 	ldw	r3,4(r2)
1000e2c8:	00a00034 	movhi	r2,32768
1000e2cc:	10bfffc4 	addi	r2,r2,-1
1000e2d0:	18802126 	beq	r3,r2,1000e358 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
1000e2d4:	e0bfff17 	ldw	r2,-4(fp)
1000e2d8:	10800017 	ldw	r2,0(r2)
1000e2dc:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
1000e2e0:	e0bffc17 	ldw	r2,-16(fp)
1000e2e4:	10800090 	cmplti	r2,r2,2
1000e2e8:	1000061e 	bne	r2,zero,1000e304 <altera_avalon_jtag_uart_ioctl+0x7c>
1000e2ec:	e0fffc17 	ldw	r3,-16(fp)
1000e2f0:	00a00034 	movhi	r2,32768
1000e2f4:	10bfffc4 	addi	r2,r2,-1
1000e2f8:	18800226 	beq	r3,r2,1000e304 <altera_avalon_jtag_uart_ioctl+0x7c>
1000e2fc:	e0bffc17 	ldw	r2,-16(fp)
1000e300:	00000206 	br	1000e30c <altera_avalon_jtag_uart_ioctl+0x84>
1000e304:	00a00034 	movhi	r2,32768
1000e308:	10bfff84 	addi	r2,r2,-2
1000e30c:	e0fffd17 	ldw	r3,-12(fp)
1000e310:	18800115 	stw	r2,4(r3)
      rc = 0;
1000e314:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
1000e318:	00000f06 	br	1000e358 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
1000e31c:	e0bffd17 	ldw	r2,-12(fp)
1000e320:	10c00117 	ldw	r3,4(r2)
1000e324:	00a00034 	movhi	r2,32768
1000e328:	10bfffc4 	addi	r2,r2,-1
1000e32c:	18800c26 	beq	r3,r2,1000e360 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
1000e330:	e0bffd17 	ldw	r2,-12(fp)
1000e334:	10c00917 	ldw	r3,36(r2)
1000e338:	e0bffd17 	ldw	r2,-12(fp)
1000e33c:	10800117 	ldw	r2,4(r2)
1000e340:	1885803a 	cmpltu	r2,r3,r2
1000e344:	10c03fcc 	andi	r3,r2,255
1000e348:	e0bfff17 	ldw	r2,-4(fp)
1000e34c:	10c00015 	stw	r3,0(r2)
      rc = 0;
1000e350:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
1000e354:	00000206 	br	1000e360 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
1000e358:	0001883a 	nop
1000e35c:	00000106 	br	1000e364 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
1000e360:	0001883a 	nop

  default:
    break;
  }

  return rc;
1000e364:	e0bffb17 	ldw	r2,-20(fp)
}
1000e368:	e037883a 	mov	sp,fp
1000e36c:	df000017 	ldw	fp,0(sp)
1000e370:	dec00104 	addi	sp,sp,4
1000e374:	f800283a 	ret

1000e378 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
1000e378:	defff304 	addi	sp,sp,-52
1000e37c:	dfc00c15 	stw	ra,48(sp)
1000e380:	df000b15 	stw	fp,44(sp)
1000e384:	df000b04 	addi	fp,sp,44
1000e388:	e13ffc15 	stw	r4,-16(fp)
1000e38c:	e17ffd15 	stw	r5,-12(fp)
1000e390:	e1bffe15 	stw	r6,-8(fp)
1000e394:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
1000e398:	e0bffd17 	ldw	r2,-12(fp)
1000e39c:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
1000e3a0:	00004706 	br	1000e4c0 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
1000e3a4:	e0bffc17 	ldw	r2,-16(fp)
1000e3a8:	10800a17 	ldw	r2,40(r2)
1000e3ac:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
1000e3b0:	e0bffc17 	ldw	r2,-16(fp)
1000e3b4:	10800b17 	ldw	r2,44(r2)
1000e3b8:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
1000e3bc:	e0fff717 	ldw	r3,-36(fp)
1000e3c0:	e0bff817 	ldw	r2,-32(fp)
1000e3c4:	18800536 	bltu	r3,r2,1000e3dc <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
1000e3c8:	e0fff717 	ldw	r3,-36(fp)
1000e3cc:	e0bff817 	ldw	r2,-32(fp)
1000e3d0:	1885c83a 	sub	r2,r3,r2
1000e3d4:	e0bff615 	stw	r2,-40(fp)
1000e3d8:	00000406 	br	1000e3ec <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
1000e3dc:	00c20004 	movi	r3,2048
1000e3e0:	e0bff817 	ldw	r2,-32(fp)
1000e3e4:	1885c83a 	sub	r2,r3,r2
1000e3e8:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
1000e3ec:	e0bff617 	ldw	r2,-40(fp)
1000e3f0:	10001e26 	beq	r2,zero,1000e46c <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
1000e3f4:	e0fffe17 	ldw	r3,-8(fp)
1000e3f8:	e0bff617 	ldw	r2,-40(fp)
1000e3fc:	1880022e 	bgeu	r3,r2,1000e408 <altera_avalon_jtag_uart_read+0x90>
        n = space;
1000e400:	e0bffe17 	ldw	r2,-8(fp)
1000e404:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
1000e408:	e0bffc17 	ldw	r2,-16(fp)
1000e40c:	10c00e04 	addi	r3,r2,56
1000e410:	e0bff817 	ldw	r2,-32(fp)
1000e414:	1885883a 	add	r2,r3,r2
1000e418:	e1bff617 	ldw	r6,-40(fp)
1000e41c:	100b883a 	mov	r5,r2
1000e420:	e13ff517 	ldw	r4,-44(fp)
1000e424:	00058f00 	call	100058f0 <memcpy>
      ptr   += n;
1000e428:	e0fff517 	ldw	r3,-44(fp)
1000e42c:	e0bff617 	ldw	r2,-40(fp)
1000e430:	1885883a 	add	r2,r3,r2
1000e434:	e0bff515 	stw	r2,-44(fp)
      space -= n;
1000e438:	e0fffe17 	ldw	r3,-8(fp)
1000e43c:	e0bff617 	ldw	r2,-40(fp)
1000e440:	1885c83a 	sub	r2,r3,r2
1000e444:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1000e448:	e0fff817 	ldw	r3,-32(fp)
1000e44c:	e0bff617 	ldw	r2,-40(fp)
1000e450:	1885883a 	add	r2,r3,r2
1000e454:	10c1ffcc 	andi	r3,r2,2047
1000e458:	e0bffc17 	ldw	r2,-16(fp)
1000e45c:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
1000e460:	e0bffe17 	ldw	r2,-8(fp)
1000e464:	00bfcf16 	blt	zero,r2,1000e3a4 <__alt_data_end+0xf800e3a4>
1000e468:	00000106 	br	1000e470 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
1000e46c:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
1000e470:	e0fff517 	ldw	r3,-44(fp)
1000e474:	e0bffd17 	ldw	r2,-12(fp)
1000e478:	1880141e 	bne	r3,r2,1000e4cc <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
1000e47c:	e0bfff17 	ldw	r2,-4(fp)
1000e480:	1090000c 	andi	r2,r2,16384
1000e484:	1000131e 	bne	r2,zero,1000e4d4 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
1000e488:	0001883a 	nop
1000e48c:	e0bffc17 	ldw	r2,-16(fp)
1000e490:	10c00a17 	ldw	r3,40(r2)
1000e494:	e0bff717 	ldw	r2,-36(fp)
1000e498:	1880051e 	bne	r3,r2,1000e4b0 <altera_avalon_jtag_uart_read+0x138>
1000e49c:	e0bffc17 	ldw	r2,-16(fp)
1000e4a0:	10c00917 	ldw	r3,36(r2)
1000e4a4:	e0bffc17 	ldw	r2,-16(fp)
1000e4a8:	10800117 	ldw	r2,4(r2)
1000e4ac:	18bff736 	bltu	r3,r2,1000e48c <__alt_data_end+0xf800e48c>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
1000e4b0:	e0bffc17 	ldw	r2,-16(fp)
1000e4b4:	10c00a17 	ldw	r3,40(r2)
1000e4b8:	e0bff717 	ldw	r2,-36(fp)
1000e4bc:	18800726 	beq	r3,r2,1000e4dc <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
1000e4c0:	e0bffe17 	ldw	r2,-8(fp)
1000e4c4:	00bfb716 	blt	zero,r2,1000e3a4 <__alt_data_end+0xf800e3a4>
1000e4c8:	00000506 	br	1000e4e0 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
1000e4cc:	0001883a 	nop
1000e4d0:	00000306 	br	1000e4e0 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
1000e4d4:	0001883a 	nop
1000e4d8:	00000106 	br	1000e4e0 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
1000e4dc:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
1000e4e0:	e0fff517 	ldw	r3,-44(fp)
1000e4e4:	e0bffd17 	ldw	r2,-12(fp)
1000e4e8:	18801826 	beq	r3,r2,1000e54c <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1000e4ec:	0005303a 	rdctl	r2,status
1000e4f0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1000e4f4:	e0fffb17 	ldw	r3,-20(fp)
1000e4f8:	00bfff84 	movi	r2,-2
1000e4fc:	1884703a 	and	r2,r3,r2
1000e500:	1001703a 	wrctl	status,r2
  
  return context;
1000e504:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
1000e508:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
1000e50c:	e0bffc17 	ldw	r2,-16(fp)
1000e510:	10800817 	ldw	r2,32(r2)
1000e514:	10c00054 	ori	r3,r2,1
1000e518:	e0bffc17 	ldw	r2,-16(fp)
1000e51c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
1000e520:	e0bffc17 	ldw	r2,-16(fp)
1000e524:	10800017 	ldw	r2,0(r2)
1000e528:	10800104 	addi	r2,r2,4
1000e52c:	1007883a 	mov	r3,r2
1000e530:	e0bffc17 	ldw	r2,-16(fp)
1000e534:	10800817 	ldw	r2,32(r2)
1000e538:	18800035 	stwio	r2,0(r3)
1000e53c:	e0bffa17 	ldw	r2,-24(fp)
1000e540:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1000e544:	e0bff917 	ldw	r2,-28(fp)
1000e548:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
1000e54c:	e0fff517 	ldw	r3,-44(fp)
1000e550:	e0bffd17 	ldw	r2,-12(fp)
1000e554:	18800426 	beq	r3,r2,1000e568 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
1000e558:	e0fff517 	ldw	r3,-44(fp)
1000e55c:	e0bffd17 	ldw	r2,-12(fp)
1000e560:	1885c83a 	sub	r2,r3,r2
1000e564:	00000606 	br	1000e580 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
1000e568:	e0bfff17 	ldw	r2,-4(fp)
1000e56c:	1090000c 	andi	r2,r2,16384
1000e570:	10000226 	beq	r2,zero,1000e57c <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
1000e574:	00bffd44 	movi	r2,-11
1000e578:	00000106 	br	1000e580 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
1000e57c:	00bffec4 	movi	r2,-5
}
1000e580:	e037883a 	mov	sp,fp
1000e584:	dfc00117 	ldw	ra,4(sp)
1000e588:	df000017 	ldw	fp,0(sp)
1000e58c:	dec00204 	addi	sp,sp,8
1000e590:	f800283a 	ret

1000e594 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
1000e594:	defff304 	addi	sp,sp,-52
1000e598:	dfc00c15 	stw	ra,48(sp)
1000e59c:	df000b15 	stw	fp,44(sp)
1000e5a0:	df000b04 	addi	fp,sp,44
1000e5a4:	e13ffc15 	stw	r4,-16(fp)
1000e5a8:	e17ffd15 	stw	r5,-12(fp)
1000e5ac:	e1bffe15 	stw	r6,-8(fp)
1000e5b0:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
1000e5b4:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
1000e5b8:	e0bffd17 	ldw	r2,-12(fp)
1000e5bc:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
1000e5c0:	00003706 	br	1000e6a0 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
1000e5c4:	e0bffc17 	ldw	r2,-16(fp)
1000e5c8:	10800c17 	ldw	r2,48(r2)
1000e5cc:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
1000e5d0:	e0bffc17 	ldw	r2,-16(fp)
1000e5d4:	10800d17 	ldw	r2,52(r2)
1000e5d8:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
1000e5dc:	e0fff917 	ldw	r3,-28(fp)
1000e5e0:	e0bff517 	ldw	r2,-44(fp)
1000e5e4:	1880062e 	bgeu	r3,r2,1000e600 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
1000e5e8:	e0fff517 	ldw	r3,-44(fp)
1000e5ec:	e0bff917 	ldw	r2,-28(fp)
1000e5f0:	1885c83a 	sub	r2,r3,r2
1000e5f4:	10bfffc4 	addi	r2,r2,-1
1000e5f8:	e0bff615 	stw	r2,-40(fp)
1000e5fc:	00000b06 	br	1000e62c <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
1000e600:	e0bff517 	ldw	r2,-44(fp)
1000e604:	10000526 	beq	r2,zero,1000e61c <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
1000e608:	00c20004 	movi	r3,2048
1000e60c:	e0bff917 	ldw	r2,-28(fp)
1000e610:	1885c83a 	sub	r2,r3,r2
1000e614:	e0bff615 	stw	r2,-40(fp)
1000e618:	00000406 	br	1000e62c <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
1000e61c:	00c1ffc4 	movi	r3,2047
1000e620:	e0bff917 	ldw	r2,-28(fp)
1000e624:	1885c83a 	sub	r2,r3,r2
1000e628:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
1000e62c:	e0bff617 	ldw	r2,-40(fp)
1000e630:	10001e26 	beq	r2,zero,1000e6ac <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
1000e634:	e0fffe17 	ldw	r3,-8(fp)
1000e638:	e0bff617 	ldw	r2,-40(fp)
1000e63c:	1880022e 	bgeu	r3,r2,1000e648 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
1000e640:	e0bffe17 	ldw	r2,-8(fp)
1000e644:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
1000e648:	e0bffc17 	ldw	r2,-16(fp)
1000e64c:	10c20e04 	addi	r3,r2,2104
1000e650:	e0bff917 	ldw	r2,-28(fp)
1000e654:	1885883a 	add	r2,r3,r2
1000e658:	e1bff617 	ldw	r6,-40(fp)
1000e65c:	e17ffd17 	ldw	r5,-12(fp)
1000e660:	1009883a 	mov	r4,r2
1000e664:	00058f00 	call	100058f0 <memcpy>
      ptr   += n;
1000e668:	e0fffd17 	ldw	r3,-12(fp)
1000e66c:	e0bff617 	ldw	r2,-40(fp)
1000e670:	1885883a 	add	r2,r3,r2
1000e674:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
1000e678:	e0fffe17 	ldw	r3,-8(fp)
1000e67c:	e0bff617 	ldw	r2,-40(fp)
1000e680:	1885c83a 	sub	r2,r3,r2
1000e684:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1000e688:	e0fff917 	ldw	r3,-28(fp)
1000e68c:	e0bff617 	ldw	r2,-40(fp)
1000e690:	1885883a 	add	r2,r3,r2
1000e694:	10c1ffcc 	andi	r3,r2,2047
1000e698:	e0bffc17 	ldw	r2,-16(fp)
1000e69c:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
1000e6a0:	e0bffe17 	ldw	r2,-8(fp)
1000e6a4:	00bfc716 	blt	zero,r2,1000e5c4 <__alt_data_end+0xf800e5c4>
1000e6a8:	00000106 	br	1000e6b0 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
1000e6ac:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1000e6b0:	0005303a 	rdctl	r2,status
1000e6b4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1000e6b8:	e0fffb17 	ldw	r3,-20(fp)
1000e6bc:	00bfff84 	movi	r2,-2
1000e6c0:	1884703a 	and	r2,r3,r2
1000e6c4:	1001703a 	wrctl	status,r2
  
  return context;
1000e6c8:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
1000e6cc:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
1000e6d0:	e0bffc17 	ldw	r2,-16(fp)
1000e6d4:	10800817 	ldw	r2,32(r2)
1000e6d8:	10c00094 	ori	r3,r2,2
1000e6dc:	e0bffc17 	ldw	r2,-16(fp)
1000e6e0:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
1000e6e4:	e0bffc17 	ldw	r2,-16(fp)
1000e6e8:	10800017 	ldw	r2,0(r2)
1000e6ec:	10800104 	addi	r2,r2,4
1000e6f0:	1007883a 	mov	r3,r2
1000e6f4:	e0bffc17 	ldw	r2,-16(fp)
1000e6f8:	10800817 	ldw	r2,32(r2)
1000e6fc:	18800035 	stwio	r2,0(r3)
1000e700:	e0bffa17 	ldw	r2,-24(fp)
1000e704:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1000e708:	e0bff817 	ldw	r2,-32(fp)
1000e70c:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
1000e710:	e0bffe17 	ldw	r2,-8(fp)
1000e714:	0080100e 	bge	zero,r2,1000e758 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
1000e718:	e0bfff17 	ldw	r2,-4(fp)
1000e71c:	1090000c 	andi	r2,r2,16384
1000e720:	1000101e 	bne	r2,zero,1000e764 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
1000e724:	0001883a 	nop
1000e728:	e0bffc17 	ldw	r2,-16(fp)
1000e72c:	10c00d17 	ldw	r3,52(r2)
1000e730:	e0bff517 	ldw	r2,-44(fp)
1000e734:	1880051e 	bne	r3,r2,1000e74c <altera_avalon_jtag_uart_write+0x1b8>
1000e738:	e0bffc17 	ldw	r2,-16(fp)
1000e73c:	10c00917 	ldw	r3,36(r2)
1000e740:	e0bffc17 	ldw	r2,-16(fp)
1000e744:	10800117 	ldw	r2,4(r2)
1000e748:	18bff736 	bltu	r3,r2,1000e728 <__alt_data_end+0xf800e728>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
1000e74c:	e0bffc17 	ldw	r2,-16(fp)
1000e750:	10800917 	ldw	r2,36(r2)
1000e754:	1000051e 	bne	r2,zero,1000e76c <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
1000e758:	e0bffe17 	ldw	r2,-8(fp)
1000e75c:	00bfd016 	blt	zero,r2,1000e6a0 <__alt_data_end+0xf800e6a0>
1000e760:	00000306 	br	1000e770 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
1000e764:	0001883a 	nop
1000e768:	00000106 	br	1000e770 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
1000e76c:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
1000e770:	e0fffd17 	ldw	r3,-12(fp)
1000e774:	e0bff717 	ldw	r2,-36(fp)
1000e778:	18800426 	beq	r3,r2,1000e78c <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
1000e77c:	e0fffd17 	ldw	r3,-12(fp)
1000e780:	e0bff717 	ldw	r2,-36(fp)
1000e784:	1885c83a 	sub	r2,r3,r2
1000e788:	00000606 	br	1000e7a4 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
1000e78c:	e0bfff17 	ldw	r2,-4(fp)
1000e790:	1090000c 	andi	r2,r2,16384
1000e794:	10000226 	beq	r2,zero,1000e7a0 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
1000e798:	00bffd44 	movi	r2,-11
1000e79c:	00000106 	br	1000e7a4 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
1000e7a0:	00bffec4 	movi	r2,-5
}
1000e7a4:	e037883a 	mov	sp,fp
1000e7a8:	dfc00117 	ldw	ra,4(sp)
1000e7ac:	df000017 	ldw	fp,0(sp)
1000e7b0:	dec00204 	addi	sp,sp,8
1000e7b4:	f800283a 	ret

1000e7b8 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
1000e7b8:	defff504 	addi	sp,sp,-44
1000e7bc:	df000a15 	stw	fp,40(sp)
1000e7c0:	df000a04 	addi	fp,sp,40
1000e7c4:	e13ffc15 	stw	r4,-16(fp)
1000e7c8:	e17ffd15 	stw	r5,-12(fp)
1000e7cc:	e1bffe15 	stw	r6,-8(fp)
1000e7d0:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
1000e7d4:	e03ff615 	stw	zero,-40(fp)
1000e7d8:	d0a6d817 	ldw	r2,-25760(gp)
  
  if (alt_ticks_per_second ())
1000e7dc:	10003c26 	beq	r2,zero,1000e8d0 <alt_alarm_start+0x118>
  {
    if (alarm)
1000e7e0:	e0bffc17 	ldw	r2,-16(fp)
1000e7e4:	10003826 	beq	r2,zero,1000e8c8 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
1000e7e8:	e0bffc17 	ldw	r2,-16(fp)
1000e7ec:	e0fffe17 	ldw	r3,-8(fp)
1000e7f0:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
1000e7f4:	e0bffc17 	ldw	r2,-16(fp)
1000e7f8:	e0ffff17 	ldw	r3,-4(fp)
1000e7fc:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1000e800:	0005303a 	rdctl	r2,status
1000e804:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1000e808:	e0fff917 	ldw	r3,-28(fp)
1000e80c:	00bfff84 	movi	r2,-2
1000e810:	1884703a 	and	r2,r3,r2
1000e814:	1001703a 	wrctl	status,r2
  
  return context;
1000e818:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
1000e81c:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
1000e820:	d0a6d917 	ldw	r2,-25756(gp)
      
      current_nticks = alt_nticks();
1000e824:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
1000e828:	e0fffd17 	ldw	r3,-12(fp)
1000e82c:	e0bff617 	ldw	r2,-40(fp)
1000e830:	1885883a 	add	r2,r3,r2
1000e834:	10c00044 	addi	r3,r2,1
1000e838:	e0bffc17 	ldw	r2,-16(fp)
1000e83c:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
1000e840:	e0bffc17 	ldw	r2,-16(fp)
1000e844:	10c00217 	ldw	r3,8(r2)
1000e848:	e0bff617 	ldw	r2,-40(fp)
1000e84c:	1880042e 	bgeu	r3,r2,1000e860 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
1000e850:	e0bffc17 	ldw	r2,-16(fp)
1000e854:	00c00044 	movi	r3,1
1000e858:	10c00405 	stb	r3,16(r2)
1000e85c:	00000206 	br	1000e868 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
1000e860:	e0bffc17 	ldw	r2,-16(fp)
1000e864:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
1000e868:	e0bffc17 	ldw	r2,-16(fp)
1000e86c:	d0e00f04 	addi	r3,gp,-32708
1000e870:	e0fffa15 	stw	r3,-24(fp)
1000e874:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
1000e878:	e0bffb17 	ldw	r2,-20(fp)
1000e87c:	e0fffa17 	ldw	r3,-24(fp)
1000e880:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
1000e884:	e0bffa17 	ldw	r2,-24(fp)
1000e888:	10c00017 	ldw	r3,0(r2)
1000e88c:	e0bffb17 	ldw	r2,-20(fp)
1000e890:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
1000e894:	e0bffa17 	ldw	r2,-24(fp)
1000e898:	10800017 	ldw	r2,0(r2)
1000e89c:	e0fffb17 	ldw	r3,-20(fp)
1000e8a0:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
1000e8a4:	e0bffa17 	ldw	r2,-24(fp)
1000e8a8:	e0fffb17 	ldw	r3,-20(fp)
1000e8ac:	10c00015 	stw	r3,0(r2)
1000e8b0:	e0bff817 	ldw	r2,-32(fp)
1000e8b4:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1000e8b8:	e0bff717 	ldw	r2,-36(fp)
1000e8bc:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
1000e8c0:	0005883a 	mov	r2,zero
1000e8c4:	00000306 	br	1000e8d4 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
1000e8c8:	00bffa84 	movi	r2,-22
1000e8cc:	00000106 	br	1000e8d4 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
1000e8d0:	00bfde84 	movi	r2,-134
  }
}
1000e8d4:	e037883a 	mov	sp,fp
1000e8d8:	df000017 	ldw	fp,0(sp)
1000e8dc:	dec00104 	addi	sp,sp,4
1000e8e0:	f800283a 	ret

1000e8e4 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
1000e8e4:	deffff04 	addi	sp,sp,-4
1000e8e8:	df000015 	stw	fp,0(sp)
1000e8ec:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
1000e8f0:	0001883a 	nop
1000e8f4:	e037883a 	mov	sp,fp
1000e8f8:	df000017 	ldw	fp,0(sp)
1000e8fc:	dec00104 	addi	sp,sp,4
1000e900:	f800283a 	ret

1000e904 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1000e904:	defffe04 	addi	sp,sp,-8
1000e908:	dfc00115 	stw	ra,4(sp)
1000e90c:	df000015 	stw	fp,0(sp)
1000e910:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1000e914:	d0a00c17 	ldw	r2,-32720(gp)
1000e918:	10000326 	beq	r2,zero,1000e928 <alt_get_errno+0x24>
1000e91c:	d0a00c17 	ldw	r2,-32720(gp)
1000e920:	103ee83a 	callr	r2
1000e924:	00000106 	br	1000e92c <alt_get_errno+0x28>
1000e928:	d0a6d304 	addi	r2,gp,-25780
}
1000e92c:	e037883a 	mov	sp,fp
1000e930:	dfc00117 	ldw	ra,4(sp)
1000e934:	df000017 	ldw	fp,0(sp)
1000e938:	dec00204 	addi	sp,sp,8
1000e93c:	f800283a 	ret

1000e940 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
1000e940:	defffa04 	addi	sp,sp,-24
1000e944:	dfc00515 	stw	ra,20(sp)
1000e948:	df000415 	stw	fp,16(sp)
1000e94c:	df000404 	addi	fp,sp,16
1000e950:	e13ffe15 	stw	r4,-8(fp)
1000e954:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
1000e958:	e0bffe17 	ldw	r2,-8(fp)
1000e95c:	10000326 	beq	r2,zero,1000e96c <alt_dev_llist_insert+0x2c>
1000e960:	e0bffe17 	ldw	r2,-8(fp)
1000e964:	10800217 	ldw	r2,8(r2)
1000e968:	1000061e 	bne	r2,zero,1000e984 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
1000e96c:	000e9040 	call	1000e904 <alt_get_errno>
1000e970:	1007883a 	mov	r3,r2
1000e974:	00800584 	movi	r2,22
1000e978:	18800015 	stw	r2,0(r3)
    return -EINVAL;
1000e97c:	00bffa84 	movi	r2,-22
1000e980:	00001306 	br	1000e9d0 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
1000e984:	e0bffe17 	ldw	r2,-8(fp)
1000e988:	e0ffff17 	ldw	r3,-4(fp)
1000e98c:	e0fffc15 	stw	r3,-16(fp)
1000e990:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
1000e994:	e0bffd17 	ldw	r2,-12(fp)
1000e998:	e0fffc17 	ldw	r3,-16(fp)
1000e99c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
1000e9a0:	e0bffc17 	ldw	r2,-16(fp)
1000e9a4:	10c00017 	ldw	r3,0(r2)
1000e9a8:	e0bffd17 	ldw	r2,-12(fp)
1000e9ac:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
1000e9b0:	e0bffc17 	ldw	r2,-16(fp)
1000e9b4:	10800017 	ldw	r2,0(r2)
1000e9b8:	e0fffd17 	ldw	r3,-12(fp)
1000e9bc:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
1000e9c0:	e0bffc17 	ldw	r2,-16(fp)
1000e9c4:	e0fffd17 	ldw	r3,-12(fp)
1000e9c8:	10c00015 	stw	r3,0(r2)

  return 0;  
1000e9cc:	0005883a 	mov	r2,zero
}
1000e9d0:	e037883a 	mov	sp,fp
1000e9d4:	dfc00117 	ldw	ra,4(sp)
1000e9d8:	df000017 	ldw	fp,0(sp)
1000e9dc:	dec00204 	addi	sp,sp,8
1000e9e0:	f800283a 	ret

1000e9e4 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
1000e9e4:	defffd04 	addi	sp,sp,-12
1000e9e8:	dfc00215 	stw	ra,8(sp)
1000e9ec:	df000115 	stw	fp,4(sp)
1000e9f0:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
1000e9f4:	00840074 	movhi	r2,4097
1000e9f8:	10be6604 	addi	r2,r2,-1640
1000e9fc:	e0bfff15 	stw	r2,-4(fp)
1000ea00:	00000606 	br	1000ea1c <_do_ctors+0x38>
        (*ctor) (); 
1000ea04:	e0bfff17 	ldw	r2,-4(fp)
1000ea08:	10800017 	ldw	r2,0(r2)
1000ea0c:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
1000ea10:	e0bfff17 	ldw	r2,-4(fp)
1000ea14:	10bfff04 	addi	r2,r2,-4
1000ea18:	e0bfff15 	stw	r2,-4(fp)
1000ea1c:	e0ffff17 	ldw	r3,-4(fp)
1000ea20:	00840074 	movhi	r2,4097
1000ea24:	10be6704 	addi	r2,r2,-1636
1000ea28:	18bff62e 	bgeu	r3,r2,1000ea04 <__alt_data_end+0xf800ea04>
        (*ctor) (); 
}
1000ea2c:	0001883a 	nop
1000ea30:	e037883a 	mov	sp,fp
1000ea34:	dfc00117 	ldw	ra,4(sp)
1000ea38:	df000017 	ldw	fp,0(sp)
1000ea3c:	dec00204 	addi	sp,sp,8
1000ea40:	f800283a 	ret

1000ea44 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
1000ea44:	defffd04 	addi	sp,sp,-12
1000ea48:	dfc00215 	stw	ra,8(sp)
1000ea4c:	df000115 	stw	fp,4(sp)
1000ea50:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
1000ea54:	00840074 	movhi	r2,4097
1000ea58:	10be6604 	addi	r2,r2,-1640
1000ea5c:	e0bfff15 	stw	r2,-4(fp)
1000ea60:	00000606 	br	1000ea7c <_do_dtors+0x38>
        (*dtor) (); 
1000ea64:	e0bfff17 	ldw	r2,-4(fp)
1000ea68:	10800017 	ldw	r2,0(r2)
1000ea6c:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
1000ea70:	e0bfff17 	ldw	r2,-4(fp)
1000ea74:	10bfff04 	addi	r2,r2,-4
1000ea78:	e0bfff15 	stw	r2,-4(fp)
1000ea7c:	e0ffff17 	ldw	r3,-4(fp)
1000ea80:	00840074 	movhi	r2,4097
1000ea84:	10be6704 	addi	r2,r2,-1636
1000ea88:	18bff62e 	bgeu	r3,r2,1000ea64 <__alt_data_end+0xf800ea64>
        (*dtor) (); 
}
1000ea8c:	0001883a 	nop
1000ea90:	e037883a 	mov	sp,fp
1000ea94:	dfc00117 	ldw	ra,4(sp)
1000ea98:	df000017 	ldw	fp,0(sp)
1000ea9c:	dec00204 	addi	sp,sp,8
1000eaa0:	f800283a 	ret

1000eaa4 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
1000eaa4:	deffff04 	addi	sp,sp,-4
1000eaa8:	df000015 	stw	fp,0(sp)
1000eaac:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
1000eab0:	0001883a 	nop
1000eab4:	e037883a 	mov	sp,fp
1000eab8:	df000017 	ldw	fp,0(sp)
1000eabc:	dec00104 	addi	sp,sp,4
1000eac0:	f800283a 	ret

1000eac4 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
1000eac4:	defff904 	addi	sp,sp,-28
1000eac8:	dfc00615 	stw	ra,24(sp)
1000eacc:	df000515 	stw	fp,20(sp)
1000ead0:	df000504 	addi	fp,sp,20
1000ead4:	e13ffc15 	stw	r4,-16(fp)
1000ead8:	e17ffd15 	stw	r5,-12(fp)
1000eadc:	e1bffe15 	stw	r6,-8(fp)
1000eae0:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
1000eae4:	e0800217 	ldw	r2,8(fp)
1000eae8:	d8800015 	stw	r2,0(sp)
1000eaec:	e1ffff17 	ldw	r7,-4(fp)
1000eaf0:	e1bffe17 	ldw	r6,-8(fp)
1000eaf4:	e17ffd17 	ldw	r5,-12(fp)
1000eaf8:	e13ffc17 	ldw	r4,-16(fp)
1000eafc:	000ec740 	call	1000ec74 <alt_iic_isr_register>
}  
1000eb00:	e037883a 	mov	sp,fp
1000eb04:	dfc00117 	ldw	ra,4(sp)
1000eb08:	df000017 	ldw	fp,0(sp)
1000eb0c:	dec00204 	addi	sp,sp,8
1000eb10:	f800283a 	ret

1000eb14 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
1000eb14:	defff904 	addi	sp,sp,-28
1000eb18:	df000615 	stw	fp,24(sp)
1000eb1c:	df000604 	addi	fp,sp,24
1000eb20:	e13ffe15 	stw	r4,-8(fp)
1000eb24:	e17fff15 	stw	r5,-4(fp)
1000eb28:	e0bfff17 	ldw	r2,-4(fp)
1000eb2c:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1000eb30:	0005303a 	rdctl	r2,status
1000eb34:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1000eb38:	e0fffb17 	ldw	r3,-20(fp)
1000eb3c:	00bfff84 	movi	r2,-2
1000eb40:	1884703a 	and	r2,r3,r2
1000eb44:	1001703a 	wrctl	status,r2
  
  return context;
1000eb48:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
1000eb4c:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
1000eb50:	00c00044 	movi	r3,1
1000eb54:	e0bffa17 	ldw	r2,-24(fp)
1000eb58:	1884983a 	sll	r2,r3,r2
1000eb5c:	1007883a 	mov	r3,r2
1000eb60:	d0a6d717 	ldw	r2,-25764(gp)
1000eb64:	1884b03a 	or	r2,r3,r2
1000eb68:	d0a6d715 	stw	r2,-25764(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
1000eb6c:	d0a6d717 	ldw	r2,-25764(gp)
1000eb70:	100170fa 	wrctl	ienable,r2
1000eb74:	e0bffc17 	ldw	r2,-16(fp)
1000eb78:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1000eb7c:	e0bffd17 	ldw	r2,-12(fp)
1000eb80:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
1000eb84:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
1000eb88:	0001883a 	nop
}
1000eb8c:	e037883a 	mov	sp,fp
1000eb90:	df000017 	ldw	fp,0(sp)
1000eb94:	dec00104 	addi	sp,sp,4
1000eb98:	f800283a 	ret

1000eb9c <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
1000eb9c:	defff904 	addi	sp,sp,-28
1000eba0:	df000615 	stw	fp,24(sp)
1000eba4:	df000604 	addi	fp,sp,24
1000eba8:	e13ffe15 	stw	r4,-8(fp)
1000ebac:	e17fff15 	stw	r5,-4(fp)
1000ebb0:	e0bfff17 	ldw	r2,-4(fp)
1000ebb4:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1000ebb8:	0005303a 	rdctl	r2,status
1000ebbc:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1000ebc0:	e0fffb17 	ldw	r3,-20(fp)
1000ebc4:	00bfff84 	movi	r2,-2
1000ebc8:	1884703a 	and	r2,r3,r2
1000ebcc:	1001703a 	wrctl	status,r2
  
  return context;
1000ebd0:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
1000ebd4:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
1000ebd8:	00c00044 	movi	r3,1
1000ebdc:	e0bffa17 	ldw	r2,-24(fp)
1000ebe0:	1884983a 	sll	r2,r3,r2
1000ebe4:	0084303a 	nor	r2,zero,r2
1000ebe8:	1007883a 	mov	r3,r2
1000ebec:	d0a6d717 	ldw	r2,-25764(gp)
1000ebf0:	1884703a 	and	r2,r3,r2
1000ebf4:	d0a6d715 	stw	r2,-25764(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
1000ebf8:	d0a6d717 	ldw	r2,-25764(gp)
1000ebfc:	100170fa 	wrctl	ienable,r2
1000ec00:	e0bffc17 	ldw	r2,-16(fp)
1000ec04:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1000ec08:	e0bffd17 	ldw	r2,-12(fp)
1000ec0c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
1000ec10:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
1000ec14:	0001883a 	nop
}
1000ec18:	e037883a 	mov	sp,fp
1000ec1c:	df000017 	ldw	fp,0(sp)
1000ec20:	dec00104 	addi	sp,sp,4
1000ec24:	f800283a 	ret

1000ec28 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
1000ec28:	defffc04 	addi	sp,sp,-16
1000ec2c:	df000315 	stw	fp,12(sp)
1000ec30:	df000304 	addi	fp,sp,12
1000ec34:	e13ffe15 	stw	r4,-8(fp)
1000ec38:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
1000ec3c:	000530fa 	rdctl	r2,ienable
1000ec40:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
1000ec44:	00c00044 	movi	r3,1
1000ec48:	e0bfff17 	ldw	r2,-4(fp)
1000ec4c:	1884983a 	sll	r2,r3,r2
1000ec50:	1007883a 	mov	r3,r2
1000ec54:	e0bffd17 	ldw	r2,-12(fp)
1000ec58:	1884703a 	and	r2,r3,r2
1000ec5c:	1004c03a 	cmpne	r2,r2,zero
1000ec60:	10803fcc 	andi	r2,r2,255
}
1000ec64:	e037883a 	mov	sp,fp
1000ec68:	df000017 	ldw	fp,0(sp)
1000ec6c:	dec00104 	addi	sp,sp,4
1000ec70:	f800283a 	ret

1000ec74 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
1000ec74:	defff504 	addi	sp,sp,-44
1000ec78:	dfc00a15 	stw	ra,40(sp)
1000ec7c:	df000915 	stw	fp,36(sp)
1000ec80:	df000904 	addi	fp,sp,36
1000ec84:	e13ffc15 	stw	r4,-16(fp)
1000ec88:	e17ffd15 	stw	r5,-12(fp)
1000ec8c:	e1bffe15 	stw	r6,-8(fp)
1000ec90:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
1000ec94:	00bffa84 	movi	r2,-22
1000ec98:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
1000ec9c:	e0bffd17 	ldw	r2,-12(fp)
1000eca0:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
1000eca4:	e0bff817 	ldw	r2,-32(fp)
1000eca8:	10800808 	cmpgei	r2,r2,32
1000ecac:	1000271e 	bne	r2,zero,1000ed4c <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1000ecb0:	0005303a 	rdctl	r2,status
1000ecb4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1000ecb8:	e0fffb17 	ldw	r3,-20(fp)
1000ecbc:	00bfff84 	movi	r2,-2
1000ecc0:	1884703a 	and	r2,r3,r2
1000ecc4:	1001703a 	wrctl	status,r2
  
  return context;
1000ecc8:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
1000eccc:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
1000ecd0:	00840074 	movhi	r2,4097
1000ecd4:	108cba04 	addi	r2,r2,13032
1000ecd8:	e0fff817 	ldw	r3,-32(fp)
1000ecdc:	180690fa 	slli	r3,r3,3
1000ece0:	10c5883a 	add	r2,r2,r3
1000ece4:	e0fffe17 	ldw	r3,-8(fp)
1000ece8:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
1000ecec:	00840074 	movhi	r2,4097
1000ecf0:	108cba04 	addi	r2,r2,13032
1000ecf4:	e0fff817 	ldw	r3,-32(fp)
1000ecf8:	180690fa 	slli	r3,r3,3
1000ecfc:	10c5883a 	add	r2,r2,r3
1000ed00:	10800104 	addi	r2,r2,4
1000ed04:	e0ffff17 	ldw	r3,-4(fp)
1000ed08:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
1000ed0c:	e0bffe17 	ldw	r2,-8(fp)
1000ed10:	10000526 	beq	r2,zero,1000ed28 <alt_iic_isr_register+0xb4>
1000ed14:	e0bff817 	ldw	r2,-32(fp)
1000ed18:	100b883a 	mov	r5,r2
1000ed1c:	e13ffc17 	ldw	r4,-16(fp)
1000ed20:	000eb140 	call	1000eb14 <alt_ic_irq_enable>
1000ed24:	00000406 	br	1000ed38 <alt_iic_isr_register+0xc4>
1000ed28:	e0bff817 	ldw	r2,-32(fp)
1000ed2c:	100b883a 	mov	r5,r2
1000ed30:	e13ffc17 	ldw	r4,-16(fp)
1000ed34:	000eb9c0 	call	1000eb9c <alt_ic_irq_disable>
1000ed38:	e0bff715 	stw	r2,-36(fp)
1000ed3c:	e0bffa17 	ldw	r2,-24(fp)
1000ed40:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1000ed44:	e0bff917 	ldw	r2,-28(fp)
1000ed48:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
1000ed4c:	e0bff717 	ldw	r2,-36(fp)
}
1000ed50:	e037883a 	mov	sp,fp
1000ed54:	dfc00117 	ldw	ra,4(sp)
1000ed58:	df000017 	ldw	fp,0(sp)
1000ed5c:	dec00204 	addi	sp,sp,8
1000ed60:	f800283a 	ret

1000ed64 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
1000ed64:	defff804 	addi	sp,sp,-32
1000ed68:	dfc00715 	stw	ra,28(sp)
1000ed6c:	df000615 	stw	fp,24(sp)
1000ed70:	dc000515 	stw	r16,20(sp)
1000ed74:	df000604 	addi	fp,sp,24
1000ed78:	e13ffb15 	stw	r4,-20(fp)
1000ed7c:	e17ffc15 	stw	r5,-16(fp)
1000ed80:	e1bffd15 	stw	r6,-12(fp)
1000ed84:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
1000ed88:	e1bffe17 	ldw	r6,-8(fp)
1000ed8c:	e17ffd17 	ldw	r5,-12(fp)
1000ed90:	e13ffc17 	ldw	r4,-16(fp)
1000ed94:	000efec0 	call	1000efec <open>
1000ed98:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
1000ed9c:	e0bffa17 	ldw	r2,-24(fp)
1000eda0:	10002216 	blt	r2,zero,1000ee2c <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
1000eda4:	04040074 	movhi	r16,4097
1000eda8:	84015d04 	addi	r16,r16,1396
1000edac:	e0bffa17 	ldw	r2,-24(fp)
1000edb0:	01400304 	movi	r5,12
1000edb4:	1009883a 	mov	r4,r2
1000edb8:	000aa380 	call	1000aa38 <__mulsi3>
1000edbc:	8085883a 	add	r2,r16,r2
1000edc0:	10c00017 	ldw	r3,0(r2)
1000edc4:	e0bffb17 	ldw	r2,-20(fp)
1000edc8:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
1000edcc:	04040074 	movhi	r16,4097
1000edd0:	84015d04 	addi	r16,r16,1396
1000edd4:	e0bffa17 	ldw	r2,-24(fp)
1000edd8:	01400304 	movi	r5,12
1000eddc:	1009883a 	mov	r4,r2
1000ede0:	000aa380 	call	1000aa38 <__mulsi3>
1000ede4:	8085883a 	add	r2,r16,r2
1000ede8:	10800104 	addi	r2,r2,4
1000edec:	10c00017 	ldw	r3,0(r2)
1000edf0:	e0bffb17 	ldw	r2,-20(fp)
1000edf4:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
1000edf8:	04040074 	movhi	r16,4097
1000edfc:	84015d04 	addi	r16,r16,1396
1000ee00:	e0bffa17 	ldw	r2,-24(fp)
1000ee04:	01400304 	movi	r5,12
1000ee08:	1009883a 	mov	r4,r2
1000ee0c:	000aa380 	call	1000aa38 <__mulsi3>
1000ee10:	8085883a 	add	r2,r16,r2
1000ee14:	10800204 	addi	r2,r2,8
1000ee18:	10c00017 	ldw	r3,0(r2)
1000ee1c:	e0bffb17 	ldw	r2,-20(fp)
1000ee20:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
1000ee24:	e13ffa17 	ldw	r4,-24(fp)
1000ee28:	000da280 	call	1000da28 <alt_release_fd>
  }
} 
1000ee2c:	0001883a 	nop
1000ee30:	e6ffff04 	addi	sp,fp,-4
1000ee34:	dfc00217 	ldw	ra,8(sp)
1000ee38:	df000117 	ldw	fp,4(sp)
1000ee3c:	dc000017 	ldw	r16,0(sp)
1000ee40:	dec00304 	addi	sp,sp,12
1000ee44:	f800283a 	ret

1000ee48 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
1000ee48:	defffb04 	addi	sp,sp,-20
1000ee4c:	dfc00415 	stw	ra,16(sp)
1000ee50:	df000315 	stw	fp,12(sp)
1000ee54:	df000304 	addi	fp,sp,12
1000ee58:	e13ffd15 	stw	r4,-12(fp)
1000ee5c:	e17ffe15 	stw	r5,-8(fp)
1000ee60:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
1000ee64:	01c07fc4 	movi	r7,511
1000ee68:	01800044 	movi	r6,1
1000ee6c:	e17ffd17 	ldw	r5,-12(fp)
1000ee70:	01040074 	movhi	r4,4097
1000ee74:	21016004 	addi	r4,r4,1408
1000ee78:	000ed640 	call	1000ed64 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
1000ee7c:	01c07fc4 	movi	r7,511
1000ee80:	000d883a 	mov	r6,zero
1000ee84:	e17ffe17 	ldw	r5,-8(fp)
1000ee88:	01040074 	movhi	r4,4097
1000ee8c:	21015d04 	addi	r4,r4,1396
1000ee90:	000ed640 	call	1000ed64 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
1000ee94:	01c07fc4 	movi	r7,511
1000ee98:	01800044 	movi	r6,1
1000ee9c:	e17fff17 	ldw	r5,-4(fp)
1000eea0:	01040074 	movhi	r4,4097
1000eea4:	21016304 	addi	r4,r4,1420
1000eea8:	000ed640 	call	1000ed64 <alt_open_fd>
}  
1000eeac:	0001883a 	nop
1000eeb0:	e037883a 	mov	sp,fp
1000eeb4:	dfc00117 	ldw	ra,4(sp)
1000eeb8:	df000017 	ldw	fp,0(sp)
1000eebc:	dec00204 	addi	sp,sp,8
1000eec0:	f800283a 	ret

1000eec4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1000eec4:	defffe04 	addi	sp,sp,-8
1000eec8:	dfc00115 	stw	ra,4(sp)
1000eecc:	df000015 	stw	fp,0(sp)
1000eed0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1000eed4:	d0a00c17 	ldw	r2,-32720(gp)
1000eed8:	10000326 	beq	r2,zero,1000eee8 <alt_get_errno+0x24>
1000eedc:	d0a00c17 	ldw	r2,-32720(gp)
1000eee0:	103ee83a 	callr	r2
1000eee4:	00000106 	br	1000eeec <alt_get_errno+0x28>
1000eee8:	d0a6d304 	addi	r2,gp,-25780
}
1000eeec:	e037883a 	mov	sp,fp
1000eef0:	dfc00117 	ldw	ra,4(sp)
1000eef4:	df000017 	ldw	fp,0(sp)
1000eef8:	dec00204 	addi	sp,sp,8
1000eefc:	f800283a 	ret

1000ef00 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
1000ef00:	defffb04 	addi	sp,sp,-20
1000ef04:	dfc00415 	stw	ra,16(sp)
1000ef08:	df000315 	stw	fp,12(sp)
1000ef0c:	dc000215 	stw	r16,8(sp)
1000ef10:	df000304 	addi	fp,sp,12
1000ef14:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
1000ef18:	e0bffe17 	ldw	r2,-8(fp)
1000ef1c:	10800217 	ldw	r2,8(r2)
1000ef20:	10d00034 	orhi	r3,r2,16384
1000ef24:	e0bffe17 	ldw	r2,-8(fp)
1000ef28:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
1000ef2c:	e03ffd15 	stw	zero,-12(fp)
1000ef30:	00002306 	br	1000efc0 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
1000ef34:	04040074 	movhi	r16,4097
1000ef38:	84015d04 	addi	r16,r16,1396
1000ef3c:	e0bffd17 	ldw	r2,-12(fp)
1000ef40:	01400304 	movi	r5,12
1000ef44:	1009883a 	mov	r4,r2
1000ef48:	000aa380 	call	1000aa38 <__mulsi3>
1000ef4c:	8085883a 	add	r2,r16,r2
1000ef50:	10c00017 	ldw	r3,0(r2)
1000ef54:	e0bffe17 	ldw	r2,-8(fp)
1000ef58:	10800017 	ldw	r2,0(r2)
1000ef5c:	1880151e 	bne	r3,r2,1000efb4 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
1000ef60:	04040074 	movhi	r16,4097
1000ef64:	84015d04 	addi	r16,r16,1396
1000ef68:	e0bffd17 	ldw	r2,-12(fp)
1000ef6c:	01400304 	movi	r5,12
1000ef70:	1009883a 	mov	r4,r2
1000ef74:	000aa380 	call	1000aa38 <__mulsi3>
1000ef78:	8085883a 	add	r2,r16,r2
1000ef7c:	10800204 	addi	r2,r2,8
1000ef80:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
1000ef84:	10000b0e 	bge	r2,zero,1000efb4 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
1000ef88:	01400304 	movi	r5,12
1000ef8c:	e13ffd17 	ldw	r4,-12(fp)
1000ef90:	000aa380 	call	1000aa38 <__mulsi3>
1000ef94:	1007883a 	mov	r3,r2
1000ef98:	00840074 	movhi	r2,4097
1000ef9c:	10815d04 	addi	r2,r2,1396
1000efa0:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
1000efa4:	e0bffe17 	ldw	r2,-8(fp)
1000efa8:	18800226 	beq	r3,r2,1000efb4 <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
1000efac:	00bffcc4 	movi	r2,-13
1000efb0:	00000806 	br	1000efd4 <alt_file_locked+0xd4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
1000efb4:	e0bffd17 	ldw	r2,-12(fp)
1000efb8:	10800044 	addi	r2,r2,1
1000efbc:	e0bffd15 	stw	r2,-12(fp)
1000efc0:	d0a00b17 	ldw	r2,-32724(gp)
1000efc4:	1007883a 	mov	r3,r2
1000efc8:	e0bffd17 	ldw	r2,-12(fp)
1000efcc:	18bfd92e 	bgeu	r3,r2,1000ef34 <__alt_data_end+0xf800ef34>
    }
  }
  
  /* The device is not locked */
 
  return 0;
1000efd0:	0005883a 	mov	r2,zero
}
1000efd4:	e6ffff04 	addi	sp,fp,-4
1000efd8:	dfc00217 	ldw	ra,8(sp)
1000efdc:	df000117 	ldw	fp,4(sp)
1000efe0:	dc000017 	ldw	r16,0(sp)
1000efe4:	dec00304 	addi	sp,sp,12
1000efe8:	f800283a 	ret

1000efec <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
1000efec:	defff604 	addi	sp,sp,-40
1000eff0:	dfc00915 	stw	ra,36(sp)
1000eff4:	df000815 	stw	fp,32(sp)
1000eff8:	df000804 	addi	fp,sp,32
1000effc:	e13ffd15 	stw	r4,-12(fp)
1000f000:	e17ffe15 	stw	r5,-8(fp)
1000f004:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
1000f008:	00bfffc4 	movi	r2,-1
1000f00c:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
1000f010:	00bffb44 	movi	r2,-19
1000f014:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
1000f018:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
1000f01c:	d1600904 	addi	r5,gp,-32732
1000f020:	e13ffd17 	ldw	r4,-12(fp)
1000f024:	000f3100 	call	1000f310 <alt_find_dev>
1000f028:	e0bff815 	stw	r2,-32(fp)
1000f02c:	e0bff817 	ldw	r2,-32(fp)
1000f030:	1000051e 	bne	r2,zero,1000f048 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
1000f034:	e13ffd17 	ldw	r4,-12(fp)
1000f038:	000f3a00 	call	1000f3a0 <alt_find_file>
1000f03c:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
1000f040:	00800044 	movi	r2,1
1000f044:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
1000f048:	e0bff817 	ldw	r2,-32(fp)
1000f04c:	10002b26 	beq	r2,zero,1000f0fc <open+0x110>
  {
    if ((index = alt_get_fd (dev)) < 0)
1000f050:	e13ff817 	ldw	r4,-32(fp)
1000f054:	000f4a80 	call	1000f4a8 <alt_get_fd>
1000f058:	e0bff915 	stw	r2,-28(fp)
1000f05c:	e0bff917 	ldw	r2,-28(fp)
1000f060:	1000030e 	bge	r2,zero,1000f070 <open+0x84>
    {
      status = index;
1000f064:	e0bff917 	ldw	r2,-28(fp)
1000f068:	e0bffa15 	stw	r2,-24(fp)
1000f06c:	00002506 	br	1000f104 <open+0x118>
    }
    else
    {
      fd = &alt_fd_list[index];
1000f070:	01400304 	movi	r5,12
1000f074:	e13ff917 	ldw	r4,-28(fp)
1000f078:	000aa380 	call	1000aa38 <__mulsi3>
1000f07c:	1007883a 	mov	r3,r2
1000f080:	00840074 	movhi	r2,4097
1000f084:	10815d04 	addi	r2,r2,1396
1000f088:	1885883a 	add	r2,r3,r2
1000f08c:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
1000f090:	e0fffe17 	ldw	r3,-8(fp)
1000f094:	00900034 	movhi	r2,16384
1000f098:	10bfffc4 	addi	r2,r2,-1
1000f09c:	1886703a 	and	r3,r3,r2
1000f0a0:	e0bffc17 	ldw	r2,-16(fp)
1000f0a4:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
1000f0a8:	e0bffb17 	ldw	r2,-20(fp)
1000f0ac:	1000051e 	bne	r2,zero,1000f0c4 <open+0xd8>
1000f0b0:	e13ffc17 	ldw	r4,-16(fp)
1000f0b4:	000ef000 	call	1000ef00 <alt_file_locked>
1000f0b8:	e0bffa15 	stw	r2,-24(fp)
1000f0bc:	e0bffa17 	ldw	r2,-24(fp)
1000f0c0:	10001016 	blt	r2,zero,1000f104 <open+0x118>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
1000f0c4:	e0bff817 	ldw	r2,-32(fp)
1000f0c8:	10800317 	ldw	r2,12(r2)
1000f0cc:	10000826 	beq	r2,zero,1000f0f0 <open+0x104>
1000f0d0:	e0bff817 	ldw	r2,-32(fp)
1000f0d4:	10800317 	ldw	r2,12(r2)
1000f0d8:	e1ffff17 	ldw	r7,-4(fp)
1000f0dc:	e1bffe17 	ldw	r6,-8(fp)
1000f0e0:	e17ffd17 	ldw	r5,-12(fp)
1000f0e4:	e13ffc17 	ldw	r4,-16(fp)
1000f0e8:	103ee83a 	callr	r2
1000f0ec:	00000106 	br	1000f0f4 <open+0x108>
1000f0f0:	0005883a 	mov	r2,zero
1000f0f4:	e0bffa15 	stw	r2,-24(fp)
1000f0f8:	00000206 	br	1000f104 <open+0x118>
      }
    }
  }
  else
  {
    status = -ENODEV;
1000f0fc:	00bffb44 	movi	r2,-19
1000f100:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
1000f104:	e0bffa17 	ldw	r2,-24(fp)
1000f108:	1000090e 	bge	r2,zero,1000f130 <open+0x144>
  {
    alt_release_fd (index);  
1000f10c:	e13ff917 	ldw	r4,-28(fp)
1000f110:	000da280 	call	1000da28 <alt_release_fd>
    ALT_ERRNO = -status;
1000f114:	000eec40 	call	1000eec4 <alt_get_errno>
1000f118:	1007883a 	mov	r3,r2
1000f11c:	e0bffa17 	ldw	r2,-24(fp)
1000f120:	0085c83a 	sub	r2,zero,r2
1000f124:	18800015 	stw	r2,0(r3)
    return -1;
1000f128:	00bfffc4 	movi	r2,-1
1000f12c:	00000106 	br	1000f134 <open+0x148>
  }
  
  /* return the reference upon success */

  return index;
1000f130:	e0bff917 	ldw	r2,-28(fp)
}
1000f134:	e037883a 	mov	sp,fp
1000f138:	dfc00117 	ldw	ra,4(sp)
1000f13c:	df000017 	ldw	fp,0(sp)
1000f140:	dec00204 	addi	sp,sp,8
1000f144:	f800283a 	ret

1000f148 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
1000f148:	defffa04 	addi	sp,sp,-24
1000f14c:	df000515 	stw	fp,20(sp)
1000f150:	df000504 	addi	fp,sp,20
1000f154:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1000f158:	0005303a 	rdctl	r2,status
1000f15c:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1000f160:	e0fffc17 	ldw	r3,-16(fp)
1000f164:	00bfff84 	movi	r2,-2
1000f168:	1884703a 	and	r2,r3,r2
1000f16c:	1001703a 	wrctl	status,r2
  
  return context;
1000f170:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
1000f174:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
1000f178:	e0bfff17 	ldw	r2,-4(fp)
1000f17c:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
1000f180:	e0bffd17 	ldw	r2,-12(fp)
1000f184:	10800017 	ldw	r2,0(r2)
1000f188:	e0fffd17 	ldw	r3,-12(fp)
1000f18c:	18c00117 	ldw	r3,4(r3)
1000f190:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
1000f194:	e0bffd17 	ldw	r2,-12(fp)
1000f198:	10800117 	ldw	r2,4(r2)
1000f19c:	e0fffd17 	ldw	r3,-12(fp)
1000f1a0:	18c00017 	ldw	r3,0(r3)
1000f1a4:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
1000f1a8:	e0bffd17 	ldw	r2,-12(fp)
1000f1ac:	e0fffd17 	ldw	r3,-12(fp)
1000f1b0:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
1000f1b4:	e0bffd17 	ldw	r2,-12(fp)
1000f1b8:	e0fffd17 	ldw	r3,-12(fp)
1000f1bc:	10c00015 	stw	r3,0(r2)
1000f1c0:	e0bffb17 	ldw	r2,-20(fp)
1000f1c4:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1000f1c8:	e0bffe17 	ldw	r2,-8(fp)
1000f1cc:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
1000f1d0:	0001883a 	nop
1000f1d4:	e037883a 	mov	sp,fp
1000f1d8:	df000017 	ldw	fp,0(sp)
1000f1dc:	dec00104 	addi	sp,sp,4
1000f1e0:	f800283a 	ret

1000f1e4 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
1000f1e4:	defffb04 	addi	sp,sp,-20
1000f1e8:	dfc00415 	stw	ra,16(sp)
1000f1ec:	df000315 	stw	fp,12(sp)
1000f1f0:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
1000f1f4:	d0a00f17 	ldw	r2,-32708(gp)
1000f1f8:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
1000f1fc:	d0a6d917 	ldw	r2,-25756(gp)
1000f200:	10800044 	addi	r2,r2,1
1000f204:	d0a6d915 	stw	r2,-25756(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
1000f208:	00002e06 	br	1000f2c4 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
1000f20c:	e0bffd17 	ldw	r2,-12(fp)
1000f210:	10800017 	ldw	r2,0(r2)
1000f214:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
1000f218:	e0bffd17 	ldw	r2,-12(fp)
1000f21c:	10800403 	ldbu	r2,16(r2)
1000f220:	10803fcc 	andi	r2,r2,255
1000f224:	10000426 	beq	r2,zero,1000f238 <alt_tick+0x54>
1000f228:	d0a6d917 	ldw	r2,-25756(gp)
1000f22c:	1000021e 	bne	r2,zero,1000f238 <alt_tick+0x54>
    {
      alarm->rollover = 0;
1000f230:	e0bffd17 	ldw	r2,-12(fp)
1000f234:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
1000f238:	e0bffd17 	ldw	r2,-12(fp)
1000f23c:	10800217 	ldw	r2,8(r2)
1000f240:	d0e6d917 	ldw	r3,-25756(gp)
1000f244:	18801d36 	bltu	r3,r2,1000f2bc <alt_tick+0xd8>
1000f248:	e0bffd17 	ldw	r2,-12(fp)
1000f24c:	10800403 	ldbu	r2,16(r2)
1000f250:	10803fcc 	andi	r2,r2,255
1000f254:	1000191e 	bne	r2,zero,1000f2bc <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
1000f258:	e0bffd17 	ldw	r2,-12(fp)
1000f25c:	10800317 	ldw	r2,12(r2)
1000f260:	e0fffd17 	ldw	r3,-12(fp)
1000f264:	18c00517 	ldw	r3,20(r3)
1000f268:	1809883a 	mov	r4,r3
1000f26c:	103ee83a 	callr	r2
1000f270:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
1000f274:	e0bfff17 	ldw	r2,-4(fp)
1000f278:	1000031e 	bne	r2,zero,1000f288 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
1000f27c:	e13ffd17 	ldw	r4,-12(fp)
1000f280:	000f1480 	call	1000f148 <alt_alarm_stop>
1000f284:	00000d06 	br	1000f2bc <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
1000f288:	e0bffd17 	ldw	r2,-12(fp)
1000f28c:	10c00217 	ldw	r3,8(r2)
1000f290:	e0bfff17 	ldw	r2,-4(fp)
1000f294:	1887883a 	add	r3,r3,r2
1000f298:	e0bffd17 	ldw	r2,-12(fp)
1000f29c:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
1000f2a0:	e0bffd17 	ldw	r2,-12(fp)
1000f2a4:	10c00217 	ldw	r3,8(r2)
1000f2a8:	d0a6d917 	ldw	r2,-25756(gp)
1000f2ac:	1880032e 	bgeu	r3,r2,1000f2bc <alt_tick+0xd8>
        {
          alarm->rollover = 1;
1000f2b0:	e0bffd17 	ldw	r2,-12(fp)
1000f2b4:	00c00044 	movi	r3,1
1000f2b8:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
1000f2bc:	e0bffe17 	ldw	r2,-8(fp)
1000f2c0:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
1000f2c4:	e0fffd17 	ldw	r3,-12(fp)
1000f2c8:	d0a00f04 	addi	r2,gp,-32708
1000f2cc:	18bfcf1e 	bne	r3,r2,1000f20c <__alt_data_end+0xf800f20c>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
1000f2d0:	0001883a 	nop
}
1000f2d4:	0001883a 	nop
1000f2d8:	e037883a 	mov	sp,fp
1000f2dc:	dfc00117 	ldw	ra,4(sp)
1000f2e0:	df000017 	ldw	fp,0(sp)
1000f2e4:	dec00204 	addi	sp,sp,8
1000f2e8:	f800283a 	ret

1000f2ec <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
1000f2ec:	deffff04 	addi	sp,sp,-4
1000f2f0:	df000015 	stw	fp,0(sp)
1000f2f4:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
1000f2f8:	000170fa 	wrctl	ienable,zero
}
1000f2fc:	0001883a 	nop
1000f300:	e037883a 	mov	sp,fp
1000f304:	df000017 	ldw	fp,0(sp)
1000f308:	dec00104 	addi	sp,sp,4
1000f30c:	f800283a 	ret

1000f310 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
1000f310:	defffa04 	addi	sp,sp,-24
1000f314:	dfc00515 	stw	ra,20(sp)
1000f318:	df000415 	stw	fp,16(sp)
1000f31c:	df000404 	addi	fp,sp,16
1000f320:	e13ffe15 	stw	r4,-8(fp)
1000f324:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
1000f328:	e0bfff17 	ldw	r2,-4(fp)
1000f32c:	10800017 	ldw	r2,0(r2)
1000f330:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
1000f334:	e13ffe17 	ldw	r4,-8(fp)
1000f338:	00070600 	call	10007060 <strlen>
1000f33c:	10800044 	addi	r2,r2,1
1000f340:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
1000f344:	00000d06 	br	1000f37c <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
1000f348:	e0bffc17 	ldw	r2,-16(fp)
1000f34c:	10800217 	ldw	r2,8(r2)
1000f350:	e0fffd17 	ldw	r3,-12(fp)
1000f354:	180d883a 	mov	r6,r3
1000f358:	e17ffe17 	ldw	r5,-8(fp)
1000f35c:	1009883a 	mov	r4,r2
1000f360:	000f6540 	call	1000f654 <memcmp>
1000f364:	1000021e 	bne	r2,zero,1000f370 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
1000f368:	e0bffc17 	ldw	r2,-16(fp)
1000f36c:	00000706 	br	1000f38c <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
1000f370:	e0bffc17 	ldw	r2,-16(fp)
1000f374:	10800017 	ldw	r2,0(r2)
1000f378:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
1000f37c:	e0fffc17 	ldw	r3,-16(fp)
1000f380:	e0bfff17 	ldw	r2,-4(fp)
1000f384:	18bff01e 	bne	r3,r2,1000f348 <__alt_data_end+0xf800f348>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
1000f388:	0005883a 	mov	r2,zero
}
1000f38c:	e037883a 	mov	sp,fp
1000f390:	dfc00117 	ldw	ra,4(sp)
1000f394:	df000017 	ldw	fp,0(sp)
1000f398:	dec00204 	addi	sp,sp,8
1000f39c:	f800283a 	ret

1000f3a0 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
1000f3a0:	defffb04 	addi	sp,sp,-20
1000f3a4:	dfc00415 	stw	ra,16(sp)
1000f3a8:	df000315 	stw	fp,12(sp)
1000f3ac:	df000304 	addi	fp,sp,12
1000f3b0:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
1000f3b4:	d0a00717 	ldw	r2,-32740(gp)
1000f3b8:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
1000f3bc:	00003106 	br	1000f484 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
1000f3c0:	e0bffd17 	ldw	r2,-12(fp)
1000f3c4:	10800217 	ldw	r2,8(r2)
1000f3c8:	1009883a 	mov	r4,r2
1000f3cc:	00070600 	call	10007060 <strlen>
1000f3d0:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
1000f3d4:	e0bffd17 	ldw	r2,-12(fp)
1000f3d8:	10c00217 	ldw	r3,8(r2)
1000f3dc:	e0bffe17 	ldw	r2,-8(fp)
1000f3e0:	10bfffc4 	addi	r2,r2,-1
1000f3e4:	1885883a 	add	r2,r3,r2
1000f3e8:	10800003 	ldbu	r2,0(r2)
1000f3ec:	10803fcc 	andi	r2,r2,255
1000f3f0:	1080201c 	xori	r2,r2,128
1000f3f4:	10bfe004 	addi	r2,r2,-128
1000f3f8:	10800bd8 	cmpnei	r2,r2,47
1000f3fc:	1000031e 	bne	r2,zero,1000f40c <alt_find_file+0x6c>
    {
      len -= 1;
1000f400:	e0bffe17 	ldw	r2,-8(fp)
1000f404:	10bfffc4 	addi	r2,r2,-1
1000f408:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
1000f40c:	e0bffe17 	ldw	r2,-8(fp)
1000f410:	e0ffff17 	ldw	r3,-4(fp)
1000f414:	1885883a 	add	r2,r3,r2
1000f418:	10800003 	ldbu	r2,0(r2)
1000f41c:	10803fcc 	andi	r2,r2,255
1000f420:	1080201c 	xori	r2,r2,128
1000f424:	10bfe004 	addi	r2,r2,-128
1000f428:	10800be0 	cmpeqi	r2,r2,47
1000f42c:	1000081e 	bne	r2,zero,1000f450 <alt_find_file+0xb0>
1000f430:	e0bffe17 	ldw	r2,-8(fp)
1000f434:	e0ffff17 	ldw	r3,-4(fp)
1000f438:	1885883a 	add	r2,r3,r2
1000f43c:	10800003 	ldbu	r2,0(r2)
1000f440:	10803fcc 	andi	r2,r2,255
1000f444:	1080201c 	xori	r2,r2,128
1000f448:	10bfe004 	addi	r2,r2,-128
1000f44c:	10000a1e 	bne	r2,zero,1000f478 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
1000f450:	e0bffd17 	ldw	r2,-12(fp)
1000f454:	10800217 	ldw	r2,8(r2)
1000f458:	e0fffe17 	ldw	r3,-8(fp)
1000f45c:	180d883a 	mov	r6,r3
1000f460:	e17fff17 	ldw	r5,-4(fp)
1000f464:	1009883a 	mov	r4,r2
1000f468:	000f6540 	call	1000f654 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
1000f46c:	1000021e 	bne	r2,zero,1000f478 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
1000f470:	e0bffd17 	ldw	r2,-12(fp)
1000f474:	00000706 	br	1000f494 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
1000f478:	e0bffd17 	ldw	r2,-12(fp)
1000f47c:	10800017 	ldw	r2,0(r2)
1000f480:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
1000f484:	e0fffd17 	ldw	r3,-12(fp)
1000f488:	d0a00704 	addi	r2,gp,-32740
1000f48c:	18bfcc1e 	bne	r3,r2,1000f3c0 <__alt_data_end+0xf800f3c0>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
1000f490:	0005883a 	mov	r2,zero
}
1000f494:	e037883a 	mov	sp,fp
1000f498:	dfc00117 	ldw	ra,4(sp)
1000f49c:	df000017 	ldw	fp,0(sp)
1000f4a0:	dec00204 	addi	sp,sp,8
1000f4a4:	f800283a 	ret

1000f4a8 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
1000f4a8:	defffa04 	addi	sp,sp,-24
1000f4ac:	dfc00515 	stw	ra,20(sp)
1000f4b0:	df000415 	stw	fp,16(sp)
1000f4b4:	dc000315 	stw	r16,12(sp)
1000f4b8:	df000404 	addi	fp,sp,16
1000f4bc:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
1000f4c0:	00bffa04 	movi	r2,-24
1000f4c4:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
1000f4c8:	e03ffc15 	stw	zero,-16(fp)
1000f4cc:	00001d06 	br	1000f544 <alt_get_fd+0x9c>
  {
    if (!alt_fd_list[i].dev)
1000f4d0:	04040074 	movhi	r16,4097
1000f4d4:	84015d04 	addi	r16,r16,1396
1000f4d8:	e0bffc17 	ldw	r2,-16(fp)
1000f4dc:	01400304 	movi	r5,12
1000f4e0:	1009883a 	mov	r4,r2
1000f4e4:	000aa380 	call	1000aa38 <__mulsi3>
1000f4e8:	8085883a 	add	r2,r16,r2
1000f4ec:	10800017 	ldw	r2,0(r2)
1000f4f0:	1000111e 	bne	r2,zero,1000f538 <alt_get_fd+0x90>
    {
      alt_fd_list[i].dev = dev;
1000f4f4:	04040074 	movhi	r16,4097
1000f4f8:	84015d04 	addi	r16,r16,1396
1000f4fc:	e0bffc17 	ldw	r2,-16(fp)
1000f500:	01400304 	movi	r5,12
1000f504:	1009883a 	mov	r4,r2
1000f508:	000aa380 	call	1000aa38 <__mulsi3>
1000f50c:	8085883a 	add	r2,r16,r2
1000f510:	e0fffe17 	ldw	r3,-8(fp)
1000f514:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
1000f518:	d0e00b17 	ldw	r3,-32724(gp)
1000f51c:	e0bffc17 	ldw	r2,-16(fp)
1000f520:	1880020e 	bge	r3,r2,1000f52c <alt_get_fd+0x84>
      {
        alt_max_fd = i;
1000f524:	e0bffc17 	ldw	r2,-16(fp)
1000f528:	d0a00b15 	stw	r2,-32724(gp)
      }
      rc = i;
1000f52c:	e0bffc17 	ldw	r2,-16(fp)
1000f530:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
1000f534:	00000606 	br	1000f550 <alt_get_fd+0xa8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
1000f538:	e0bffc17 	ldw	r2,-16(fp)
1000f53c:	10800044 	addi	r2,r2,1
1000f540:	e0bffc15 	stw	r2,-16(fp)
1000f544:	e0bffc17 	ldw	r2,-16(fp)
1000f548:	10800810 	cmplti	r2,r2,32
1000f54c:	103fe01e 	bne	r2,zero,1000f4d0 <__alt_data_end+0xf800f4d0>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
1000f550:	e0bffd17 	ldw	r2,-12(fp)
}
1000f554:	e6ffff04 	addi	sp,fp,-4
1000f558:	dfc00217 	ldw	ra,8(sp)
1000f55c:	df000117 	ldw	fp,4(sp)
1000f560:	dc000017 	ldw	r16,0(sp)
1000f564:	dec00304 	addi	sp,sp,12
1000f568:	f800283a 	ret

1000f56c <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
1000f56c:	defffe04 	addi	sp,sp,-8
1000f570:	df000115 	stw	fp,4(sp)
1000f574:	df000104 	addi	fp,sp,4
1000f578:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
1000f57c:	e0bfff17 	ldw	r2,-4(fp)
1000f580:	10bffe84 	addi	r2,r2,-6
1000f584:	10c00428 	cmpgeui	r3,r2,16
1000f588:	18001a1e 	bne	r3,zero,1000f5f4 <alt_exception_cause_generated_bad_addr+0x88>
1000f58c:	100690ba 	slli	r3,r2,2
1000f590:	00840074 	movhi	r2,4097
1000f594:	10bd6904 	addi	r2,r2,-2652
1000f598:	1885883a 	add	r2,r3,r2
1000f59c:	10800017 	ldw	r2,0(r2)
1000f5a0:	1000683a 	jmp	r2
1000f5a4:	1000f5e4 	muli	zero,r2,983
1000f5a8:	1000f5e4 	muli	zero,r2,983
1000f5ac:	1000f5f4 	orhi	zero,r2,983
1000f5b0:	1000f5f4 	orhi	zero,r2,983
1000f5b4:	1000f5f4 	orhi	zero,r2,983
1000f5b8:	1000f5e4 	muli	zero,r2,983
1000f5bc:	1000f5ec 	andhi	zero,r2,983
1000f5c0:	1000f5f4 	orhi	zero,r2,983
1000f5c4:	1000f5e4 	muli	zero,r2,983
1000f5c8:	1000f5e4 	muli	zero,r2,983
1000f5cc:	1000f5f4 	orhi	zero,r2,983
1000f5d0:	1000f5e4 	muli	zero,r2,983
1000f5d4:	1000f5ec 	andhi	zero,r2,983
1000f5d8:	1000f5f4 	orhi	zero,r2,983
1000f5dc:	1000f5f4 	orhi	zero,r2,983
1000f5e0:	1000f5e4 	muli	zero,r2,983
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
1000f5e4:	00800044 	movi	r2,1
1000f5e8:	00000306 	br	1000f5f8 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
1000f5ec:	0005883a 	mov	r2,zero
1000f5f0:	00000106 	br	1000f5f8 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
1000f5f4:	0005883a 	mov	r2,zero
  }
}
1000f5f8:	e037883a 	mov	sp,fp
1000f5fc:	df000017 	ldw	fp,0(sp)
1000f600:	dec00104 	addi	sp,sp,4
1000f604:	f800283a 	ret

1000f608 <atexit>:
1000f608:	200b883a 	mov	r5,r4
1000f60c:	000f883a 	mov	r7,zero
1000f610:	000d883a 	mov	r6,zero
1000f614:	0009883a 	mov	r4,zero
1000f618:	000f6d01 	jmpi	1000f6d0 <__register_exitproc>

1000f61c <exit>:
1000f61c:	defffe04 	addi	sp,sp,-8
1000f620:	000b883a 	mov	r5,zero
1000f624:	dc000015 	stw	r16,0(sp)
1000f628:	dfc00115 	stw	ra,4(sp)
1000f62c:	2021883a 	mov	r16,r4
1000f630:	000f7e80 	call	1000f7e8 <__call_exitprocs>
1000f634:	00840074 	movhi	r2,4097
1000f638:	1085d604 	addi	r2,r2,5976
1000f63c:	11000017 	ldw	r4,0(r2)
1000f640:	20800f17 	ldw	r2,60(r4)
1000f644:	10000126 	beq	r2,zero,1000f64c <exit+0x30>
1000f648:	103ee83a 	callr	r2
1000f64c:	8009883a 	mov	r4,r16
1000f650:	000f9680 	call	1000f968 <_exit>

1000f654 <memcmp>:
1000f654:	01c000c4 	movi	r7,3
1000f658:	3980192e 	bgeu	r7,r6,1000f6c0 <memcmp+0x6c>
1000f65c:	2144b03a 	or	r2,r4,r5
1000f660:	11c4703a 	and	r2,r2,r7
1000f664:	10000f26 	beq	r2,zero,1000f6a4 <memcmp+0x50>
1000f668:	20800003 	ldbu	r2,0(r4)
1000f66c:	28c00003 	ldbu	r3,0(r5)
1000f670:	10c0151e 	bne	r2,r3,1000f6c8 <memcmp+0x74>
1000f674:	31bfff84 	addi	r6,r6,-2
1000f678:	01ffffc4 	movi	r7,-1
1000f67c:	00000406 	br	1000f690 <memcmp+0x3c>
1000f680:	20800003 	ldbu	r2,0(r4)
1000f684:	28c00003 	ldbu	r3,0(r5)
1000f688:	31bfffc4 	addi	r6,r6,-1
1000f68c:	10c00e1e 	bne	r2,r3,1000f6c8 <memcmp+0x74>
1000f690:	21000044 	addi	r4,r4,1
1000f694:	29400044 	addi	r5,r5,1
1000f698:	31fff91e 	bne	r6,r7,1000f680 <__alt_data_end+0xf800f680>
1000f69c:	0005883a 	mov	r2,zero
1000f6a0:	f800283a 	ret
1000f6a4:	20c00017 	ldw	r3,0(r4)
1000f6a8:	28800017 	ldw	r2,0(r5)
1000f6ac:	18bfee1e 	bne	r3,r2,1000f668 <__alt_data_end+0xf800f668>
1000f6b0:	31bfff04 	addi	r6,r6,-4
1000f6b4:	21000104 	addi	r4,r4,4
1000f6b8:	29400104 	addi	r5,r5,4
1000f6bc:	39bff936 	bltu	r7,r6,1000f6a4 <__alt_data_end+0xf800f6a4>
1000f6c0:	303fe91e 	bne	r6,zero,1000f668 <__alt_data_end+0xf800f668>
1000f6c4:	003ff506 	br	1000f69c <__alt_data_end+0xf800f69c>
1000f6c8:	10c5c83a 	sub	r2,r2,r3
1000f6cc:	f800283a 	ret

1000f6d0 <__register_exitproc>:
1000f6d0:	defffa04 	addi	sp,sp,-24
1000f6d4:	dc000315 	stw	r16,12(sp)
1000f6d8:	04040074 	movhi	r16,4097
1000f6dc:	8405d604 	addi	r16,r16,5976
1000f6e0:	80c00017 	ldw	r3,0(r16)
1000f6e4:	dc400415 	stw	r17,16(sp)
1000f6e8:	dfc00515 	stw	ra,20(sp)
1000f6ec:	18805217 	ldw	r2,328(r3)
1000f6f0:	2023883a 	mov	r17,r4
1000f6f4:	10003726 	beq	r2,zero,1000f7d4 <__register_exitproc+0x104>
1000f6f8:	10c00117 	ldw	r3,4(r2)
1000f6fc:	010007c4 	movi	r4,31
1000f700:	20c00e16 	blt	r4,r3,1000f73c <__register_exitproc+0x6c>
1000f704:	1a000044 	addi	r8,r3,1
1000f708:	8800221e 	bne	r17,zero,1000f794 <__register_exitproc+0xc4>
1000f70c:	18c00084 	addi	r3,r3,2
1000f710:	18c7883a 	add	r3,r3,r3
1000f714:	18c7883a 	add	r3,r3,r3
1000f718:	12000115 	stw	r8,4(r2)
1000f71c:	10c7883a 	add	r3,r2,r3
1000f720:	19400015 	stw	r5,0(r3)
1000f724:	0005883a 	mov	r2,zero
1000f728:	dfc00517 	ldw	ra,20(sp)
1000f72c:	dc400417 	ldw	r17,16(sp)
1000f730:	dc000317 	ldw	r16,12(sp)
1000f734:	dec00604 	addi	sp,sp,24
1000f738:	f800283a 	ret
1000f73c:	00800034 	movhi	r2,0
1000f740:	10800004 	addi	r2,r2,0
1000f744:	10002626 	beq	r2,zero,1000f7e0 <__register_exitproc+0x110>
1000f748:	01006404 	movi	r4,400
1000f74c:	d9400015 	stw	r5,0(sp)
1000f750:	d9800115 	stw	r6,4(sp)
1000f754:	d9c00215 	stw	r7,8(sp)
1000f758:	00000000 	call	10000000 <__alt_mem_sdram>
1000f75c:	d9400017 	ldw	r5,0(sp)
1000f760:	d9800117 	ldw	r6,4(sp)
1000f764:	d9c00217 	ldw	r7,8(sp)
1000f768:	10001d26 	beq	r2,zero,1000f7e0 <__register_exitproc+0x110>
1000f76c:	81000017 	ldw	r4,0(r16)
1000f770:	10000115 	stw	zero,4(r2)
1000f774:	02000044 	movi	r8,1
1000f778:	22405217 	ldw	r9,328(r4)
1000f77c:	0007883a 	mov	r3,zero
1000f780:	12400015 	stw	r9,0(r2)
1000f784:	20805215 	stw	r2,328(r4)
1000f788:	10006215 	stw	zero,392(r2)
1000f78c:	10006315 	stw	zero,396(r2)
1000f790:	883fde26 	beq	r17,zero,1000f70c <__alt_data_end+0xf800f70c>
1000f794:	18c9883a 	add	r4,r3,r3
1000f798:	2109883a 	add	r4,r4,r4
1000f79c:	1109883a 	add	r4,r2,r4
1000f7a0:	21802215 	stw	r6,136(r4)
1000f7a4:	01800044 	movi	r6,1
1000f7a8:	12406217 	ldw	r9,392(r2)
1000f7ac:	30cc983a 	sll	r6,r6,r3
1000f7b0:	4992b03a 	or	r9,r9,r6
1000f7b4:	12406215 	stw	r9,392(r2)
1000f7b8:	21c04215 	stw	r7,264(r4)
1000f7bc:	01000084 	movi	r4,2
1000f7c0:	893fd21e 	bne	r17,r4,1000f70c <__alt_data_end+0xf800f70c>
1000f7c4:	11006317 	ldw	r4,396(r2)
1000f7c8:	218cb03a 	or	r6,r4,r6
1000f7cc:	11806315 	stw	r6,396(r2)
1000f7d0:	003fce06 	br	1000f70c <__alt_data_end+0xf800f70c>
1000f7d4:	18805304 	addi	r2,r3,332
1000f7d8:	18805215 	stw	r2,328(r3)
1000f7dc:	003fc606 	br	1000f6f8 <__alt_data_end+0xf800f6f8>
1000f7e0:	00bfffc4 	movi	r2,-1
1000f7e4:	003fd006 	br	1000f728 <__alt_data_end+0xf800f728>

1000f7e8 <__call_exitprocs>:
1000f7e8:	defff504 	addi	sp,sp,-44
1000f7ec:	df000915 	stw	fp,36(sp)
1000f7f0:	dd400615 	stw	r21,24(sp)
1000f7f4:	dc800315 	stw	r18,12(sp)
1000f7f8:	dfc00a15 	stw	ra,40(sp)
1000f7fc:	ddc00815 	stw	r23,32(sp)
1000f800:	dd800715 	stw	r22,28(sp)
1000f804:	dd000515 	stw	r20,20(sp)
1000f808:	dcc00415 	stw	r19,16(sp)
1000f80c:	dc400215 	stw	r17,8(sp)
1000f810:	dc000115 	stw	r16,4(sp)
1000f814:	d9000015 	stw	r4,0(sp)
1000f818:	2839883a 	mov	fp,r5
1000f81c:	04800044 	movi	r18,1
1000f820:	057fffc4 	movi	r21,-1
1000f824:	00840074 	movhi	r2,4097
1000f828:	1085d604 	addi	r2,r2,5976
1000f82c:	12000017 	ldw	r8,0(r2)
1000f830:	45005217 	ldw	r20,328(r8)
1000f834:	44c05204 	addi	r19,r8,328
1000f838:	a0001c26 	beq	r20,zero,1000f8ac <__call_exitprocs+0xc4>
1000f83c:	a0800117 	ldw	r2,4(r20)
1000f840:	15ffffc4 	addi	r23,r2,-1
1000f844:	b8000d16 	blt	r23,zero,1000f87c <__call_exitprocs+0x94>
1000f848:	14000044 	addi	r16,r2,1
1000f84c:	8421883a 	add	r16,r16,r16
1000f850:	8421883a 	add	r16,r16,r16
1000f854:	84402004 	addi	r17,r16,128
1000f858:	a463883a 	add	r17,r20,r17
1000f85c:	a421883a 	add	r16,r20,r16
1000f860:	e0001e26 	beq	fp,zero,1000f8dc <__call_exitprocs+0xf4>
1000f864:	80804017 	ldw	r2,256(r16)
1000f868:	e0801c26 	beq	fp,r2,1000f8dc <__call_exitprocs+0xf4>
1000f86c:	bdffffc4 	addi	r23,r23,-1
1000f870:	843fff04 	addi	r16,r16,-4
1000f874:	8c7fff04 	addi	r17,r17,-4
1000f878:	bd7ff91e 	bne	r23,r21,1000f860 <__alt_data_end+0xf800f860>
1000f87c:	00800034 	movhi	r2,0
1000f880:	10800004 	addi	r2,r2,0
1000f884:	10000926 	beq	r2,zero,1000f8ac <__call_exitprocs+0xc4>
1000f888:	a0800117 	ldw	r2,4(r20)
1000f88c:	1000301e 	bne	r2,zero,1000f950 <__call_exitprocs+0x168>
1000f890:	a0800017 	ldw	r2,0(r20)
1000f894:	10003226 	beq	r2,zero,1000f960 <__call_exitprocs+0x178>
1000f898:	a009883a 	mov	r4,r20
1000f89c:	98800015 	stw	r2,0(r19)
1000f8a0:	00000000 	call	10000000 <__alt_mem_sdram>
1000f8a4:	9d000017 	ldw	r20,0(r19)
1000f8a8:	a03fe41e 	bne	r20,zero,1000f83c <__alt_data_end+0xf800f83c>
1000f8ac:	dfc00a17 	ldw	ra,40(sp)
1000f8b0:	df000917 	ldw	fp,36(sp)
1000f8b4:	ddc00817 	ldw	r23,32(sp)
1000f8b8:	dd800717 	ldw	r22,28(sp)
1000f8bc:	dd400617 	ldw	r21,24(sp)
1000f8c0:	dd000517 	ldw	r20,20(sp)
1000f8c4:	dcc00417 	ldw	r19,16(sp)
1000f8c8:	dc800317 	ldw	r18,12(sp)
1000f8cc:	dc400217 	ldw	r17,8(sp)
1000f8d0:	dc000117 	ldw	r16,4(sp)
1000f8d4:	dec00b04 	addi	sp,sp,44
1000f8d8:	f800283a 	ret
1000f8dc:	a0800117 	ldw	r2,4(r20)
1000f8e0:	80c00017 	ldw	r3,0(r16)
1000f8e4:	10bfffc4 	addi	r2,r2,-1
1000f8e8:	15c01426 	beq	r2,r23,1000f93c <__call_exitprocs+0x154>
1000f8ec:	80000015 	stw	zero,0(r16)
1000f8f0:	183fde26 	beq	r3,zero,1000f86c <__alt_data_end+0xf800f86c>
1000f8f4:	95c8983a 	sll	r4,r18,r23
1000f8f8:	a0806217 	ldw	r2,392(r20)
1000f8fc:	a5800117 	ldw	r22,4(r20)
1000f900:	2084703a 	and	r2,r4,r2
1000f904:	10000b26 	beq	r2,zero,1000f934 <__call_exitprocs+0x14c>
1000f908:	a0806317 	ldw	r2,396(r20)
1000f90c:	2088703a 	and	r4,r4,r2
1000f910:	20000c1e 	bne	r4,zero,1000f944 <__call_exitprocs+0x15c>
1000f914:	89400017 	ldw	r5,0(r17)
1000f918:	d9000017 	ldw	r4,0(sp)
1000f91c:	183ee83a 	callr	r3
1000f920:	a0800117 	ldw	r2,4(r20)
1000f924:	15bfbf1e 	bne	r2,r22,1000f824 <__alt_data_end+0xf800f824>
1000f928:	98800017 	ldw	r2,0(r19)
1000f92c:	153fcf26 	beq	r2,r20,1000f86c <__alt_data_end+0xf800f86c>
1000f930:	003fbc06 	br	1000f824 <__alt_data_end+0xf800f824>
1000f934:	183ee83a 	callr	r3
1000f938:	003ff906 	br	1000f920 <__alt_data_end+0xf800f920>
1000f93c:	a5c00115 	stw	r23,4(r20)
1000f940:	003feb06 	br	1000f8f0 <__alt_data_end+0xf800f8f0>
1000f944:	89000017 	ldw	r4,0(r17)
1000f948:	183ee83a 	callr	r3
1000f94c:	003ff406 	br	1000f920 <__alt_data_end+0xf800f920>
1000f950:	a0800017 	ldw	r2,0(r20)
1000f954:	a027883a 	mov	r19,r20
1000f958:	1029883a 	mov	r20,r2
1000f95c:	003fb606 	br	1000f838 <__alt_data_end+0xf800f838>
1000f960:	0005883a 	mov	r2,zero
1000f964:	003ffb06 	br	1000f954 <__alt_data_end+0xf800f954>

1000f968 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
1000f968:	defffd04 	addi	sp,sp,-12
1000f96c:	df000215 	stw	fp,8(sp)
1000f970:	df000204 	addi	fp,sp,8
1000f974:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
1000f978:	0001883a 	nop
1000f97c:	e0bfff17 	ldw	r2,-4(fp)
1000f980:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
1000f984:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
1000f988:	10000226 	beq	r2,zero,1000f994 <_exit+0x2c>
    ALT_SIM_FAIL();
1000f98c:	002af070 	cmpltui	zero,zero,43969
1000f990:	00000106 	br	1000f998 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
1000f994:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
1000f998:	003fff06 	br	1000f998 <__alt_data_end+0xf800f998>
